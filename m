From: Carl Worth <cworth@cworth.org>
Subject: Instructions concerning detached head lead to lost local changes
Date: Thu, 01 Feb 2007 14:51:04 -0800
Message-ID: <87mz3xa3vr.wl%cworth@cworth.org>
Mime-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: multipart/signed;
 boundary="pgp-sign-Multipart_Thu_Feb__1_14:50:58_2007-1"; micalg=pgp-sha1;
 protocol="application/pgp-signature"
Content-Transfer-Encoding: 7bit
To: git@vger.kernel.org
X-From: git-owner@vger.kernel.org Thu Feb 01 23:51:24 2007
Return-path: <git-owner@vger.kernel.org>
Envelope-to: gcvg-git@gmane.org
Received: from vger.kernel.org ([209.132.176.167])
	by lo.gmane.org with esmtp (Exim 4.50)
	id 1HCklu-0006RB-1M
	for gcvg-git@gmane.org; Thu, 01 Feb 2007 23:51:14 +0100
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1422664AbXBAWvK (ORCPT <rfc822;gcvg-git@m.gmane.org>);
	Thu, 1 Feb 2007 17:51:10 -0500
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S1422681AbXBAWvK
	(ORCPT <rfc822;git-outgoing>); Thu, 1 Feb 2007 17:51:10 -0500
Received: from cworth.org ([217.160.249.188]:58564 "EHLO theworths.org"
	rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
	id S1422664AbXBAWvJ (ORCPT <rfc822;git@vger.kernel.org>);
	Thu, 1 Feb 2007 17:51:09 -0500
Received: (qmail 23732 invoked from network); 1 Feb 2007 17:51:05 -0500
Received: from localhost (HELO raht.cworth.org) (127.0.0.1)
  by localhost with SMTP; 1 Feb 2007 17:51:05 -0500
User-Agent: Wanderlust/2.14.0 (Africa) Emacs/21.4 Mule/5.0 (SAKAKI)
Sender: git-owner@vger.kernel.org
Precedence: bulk
X-Mailing-List: git@vger.kernel.org
Archived-At: <http://permalink.gmane.org/gmane.comp.version-control.git/38422>

--pgp-sign-Multipart_Thu_Feb__1_14:50:58_2007-1
Content-Type: text/plain; charset=US-ASCII

So after some recent experiments to explore all this detached head
stuff, I found myself making a change to my code having forgotten I
had some old state checked out.

So, I tried doing something like:

	git checkout master

in order to get where I wanted to be. I was stopped with the warning:

	You are not on any branch and switching to branch 'master'
	may lose your changes.  At this point, you can do one of two things:
	 (1) Decide it is Ok and say 'git checkout -f master';
	 (2) Start a new branch from the current commit, by saying
	     'git checkout -b <branch-name>'.

At this point, I _knew_ that I didn't care about the state I was
leaving, (it was something random that I had done for testing). So I
definitely didn't want to name it with option (2).

I also knew I hadn't done any commits while detached, which is what I
thought the warning was all about. So I wasn't worried about losing
nothing with option (1).

But I found that after "git checkout -f master" I lost the dirty
changes I had made. And I don't see anything in the message above
telling me a better way to get from the state I was in to the state I
wanted.

I don't know if the "-f" always existed for git-checkout, or if it was
added to support this warning. But clearly, the current warning and
suggestion did not help in this case.

And what would have worked great is if the original checkout had just
worked and carried along my dirty changes, (just as would have
happened if I found I had accidentally made changes while on the wrong
branch instead of accidentally making changes while detached).

Can we fix this please?

-Carl

--pgp-sign-Multipart_Thu_Feb__1_14:50:58_2007-1
Content-Type: application/pgp-signature
Content-Transfer-Encoding: 7bit

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.5 (GNU/Linux)

iD8DBQBFwm7Y6JDdNq8qSWgRAozFAKCJk7JtKQkI3VGzbcctdASKVlKRuwCcD+2K
k2tK2YvbNRVt8M3xUDTgXrw=
=dJFw
-----END PGP SIGNATURE-----

--pgp-sign-Multipart_Thu_Feb__1_14:50:58_2007-1--
