From: Carl Worth <cworth@cworth.org>
Subject: Re: Importing from tarballs; add, rm, update-index?
Date: Fri, 12 Jan 2007 11:34:32 -0800
Message-ID: <873b6gxcmv.wl%cworth@cworth.org>
References: <6efbd9b70701120541n5dc4d0e1va50ae96543d8c80@mail.gmail.com>
	<7virfct737.fsf@assigned-by-dhcp.cox.net>
Mime-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: multipart/signed;
 boundary="pgp-sign-Multipart_Fri_Jan_12_11:34:27_2007-1"; micalg=pgp-sha1;
 protocol="application/pgp-signature"
Content-Transfer-Encoding: 7bit
Cc: "Chris Riddoch" <riddochc@gmail.com>, git@vger.kernel.org
X-From: git-owner@vger.kernel.org Fri Jan 12 20:37:10 2007
Return-path: <git-owner@vger.kernel.org>
Envelope-to: gcvg-git@gmane.org
Received: from vger.kernel.org ([209.132.176.167])
	by lo.gmane.org with esmtp (Exim 4.50)
	id 1H5SCw-0000hS-Lp
	for gcvg-git@gmane.org; Fri, 12 Jan 2007 20:36:59 +0100
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S964958AbXALTgt (ORCPT <rfc822;gcvg-git@m.gmane.org>);
	Fri, 12 Jan 2007 14:36:49 -0500
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S964843AbXALTgt
	(ORCPT <rfc822;git-outgoing>); Fri, 12 Jan 2007 14:36:49 -0500
Received: from mx1.redhat.com ([66.187.233.31]:33572 "EHLO mx1.redhat.com"
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S965047AbXALTgs (ORCPT <rfc822;git@vger.kernel.org>);
	Fri, 12 Jan 2007 14:36:48 -0500
Received: from int-mx1.corp.redhat.com (int-mx1.corp.redhat.com [172.16.52.254])
	by mx1.redhat.com (8.12.11.20060308/8.12.11) with ESMTP id l0CJaaQR015199;
	Fri, 12 Jan 2007 14:36:36 -0500
Received: from mail.boston.redhat.com (mail.boston.redhat.com [172.16.76.12])
	by int-mx1.corp.redhat.com (8.13.1/8.13.1) with ESMTP id l0CJaaEk022022;
	Fri, 12 Jan 2007 14:36:36 -0500
Received: from raht.cworth.org (sebastian-int.corp.redhat.com [172.16.52.221])
	by mail.boston.redhat.com (8.12.11.20060308/8.12.11) with ESMTP id l0CJaYMo009789;
	Fri, 12 Jan 2007 14:36:35 -0500
To: Junio C Hamano <junkio@cox.net>
In-Reply-To: <7virfct737.fsf@assigned-by-dhcp.cox.net>
User-Agent: Wanderlust/2.14.0 (Africa) Emacs/21.4 Mule/5.0 (SAKAKI)
Sender: git-owner@vger.kernel.org
Precedence: bulk
X-Mailing-List: git@vger.kernel.org
Archived-At: <http://permalink.gmane.org/gmane.comp.version-control.git/36696>

--pgp-sign-Multipart_Fri_Jan_12_11:34:27_2007-1
Content-Type: text/plain; charset=US-ASCII

On Fri, 12 Jan 2007 10:47:56 -0800, Junio C Hamano wrote:
> People new to git need to learn that the next commit is prepared
> not in the working tree but in a separate entity (staging area),

Why's that? Git really provides two separate notions here.

1. Prepare content in staging area, then commit it.

	Working with this notion, the commands a user might use are
	"git update-index", (and more recently "git add"), "git
	commit", and "git commit -a".

2. Prepare content in working tree, and commit from there

	Working with this notion, the commands a user might use are
	"git add" (to add a new file---not the new staging add),
	"git commit files...", and "git commit -a".

> "git-update-index".  I do not have anything against "git stage"
> but I simply do not see the point, other than "git update" would
> imply something entirely different to people coming from other
> SCM so we would want to avoid the word, and "git update-index"
> is too long to type every day.

Yes, those would be the only reasons for the rename. If those aren't
important then just declare "update-index" the porcelain command.

> > First, specifying extra files after 'git commit' bypasses the index.
>
> Which I happen to think is a misfeature.

But this feature _exists_ in git, and it's also _extremely_ useful.

It also just happens to provide an alternate concept by which someone
can understand "commit -a", (not that "commit -a" shows up under both
of the conceptual notions I described above).

I still don't understand how people argue so strongly against the
conceptual notion of "committing content from working tree" when git
does provide this functionality, and it also just happens to exactly
match what a lot of people want to do anyway.

The index is still there, and will still benefit the user during merge
conflicts, but there's no requirement for the user to think of the
index as a staging area to get that benefit. And there's particularly
no need for the user to be forced to conceptualize every commit as
first being staged before committed.

Where's the actual benefit to the user in only promoting the "stage
content, then commit" model?

-Carl

--pgp-sign-Multipart_Fri_Jan_12_11:34:27_2007-1
Content-Type: application/pgp-signature
Content-Transfer-Encoding: 7bit

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.5 (GNU/Linux)

iD8DBQBFp+LI6JDdNq8qSWgRAkY7AKCXe/h9m5yWJKJXk0Zdmj0w47LwYgCbB6Vs
cWUuKlF9LH5B1/+CrynV4KQ=
=lOHW
-----END PGP SIGNATURE-----

--pgp-sign-Multipart_Fri_Jan_12_11:34:27_2007-1--
