From: Mark Brown <broonie@opensource.wolfsonmicro.com>
Subject: Re: Newbie grief
Date: Fri, 4 May 2012 17:29:48 +0100
Message-ID: <20120504162947.GA2311@sirena.org.uk>
References: <4FA3E31A.6060606@op5.se>
 <6211a2de-a545-41c3-9fb5-e7e3033b45f4@mail>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Cc: Andreas Ericsson <ae@op5.se>,
	Felipe Contreras <felipe.contreras@gmail.com>,
	"Randal L. Schwartz" <merlyn@stonehenge.com>,
	Sitaram Chamarty <sitaramc@gmail.com>,
	Ted Ts'o <tytso@mit.edu>, Seth Robertson <in-gitvger@baka.org>,
	git@vger.kernel.org, Rich Pixley <rich.pixley@palm.com>
To: Stephen Bash <bash@genarts.com>
X-From: git-owner@vger.kernel.org Fri May 04 18:30:02 2012
Return-path: <git-owner@vger.kernel.org>
Envelope-to: gcvg-git-2@plane.gmane.org
Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <git-owner@vger.kernel.org>)
	id 1SQLOL-0000Jq-Ph
	for gcvg-git-2@plane.gmane.org; Fri, 04 May 2012 18:30:02 +0200
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1757446Ab2EDQ35 (ORCPT <rfc822;gcvg-git-2@m.gmane.org>);
	Fri, 4 May 2012 12:29:57 -0400
Received: from cassiel.sirena.org.uk ([80.68.93.111]:34428 "EHLO
	cassiel.sirena.org.uk" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752667Ab2EDQ34 (ORCPT <rfc822;git@vger.kernel.org>);
	Fri, 4 May 2012 12:29:56 -0400
Received: from broonie by cassiel.sirena.org.uk with local (Exim 4.72)
	(envelope-from <broonie@sirena.org.uk>)
	id 1SQLO8-0000zz-1T; Fri, 04 May 2012 17:29:48 +0100
Content-Disposition: inline
In-Reply-To: <6211a2de-a545-41c3-9fb5-e7e3033b45f4@mail>
X-Cookie: This login session: $13.99
User-Agent: Mutt/1.5.20 (2009-06-14)
X-SA-Exim-Connect-IP: <locally generated>
X-SA-Exim-Mail-From: broonie@sirena.org.uk
X-SA-Exim-Scanned: No (on cassiel.sirena.org.uk); SAEximRunCond expanded to false
Sender: git-owner@vger.kernel.org
Precedence: bulk
List-ID: <git.vger.kernel.org>
X-Mailing-List: git@vger.kernel.org
Archived-At: <http://permalink.gmane.org/gmane.comp.version-control.git/197036>

On Fri, May 04, 2012 at 10:59:30AM -0400, Stephen Bash wrote:

> If my hg-foo isn't too out of date...  The hg recipe creates 4000
> "heads" on a single branch, rather than 4000 branches (see the 'hg
> heads' command).  This is basically the point Rich is arguing I
> believe.  hg allows for multiple tip commits all with the same branch
> name (IMO this is important because hg branch names are permanently
> recorded in their version of the commit object).

> This is a *fundamental* difference in the implementation of the two
> tools (and causes confusion because now "branch" has two slightly
> different meanings).  However, IMHO, philosophically it all boils down
> to the same thing: development has forked and has to be merged.
> Whether that fork has a name or not is up to the tool.  In hg it
> doesn't *have* to have a name (multiple heads per branch), in git it
> does (single head per branch).

Ah, this makes some sense - I *think* it's coming down not so much that
you have to name the branches (googling around it seems hg does assign
names, it's just that they're autogenerated numbers) as to the fact that
unless you branch directly from wherever your origin repository is git
doesn't keep track of where you're ultimately trying to merge development
back to.

If the above is right then some UI around remotes and branch --track and
--set-upstream which provides an automated way of saying "this is a
scratch branch for merge into X" and can then do things like helping
with merging and enumerating all the scratch branches for a given
destination, or with bundling up all the scratch branches and dropping
them elsewhere for merge might do the trick?  A "strong" branch kind of
thing.

This does come up a bit with traditional git workflows - I have it a
little when working between my desktop and my laptop - but is IME
usually resolved by publishing frequently to some central location
frequently and then rebasing if lots of local merges aren't approved of
in your workflow.  git (at least in kernel usage) has more of a
"building a patch series" model oriented around preparing things for
review.
