From: Yasushi SHOJI <yashi@atmark-techno.com>
Subject: Re: git diff-index with relative git-dir does not work
Date: Tue, 09 Feb 2010 22:10:25 +0900
Message-ID: <87wrymwo5a.wl@dns1.atmark-techno.com>
References: <871vguy8hz.wl@dns1.atmark-techno.com>
	<fcaeb9bf1002090358v3d7f69d5ra80c186d30a1304d@mail.gmail.com>
Mime-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=US-ASCII
Cc: git@vger.kernel.org
To: Nguyen Thai Ngoc Duy <pclouds@gmail.com>
X-From: git-owner@vger.kernel.org Tue Feb 09 14:10:33 2010
Return-path: <git-owner@vger.kernel.org>
Envelope-to: gcvg-git-2@lo.gmane.org
Received: from vger.kernel.org ([209.132.180.67])
	by lo.gmane.org with esmtp (Exim 4.69)
	(envelope-from <git-owner@vger.kernel.org>)
	id 1NeprM-0007fY-BD
	for gcvg-git-2@lo.gmane.org; Tue, 09 Feb 2010 14:10:32 +0100
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754214Ab0BINK1 (ORCPT <rfc822;gcvg-git-2@m.gmane.org>);
	Tue, 9 Feb 2010 08:10:27 -0500
Received: from dns1.atmark-techno.com ([210.191.215.170]:45428 "EHLO
	dns1.atmark-techno.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1754199Ab0BINK0 (ORCPT <rfc822;git@vger.kernel.org>);
	Tue, 9 Feb 2010 08:10:26 -0500
Received: from sv-prius.atmark-techno.com (sv-prius.local-network [192.168.10.102])
	by dns1.atmark-techno.com (Postfix) with ESMTP id A7617C2E07;
	Tue,  9 Feb 2010 22:10:25 +0900 (JST)
Received: from wat.atmark-techno.com (unknown [172.16.10.1])
	by sv-prius.atmark-techno.com (Postfix) with ESMTP id 6CA82132005C;
	Tue,  9 Feb 2010 22:10:25 +0900 (JST)
In-Reply-To: <fcaeb9bf1002090358v3d7f69d5ra80c186d30a1304d@mail.gmail.com>
User-Agent: Wanderlust/2.14.0
Sender: git-owner@vger.kernel.org
Precedence: bulk
List-ID: <git.vger.kernel.org>
X-Mailing-List: git@vger.kernel.org
Archived-At: <http://permalink.gmane.org/gmane.comp.version-control.git/139402>

At Tue, 9 Feb 2010 18:58:51 +0700,
Nguyen Thai Ngoc Duy wrote:
> 
> On 2/9/10, Yasushi SHOJI <yashi@atmark-techno.com> wrote:
> >  ...
> >  This is because static variable 'base' in sha1_file_name is already
> >  assigned _before_ setup_work_tree() from cmd_diff_index() is
> >  called. setup_work_tree() eventually chdir to the given work tree dir,
> >  but we use the old base to generate object file path. And that cause
> >  open(2) to fail because the object file path and the current dir is
> >  not in sync any more.
> >
> >  So, is it correct to assume that we must call setup_work_tree()
> >  _before_ any function which call getter/setter in environment.c?  This
> >  including open_sha1_file, in this case.
> 
> We must if gitdir is relative to cwd (and will be moved by
> setup_work_tree). Or just make gitdir absolute path.

ok. thanks.

> >  Also, would it be a good idea to make all builtin command to
> >  _explicitly_ call setup_* functions, so that we can find calling order
> >  bug?
> 
> If you agree that writing "RUN_SETUP" in git.c is explicit, then all
> builtin commands do explictly call setup_*. It's about relative
> directories and cwd being moved around.

oops.  I had omitted too much words.

In the diff-index case, it, indeed, has RUN_SETUP explicitly
set. however, it does not have NEED_WORK_TREE set.  And, this is
correct in the current semantics because diff-index is a tool to
compare the index and the object store. it does not need a work tree.

However, diff-index is used in describe which need a work tree if
--dirty is given.  That means that diff-index might be called
with --work-tree.

> >  In that case, we must change the setup functions signature to
> >  allow marking "not interested" or something.
> 
> I'm not sure I get your idea.

Given that in the current form of git, many built-in command is called
by many other built-in commands. It is hard to predict what is needed
and what's not.  Plus, --git-dir and --work-tree are options to git
itself not built-in's.  So, I thought it might be a good idea to call,
say, setup_work_tree_with_abs_path(), regardless of NEED_WORK_TREE, to
explicitly setup run time environment before any other part of the
code call, say, open_sha1_file.

If calling those functions are not acceptable due to speed or other
issues, making them debug / poison code might be enough.
-- 
         yashi
