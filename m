From: Carl Worth <cworth@cworth.org>
Subject: Ideas for improving the filter-branch workflow
Date: Tue, 20 Nov 2007 11:24:18 -0800
Message-ID: <8763zw3el9.wl%cworth@cworth.org>
References: <877ikc3gzc.wl%cworth@cworth.org>
Mime-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: multipart/signed;
 boundary="pgp-sign-Multipart_Tue_Nov_20_11:24:12_2007-1"; micalg=pgp-sha1;
 protocol="application/pgp-signature"
Content-Transfer-Encoding: 7bit
Cc: git@vger.kernel.org
To: Junio C Hamano <gitster@pobox.com>
X-From: git-owner@vger.kernel.org Tue Nov 20 20:25:47 2007
Return-path: <git-owner@vger.kernel.org>
Envelope-to: gcvg-git-2@gmane.org
Received: from vger.kernel.org ([209.132.176.167])
	by lo.gmane.org with esmtp (Exim 4.50)
	id 1IuYis-000112-B9
	for gcvg-git-2@gmane.org; Tue, 20 Nov 2007 20:25:26 +0100
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1755613AbXKTTZI (ORCPT <rfc822;gcvg-git-2@m.gmane.org>);
	Tue, 20 Nov 2007 14:25:08 -0500
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S1752610AbXKTTZI
	(ORCPT <rfc822;git-outgoing>); Tue, 20 Nov 2007 14:25:08 -0500
Received: from olra.theworths.org ([82.165.184.25]:53063 "EHLO
	olra.theworths.org" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1753273AbXKTTZG (ORCPT <rfc822;git@vger.kernel.org>);
	Tue, 20 Nov 2007 14:25:06 -0500
Received: from localhost (localhost [127.0.0.1])
	by olra.theworths.org (Postfix) with ESMTP id 1B05A431FB1;
	Tue, 20 Nov 2007 11:25:05 -0800 (PST)
X-Virus-Scanned: Debian amavisd-new at olra.theworths.org
Received: from olra.theworths.org ([127.0.0.1])
	by localhost (olra.theworths.org [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id LKsRTRB0s1rU; Tue, 20 Nov 2007 11:25:04 -0800 (PST)
Received: from raht.cworth.org (localhost [127.0.0.1])
	by olra.theworths.org (Postfix) with ESMTP id B1276431FB0;
	Tue, 20 Nov 2007 11:25:03 -0800 (PST)
In-Reply-To: <877ikc3gzc.wl%cworth@cworth.org>
User-Agent: Wanderlust/2.14.0 (Africa) Emacs/21.4 Mule/5.0 (SAKAKI)
Sender: git-owner@vger.kernel.org
Precedence: bulk
X-Mailing-List: git@vger.kernel.org
Archived-At: <http://permalink.gmane.org/gmane.comp.version-control.git/65572>

--pgp-sign-Multipart_Tue_Nov_20_11:24:12_2007-1
Content-Type: text/plain; charset=US-ASCII

On Tue, 20 Nov 2007 10:32:39 -0800, Carl Worth wrote:
> The rev-list is not optional, and a range of a..b will not rewrite
> only b.

It has since been explained to me that the original text was intended
to describe which branch tips will get updated. In that case, my
rewrite of the documentation leaves that part out.

Even so, I'm a bit confused by what the behavior is. When I run:

	git filter-branch HEAD

The output I get is:

	Ref 'refs/heads/master' was rewritten

	These refs were rewritten:

And nothing else after that. That's definitely confusing.

Also confusing is that the documentation emphasizes that I should
verify the newly rewritten heads against the backups in
refs/original. But I'm not given any guidance on how to access the
refs in refs/original. I don't know of standard git tools to list
these, ("git branch", "git branch -r", and "gitk --all" don't show
them for example). I can use something like "git log
original/refs/heads/master" but it takes a fair amount of knowledge to
get to that point.

Finally, I did my filter in multiple steps and found myself having to
do lots of manual cleanup. For example, on my second run of
git-filter-branch:

	Error:		Namespace refs/original/ not empty
	Cleanup:	rm -r .git/refs/original

And that failed attempt then triggers another problem:

	Error:		.git-rewrite already exists, please remove it
	Cleanup:	rm -r .git-rewrite

The second error was nice enough to tell me how to fix the problem,
(nothing ever indicates the need to cleanup refs/original that I can
tell). But I think this second error should never occur. The
filter-branch program should cleanup after itself if it fails.

Finally, I wonder if there's a better solution to the messiness of
making backups in refs/original, correctly documenting what branch
heads get rewritten, and then hoping that the user can find the
backups, use them to verify the new heads, and then clean them up.

One idea is to have two new sub-commands for git-filter-branch. Maybe
something like:

	git filter-branch --accept
	git filter-branch --reject	# or --undo or whatever

And these would do all the cleanup necessary.

During the intermediate state, (after filter-branch and before
"filter-branch --accept"), it would be nice if it were easier to
verify the results. For example, if filter-branch stored its backups
in refs/heads/rewrite-original/* instead of refs/original/refs/heads/*
then they would show up automatically in "gitk --all" for example.

Anyway, those are some ideas if anyone wants to hack on this further.

-Carl

--pgp-sign-Multipart_Tue_Nov_20_11:24:12_2007-1
Content-Type: application/pgp-signature
Content-Transfer-Encoding: 7bit

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.6 (GNU/Linux)

iD8DBQBHQzRi6JDdNq8qSWgRAvmxAKCGgT5B2cQwhLiFdaeRg9ZgwH/MygCgoEpA
VP9tzq0iJrOul2G+TqvIIm4=
=zijs
-----END PGP SIGNATURE-----

--pgp-sign-Multipart_Tue_Nov_20_11:24:12_2007-1--
