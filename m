From: =?iso-8859-1?Q?Bj=F6rn?= Steinbrink <B.Steinbrink@gmx.de>
Subject: Re: [doc] User Manual Suggestion
Date: Sun, 26 Apr 2009 13:28:02 +0200
Message-ID: <20090426112802.GC10155@atjola.homenet>
References: <alpine.LNX.2.00.0904241655090.2147@iabervon.org> <20090424213848.GA14493@coredump.intra.peff.net> <b4087cc50904241518w625a9890vecdd36bb937e76d5@mail.gmail.com> <b4087cc50904241525w7de597bfq7be89796947a14cc@mail.gmail.com> <alpine.LNX.2.00.0904241852500.2147@iabervon.org> <b4087cc50904241626h166c6b3bqa4ec714d4cb5662a@mail.gmail.com> <alpine.LNX.2.00.0904251445030.2147@iabervon.org> <b4087cc50904251216p617e347bmdc70e109298fa9b2@mail.gmail.com> <94a0d4530904251224g6b228448q276436f17f7e5cc3@mail.gmail.com> <E85677CA-FA7E-4777-97DF-9B295E89B83A@boostpro.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: QUOTED-PRINTABLE
Cc: Felipe Contreras <felipe.contreras@gmail.com>,
	Michael Witten <mfwitten@gmail.com>,
	Daniel Barkalow <barkalow@iabervon.org>,
	Jeff King <peff@peff.net>, Johan Herland <johan@herland.net>,
	git@vger.kernel.org, "J. Bruce Fields" <bfields@fieldses.org>
To: David Abrahams <dave@boostpro.com>
X-From: git-owner@vger.kernel.org Mon Apr 27 12:39:32 2009
Return-path: <git-owner@vger.kernel.org>
Envelope-to: gcvg-git-2@gmane.org
Received: from vger.kernel.org ([209.132.176.167])
	by lo.gmane.org with esmtp (Exim 4.50)
	id 1Ly2YY-0005ST-G1
	for gcvg-git-2@gmane.org; Sun, 26 Apr 2009 13:29:58 +0200
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753601AbZDZL2S convert rfc822-to-quoted-printable (ORCPT
	<rfc822;gcvg-git-2@m.gmane.org>); Sun, 26 Apr 2009 07:28:18 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S1753232AbZDZL2S
	(ORCPT <rfc822;git-outgoing>); Sun, 26 Apr 2009 07:28:18 -0400
Received: from mail.gmx.net ([213.165.64.20]:38667 "HELO mail.gmx.net"
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with SMTP
	id S1752675AbZDZL2R (ORCPT <rfc822;git@vger.kernel.org>);
	Sun, 26 Apr 2009 07:28:17 -0400
Received: (qmail invoked by alias); 26 Apr 2009 11:28:15 -0000
Received: from i59F554DA.versanet.de (EHLO atjola.local) [89.245.84.218]
  by mail.gmx.net (mp021) with SMTP; 26 Apr 2009 13:28:15 +0200
X-Authenticated: #5039886
X-Provags-ID: V01U2FsdGVkX18y85JDuiwyq6pJIM2hvUch24Y9Xr2+9lh2F1lpq1
	l0jwsw6twrPQfj
Content-Disposition: inline
In-Reply-To: <E85677CA-FA7E-4777-97DF-9B295E89B83A@boostpro.com>
User-Agent: Mutt/1.5.18 (2008-05-17)
X-Y-GMX-Trusted: 0
X-FuHaFi: 0.66
Sender: git-owner@vger.kernel.org
Precedence: bulk
List-ID: <git.vger.kernel.org>
X-Mailing-List: git@vger.kernel.org
Archived-At: <http://permalink.gmane.org/gmane.comp.version-control.git/117648>

On 2009.04.25 15:36:24 -0400, David Abrahams wrote:
> Where it's relevant when the user notices that two distinct files hav=
e =20
> the same id (because they happen to have the same contents) and wonde=
rs=20
> what's up.

Why would the user have to care about the object files in the repo? And
why would your implementation save the same object twice, in two
distinct files? The SHA-1 hash is created from the object, that means
the its type, size and data. It's not an id of a file in the working
tree, but of an object.

> It's not a foregone conclusion that objects with the same value have =
=20
> identical ids, but it's immediately apparent if the id is known to be=
 a=20
> hash.

You can't have two objects with the same contents to begin with, same
content =3D> same object.  You can just have that one object stored
multiple times in different places (for sane implementations this likel=
y
means that you have more than one repo to look at, and each has its own
copy of that object, but that's nothing you as an user should have to
care about).

It's an identity relation: same name/id =3D> same object. Unlike e.g. a
hash-table where you are expected to deal with collisions, and having
the same hash doesn't mean that you have identical data. But that's not
true of git, it expects an identity relation, which is IMHO better
expressed through "object name" or "object id". You can still say that
the name/id is generated by using a hash function, but the important
part is that the name/id is used to _uniquely_ identify an object, whic=
h
isn't apparent when you call it a hash.

Bj=F6rn
