From: Carl Worth <cworth@cworth.org>
Subject: Re: [RFC/PATCH] Add git-unresolve <paths>...
Date: Wed, 19 Apr 2006 15:31:15 -0700
Message-ID: <87wtdl2o5o.wl%cworth@cworth.org>
References: <7vu08p72sn.fsf@assigned-by-dhcp.cox.net>
	<87acah6zk6.wl%cworth@cworth.org>
	<7v8xq16y31.fsf@assigned-by-dhcp.cox.net>
Mime-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: multipart/signed;
 boundary="pgp-sign-Multipart_Wed_Apr_19_15:31:08_2006-1"; micalg=pgp-sha1;
 protocol="application/pgp-signature"
Content-Transfer-Encoding: 7bit
Cc: git@vger.kernel.org
X-From: git-owner@vger.kernel.org Thu Apr 20 00:35:26 2006
Return-path: <git-owner@vger.kernel.org>
Envelope-to: gcvg-git@gmane.org
Received: from vger.kernel.org ([209.132.176.167])
	by ciao.gmane.org with esmtp (Exim 4.43)
	id 1FWLGW-000311-MR
	for gcvg-git@gmane.org; Thu, 20 Apr 2006 00:35:17 +0200
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751292AbWDSWeW (ORCPT <rfc822;gcvg-git@m.gmane.org>);
	Wed, 19 Apr 2006 18:34:22 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S1751294AbWDSWeW
	(ORCPT <rfc822;git-outgoing>); Wed, 19 Apr 2006 18:34:22 -0400
Received: from cworth.org ([217.160.249.188]:1760 "EHLO theworths.org")
	by vger.kernel.org with ESMTP id S1751292AbWDSWeT (ORCPT
	<rfc822;git@vger.kernel.org>); Wed, 19 Apr 2006 18:34:19 -0400
Received: (qmail 25807 invoked from network); 19 Apr 2006 18:34:19 -0400
Received: from localhost (HELO raht.cworth.org) (127.0.0.1)
  by localhost with SMTP; 19 Apr 2006 18:34:19 -0400
To: Junio C Hamano <junkio@cox.net>
In-Reply-To: <7v8xq16y31.fsf@assigned-by-dhcp.cox.net>
User-Agent: Wanderlust/2.14.0 (Africa) Emacs/21.4 Mule/5.0 (SAKAKI)
Sender: git-owner@vger.kernel.org
Precedence: bulk
X-Mailing-List: git@vger.kernel.org
Archived-At: <http://permalink.gmane.org/gmane.comp.version-control.git/18947>

--pgp-sign-Multipart_Wed_Apr_19_15:31:08_2006-1
Content-Type: text/plain; charset=US-ASCII

On Wed, 19 Apr 2006 14:43:14 -0700, Junio C Hamano wrote:
>
> > It would be nice if the complementary operations of manually
> > resolving and unresolving a merge conflict had complementary command
> > names.
> 
> True.  I considered two other possibilities.
> 
>  * "git unmerge", because it creates unmerged index entries, and

This has the same problem as git-unresolve as compared to the old
git-resolve. Namely, it would provide an "unmerge" command that
syntactically looks like a complement to "merge" but in fact is an
entirely separate, (operating on different object types, etc.)

>  * "git update-index --unmerge", because this is just a special
>    kind of updates to the index file.

That seems like a very reasonable place to have this functionality (if
needed). Compared to things like "update-index --add" and
"update-index --remove" the desire for this operation is likely much
more rare, so perhaps doesn't merit its own command.

Meanwhile, I still think it's worth re-considering the original
problem. 

After a failed merge, I get a multi-parent diff from "git
diff". However, after updating the index, I can't find any way to get
multi-parent diffs anymore.

I'd still like to be able to do that, even when I know that what I
have in the index is good, and I don't want to undo it. So the
proposed unresolve (or update-index --unmerge, or whatever) is still
not totally satisfactory.

In this state, "git commit" is still multi-parent aware and will be
making a merged commit, (by examining .git/MERGE_HEAD). Wouldn't it be
reasonable to make "git diff --cached" also be aware of this mid-merge
state and display a multi-parent diff? at least as an option?

-Carl

PS. As a more bizarre suggestion, I've been idly wondering for some
time if it would make sense to provide names to allow the working tree
and the index to be treated as pseudo, in-progress objects. For
example, much of my initial (and occasionally residual) confusion
regarding "git diff" would be alleviated if I could run commands
something like:

	git diff HEAD TREE
	git diff HEAD INDEX
	git diff INDEX TREE

For this usage, perhaps INDEX and TREE are not the actual names that
git supports, but just some convenient refs that a user has set
up. And I don't have any proposal for what would be appropriate
low-level names for git to use for these pseudo-objects.

But I would sure be happy if I could just use refs like the above.

Then, if a concept like that existed, it should be rather
straightforward to achieve the multi-parent HEAD,MERGE_HEAD -> INDEX
diff that I'm after. It could probably come in handy in quite a few
other situations as well.

But I can imagine the idea might also break down quite badly. So just
let me know where it is totally stupid/infeasible.

--pgp-sign-Multipart_Wed_Apr_19_15:31:08_2006-1
Content-Type: application/pgp-signature
Content-Transfer-Encoding: 7bit

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2.2 (GNU/Linux)

iD8DBQBERroz6JDdNq8qSWgRAvkDAJwPEUpCTduJGusR79YyJHOzlmHr/wCZAR+b
2YRs/q8n0oWVt1Fv9Uq2uJs=
=6PU4
-----END PGP SIGNATURE-----

--pgp-sign-Multipart_Wed_Apr_19_15:31:08_2006-1--
