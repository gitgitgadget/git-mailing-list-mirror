From: Eric Blake <ebb9@byu.net>
Subject: Re: gnulib-tool --version
Date: Fri, 14 Mar 2008 22:37:41 -0600
Message-ID: <47DB5295.9080005@byu.net>
References: <910CF843580B3C40A25CD0D04B3908E286A29C@exchange4.comune.prato.local>	<200803150052.44573.bruno@clisp.org> <47DB12F3.8020504@byu.net> <200803150512.53166.bruno@clisp.org>
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Cc: bug-gnulib@gnu.org, git@vger.kernel.org
To: Bruno Haible <bruno@clisp.org>
X-From: git-owner@vger.kernel.org Sat Mar 15 05:38:03 2008
Return-path: <git-owner@vger.kernel.org>
Envelope-to: gcvg-git-2@gmane.org
Received: from vger.kernel.org ([209.132.176.167])
	by lo.gmane.org with esmtp (Exim 4.50)
	id 1JaO9i-0005Me-W7
	for gcvg-git-2@gmane.org; Sat, 15 Mar 2008 05:38:03 +0100
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1750796AbYCOEhX (ORCPT <rfc822;gcvg-git-2@m.gmane.org>);
	Sat, 15 Mar 2008 00:37:23 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S1750770AbYCOEhX
	(ORCPT <rfc822;git-outgoing>); Sat, 15 Mar 2008 00:37:23 -0400
Received: from qmta05.emeryville.ca.mail.comcast.net ([76.96.30.48]:53479 "EHLO
	QMTA05.emeryville.ca.mail.comcast.net" rhost-flags-OK-OK-OK-OK)
	by vger.kernel.org with ESMTP id S1750738AbYCOEhW (ORCPT
	<rfc822;git@vger.kernel.org>); Sat, 15 Mar 2008 00:37:22 -0400
Received: from OMTA01.emeryville.ca.mail.comcast.net ([76.96.30.11])
	by QMTA05.emeryville.ca.mail.comcast.net with comcast
	id 10921Z0010EPchoA50ya00; Sat, 15 Mar 2008 04:36:04 +0000
Received: from [192.168.0.103] ([67.166.125.73])
	by OMTA01.emeryville.ca.mail.comcast.net with comcast
	id 1GdL1Z0041b8C2B8M00000; Sat, 15 Mar 2008 04:37:22 +0000
X-Authority-Analysis: v=1.0 c=1 a=xe8BsctaAAAA:8 a=qgmcPZE8zYQQlwg6NE0A:9
 a=MsDueHGLuxM_8Ns52_MA:7 a=NU_gmj25jMCNKv5D7azH-qVb6L0A:4 a=eDFNAWYWrCwA:10
 a=rPt6xJ-oxjAA:10
User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.12) Gecko/20080213 Thunderbird/2.0.0.12 Mnenhy/0.7.5.666
In-Reply-To: <200803150512.53166.bruno@clisp.org>
X-Enigmail-Version: 0.95.6
Sender: git-owner@vger.kernel.org
Precedence: bulk
List-ID: <git.vger.kernel.org>
X-Mailing-List: git@vger.kernel.org
Archived-At: <http://permalink.gmane.org/gmane.comp.version-control.git/77304>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

[adding the git list]

According to Bruno Haible on 3/14/2008 10:12 PM:
| Take an example: Until 3 days ago,
|   $ git log 532f
| was equivalent to
|   $ git log 532f4b4a94e7df8e730e433d4cba9e4119641691
|
| But then there was a commit 532f65ac8de5a89ea0b159fc3b76ead5a53e9fea. Since
| then,
|   $ git log 532f
| gives an error message
|   error: short SHA1 532f is ambiguous.
|   fatal: ambiguous argument '532f': unknown revision or path not in the
working tree.
|   Use '--' to separate paths from revisions

The message comes from 'git rev-parse', which is called under the hood by
most other git commands to resolve a SHA1 prefix into a commit.

|
| To exclude the problem of ambiguous commit ids, with a reasonable
probability,
| I would therefore take the first 8 hex digits, not only the first 4.

'git rev-parse', and thus 'git describe', defaults to 7 hex digits, and
will display no fewer than 4 (although it displays as many as are
necessary to have a non-ambiguous output at the time it is run).  gnulib's
git-version-gen script intentionally asks 'git describe' for the shortest
prefix, on the grounds that developers don't like to type long random
strings, rather than sticking with the default of 7.

What is really needed is a method in git where once a SHA1 prefix becomes
ambiguous, you can still easily choose to resolve the ambiguity in favor
of the oldest commit that matches the prefix.  This is on the grounds that
there are times when the user knows that the prefix was generated by 'git
describe', and was not ambiguous at the time it was abbreviated.
Unfortunately, I don't know such a command option or special syntax to
'git rev-parse' to make this resolution occur.  And what's worse, the
error message from 'git rev-parse' doesn't help - it only states that the
prefix is either missing or ambiguous.  It would be much nicer to know
that the prefix is now too short (vs. never existed), to then know to try
the option to list all the alternative candidates and/or pick the oldest.

- --
Don't work too hard, make some time for fun as well!

Eric Blake             ebb9@byu.net
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.8 (Cygwin)
Comment: Public key at home.comcast.net/~ericblake/eblake.gpg
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iEYEARECAAYFAkfbUpUACgkQ84KuGfSFAYDsewCgrD9hRriDEYGWd/WlWIxLDRk6
yVYAoJMIPljUvCnqS4w38Kg2ckI9g88C
=dDhg
-----END PGP SIGNATURE-----
