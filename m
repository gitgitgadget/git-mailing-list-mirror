From: Junichi Uekawa <dancer@netfort.gr.jp>
Subject: Main branch being maintained with 'git am', how do mere mortals interact without too much conflicts?
Date: Sat, 10 Jan 2009 20:11:54 +0900
Message-ID: <87vdsntnyd.dancerj%dancer@netfort.gr.jp>
Mime-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=US-ASCII
To: git@vger.kernel.org
X-From: git-owner@vger.kernel.org Sat Jan 10 14:38:45 2009
Return-path: <git-owner@vger.kernel.org>
Envelope-to: gcvg-git-2@gmane.org
Received: from vger.kernel.org ([209.132.176.167])
	by lo.gmane.org with esmtp (Exim 4.50)
	id 1LLe2i-0001c9-3n
	for gcvg-git-2@gmane.org; Sat, 10 Jan 2009 14:38:24 +0100
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752431AbZAJNg7 (ORCPT <rfc822;gcvg-git-2@m.gmane.org>);
	Sat, 10 Jan 2009 08:36:59 -0500
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S1751802AbZAJNg7
	(ORCPT <rfc822;git-outgoing>); Sat, 10 Jan 2009 08:36:59 -0500
Received: from aegis.netfort.gr.jp ([219.94.144.215]:43215 "HELO
	aegis.netfort.gr.jp" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with SMTP id S1751120AbZAJNg6 (ORCPT <rfc822;git@vger.kernel.org>);
	Sat, 10 Jan 2009 08:36:58 -0500
Received: (qmail 11158 invoked by uid 0); 10 Jan 2009 13:36:56 -0000
Received: from unknown (HELO core2duo.dancer.pr.jp.netfort.gr.jp) (127.0.0.1)
  by aegis.netfort.gr.jp with SMTP; 10 Jan 2009 13:36:56 -0000
User-Agent: Wanderlust/2.14.0 (Africa) SEMI/1.14.6 (Maruoka) FLIM/1.14.9
 (=?ISO-8859-4?Q?Goj=F2?=) APEL/10.7 Emacs/22.2 (x86_64-pc-linux-gnu)
 MULE/5.0 (SAKAKI)
Sender: git-owner@vger.kernel.org
Precedence: bulk
List-ID: <git.vger.kernel.org>
X-Mailing-List: git@vger.kernel.org
Archived-At: <http://permalink.gmane.org/gmane.comp.version-control.git/105104>

Hi,

I've been maintaining my Git repository (monthlyreport.git) where most
people do not have push access, and I'm taking patches through e-mail
with 'git am'.

It often happens that I'm receiving patches which won't apply without
a merge ('git am -3') and happen to be conflict-resolving often,
because people work off a branch a few days before, and try to send
patches nearer the deadline (This is a monthly meeting resume, which
people are expected to submit their material, so this is kind of
normal).


One thing I'm worried is that users apparently have to throw away
their own change or do some conflict resolution.


User does 
  git pull xxxx
  edit ...
  git add 
  git commit 
  git format-patch -o ... HEAD^


I do bunch of 
    git am -3 (which usually has a conflict of some way or other)
    git add XXXX
    git am -3 --resolve
    git push


User then find that when doing

  git pull

again, a conflict will occur. 



I am thinking of recommending the users to create a branch

  git checkout -b my-work-for-2009-01 origin
  edit ...
  git add
  git commit
  git format-patch -o ... HEAD^
  send the email

and do

  git checkout master 
  git pull

and throw away their branches when they are included upstream.



Something tells me the problem is that I'm probably using a workflow
that resembles SVN too much, and users aren't used to branches yet.
Has anybody found this to be a problem, or better yet, is there a 
better workflow?



-- 
dancer@{netfort.gr.jp,debian.org}
