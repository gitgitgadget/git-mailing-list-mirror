From: Peter Krefting <peter@softwolves.pp.se>
Subject: [PATCH] import-tars: Make it possible to include the original commit ID
Date: Thu, 18 Feb 2010 14:24:21 +0100
Message-ID: <20100218132709.8CEBA2FC07@perkele>
References: <20100218140002.14f79853@gmail.com>
Mime-Version: 1.0
Content-Type: TEXT/PLAIN
Content-Transfer-Encoding: 7BIT
Cc: g2p.code@gmail.com
To: git@vger.kernel.org
X-From: git-owner@vger.kernel.org Thu Feb 18 14:27:23 2010
Return-path: <git-owner@vger.kernel.org>
Envelope-to: gcvg-git-2@lo.gmane.org
Received: from vger.kernel.org ([209.132.180.67])
	by lo.gmane.org with esmtp (Exim 4.69)
	(envelope-from <git-owner@vger.kernel.org>)
	id 1Ni6Pa-0004Xd-Ay
	for gcvg-git-2@lo.gmane.org; Thu, 18 Feb 2010 14:27:22 +0100
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753427Ab0BRN1R (ORCPT <rfc822;gcvg-git-2@m.gmane.org>);
	Thu, 18 Feb 2010 08:27:17 -0500
Received: from smtp.getmail.no ([84.208.15.66]:42846 "EHLO smtp.getmail.no"
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1752888Ab0BRN1Q (ORCPT <rfc822;git@vger.kernel.org>);
	Thu, 18 Feb 2010 08:27:16 -0500
Received: from smtp.getmail.no ([10.5.16.4]) by get-mta-out01.get.basefarm.net
 (Sun Java(tm) System Messaging Server 7.0-0.04 64bit (built Jun 20 2008))
 with ESMTP id <0KY100EISHDBPL30@get-mta-out01.get.basefarm.net> for
 git@vger.kernel.org; Thu, 18 Feb 2010 14:27:11 +0100 (MET)
Received: from perkele ([84.215.142.63]) by get-mta-in01.get.basefarm.net
 (Sun Java(tm) System Messaging Server 7.0-0.04 64bit (built Jun 20 2008))
 with ESMTP id <0KY100I1FHD9LR20@get-mta-in01.get.basefarm.net> for
 git@vger.kernel.org; Thu, 18 Feb 2010 14:27:10 +0100 (MET)
X-PMX-Version: 5.5.3.366731, Antispam-Engine: 2.7.0.366912,
 Antispam-Data: 2010.2.18.131536
Received: by perkele (Postfix, from userid 501)	id 8CEBA2FC07; Thu,
 18 Feb 2010 14:27:09 +0100 (CET)
In-reply-to: <20100218140002.14f79853@gmail.com>
Sender: git-owner@vger.kernel.org
Precedence: bulk
List-ID: <git.vger.kernel.org>
X-Mailing-List: git@vger.kernel.org
Archived-At: <http://permalink.gmane.org/gmane.comp.version-control.git/140338>

Add an option --readpax which makes import-tars read the commit ID
stored by git-archive, adding it to the default commit message.

Signed-off-by: Peter Krefting <peter@softwolves.pp.se>
---
> Someone with stronger perl-fu to parse the hash comment could print on
> stderr (keep me CC-ed if you do that):
>   This tarball was generated by git, from commit id $SHA1.

Actually, having this information could be useful, for instance to create
a "history-skipping" repository, and use bisect in that. When one finds
which released version causes the problem, one can bisect in the
original repository, using the commit ID indicated.

This applies on top of your patch.

 contrib/fast-import/import-tars.perl |   25 +++++++++++++++++++++++--
 1 files changed, 23 insertions(+), 2 deletions(-)

diff --git a/contrib/fast-import/import-tars.perl b/contrib/fast-import/import-tars.perl
index a5170a1..3451309 100755
--- a/contrib/fast-import/import-tars.perl
+++ b/contrib/fast-import/import-tars.perl
@@ -14,14 +14,20 @@
 ##
 ##  echo 'This is the commit message' > myfile.tar.bz2.msg
 ##  perl import-tars.perl --metainfo=msg myfile.tar.bz2
+##
+## Use --readpax to read the pax_global_header generated by git archive.
+## The commit ID stored in the header will be appended to the default
+## generated commit message for the imported tarball. If the parameter
+## is not given, the pax_global_header is ignored.
 
 use strict;
 use Getopt::Long;
 
 my $metaext = '';
+my $readpax;
 
-die "usage: import-tars [--metainfo=extension] *.tar.{gz,bz2,lzma,xz,Z}\n"
-	unless GetOptions('metainfo=s' => \$metaext) && @ARGV;
+die "usage: import-tars [--metainfo=extension] [--readpax] *.tar.{gz,bz2,lzma,xz,Z}\n"
+	unless GetOptions('metainfo=s' => \$metaext, 'readpax' => \$readpax) && @ARGV;
 
 my $branch_name = 'import-tars';
 my $branch_ref = "refs/heads/$branch_name";
@@ -61,6 +67,7 @@ foreach my $tar_file (@ARGV)
 	my $author_time = 0;
 	my $next_mark = 1;
 	my $have_top_dir = 1;
+	my $orig_commitid = '';
 	my ($top_dir, %files);
 
 	while (read(I, $_, 512) == 512) {
@@ -95,6 +102,16 @@ foreach my $tar_file (@ARGV)
 		$size = oct $size;
 		$mtime = oct $mtime;
 		next if $typeflag == 5; # directory
+		if (defined $readpax && $typeflag eq 'g' && $name eq 'pax_global_header')
+		{
+			while ($size > 0 && read(I, $_, 512) == 512) {
+				if (/52 comment=([0-9a-f]{40})/)
+				{
+					$orig_commitid = $1;
+				}
+			}
+			next;
+		}
 
 		print FI "blob\n", "mark :$next_mark\n";
 		if ($typeflag == 2) { # symbolic link
@@ -154,6 +171,10 @@ foreach my $tar_file (@ARGV)
 			close MSG;
 		}
 	}
+	elsif ($orig_commitid ne '')
+	{
+		$commit_msg .= "\n\nThis tarball was generated by git, from commit id\n$orig_commitid.";
+	}
 
 	print FI <<EOF;
 commit $branch_ref
-- 
1.7.0
