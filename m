From: "Greg A. Woods" <woods@planix.com>
Subject: Re: "git merge" merges too much!
Date: Mon, 30 Nov 2009 19:24:14 -0500
Message-ID: <m1NFGXS-000kn2C@most.weird.com>
References: <m1NEaLp-000kn1C@most.weird.com>
	<7vskbxewti.fsf@alter.siamese.dyndns.org>
	<m1NFBAx-000kmgC@most.weird.com>
	<20091130211744.GA27278@dpotapov.dyndns.org>
Reply-To: The Git Mailing List <git@vger.kernel.org>
Mime-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: multipart/signed;
 boundary="pgp-sign-Multipart_Mon_Nov_30_19:24:14_2009-1"; micalg=pgp-sha1;
 protocol="application/pgp-signature"
Content-Transfer-Encoding: 7bit
Cc: Dmitry Potapov <dpotapov@gmail.com>
To: The Git Mailing List <git@vger.kernel.org>
X-From: git-owner@vger.kernel.org Tue Dec 01 01:24:43 2009
Return-path: <git-owner@vger.kernel.org>
Envelope-to: gcvg-git-2@lo.gmane.org
Received: from vger.kernel.org ([209.132.176.167])
	by lo.gmane.org with esmtp (Exim 4.50)
	id 1NFGXq-0005CT-1l
	for gcvg-git-2@lo.gmane.org; Tue, 01 Dec 2009 01:24:42 +0100
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754113AbZLAAYW (ORCPT <rfc822;gcvg-git-2@m.gmane.org>);
	Mon, 30 Nov 2009 19:24:22 -0500
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S1752503AbZLAAYU
	(ORCPT <rfc822;git-outgoing>); Mon, 30 Nov 2009 19:24:20 -0500
Received: from most.weird.com ([204.92.254.2]:55446 "EHLO most.weird.com"
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1753470AbZLAAYO (ORCPT <rfc822;git@vger.kernel.org>);
	Mon, 30 Nov 2009 19:24:14 -0500
Received: from once.weird.com
	([204.92.254.13] port=52242)
	by most.weird.com([204.92.254.2] port=25)
	via TCP with esmtp (4217 bytes)
	(sender: <woods@once.weird.com>)
	(ident <woods> using rfc1413)
	id <m1NFGXS-000kn2C@most.weird.com>
	for <git@vger.kernel.org>;
	Mon, 30 Nov 2009 19:24:18 -0500 (EST)
	(Smail-3.2.0.122-Pre 2005-Nov-17 #1 built 2009-Feb-3)
In-Reply-To: <20091130211744.GA27278@dpotapov.dyndns.org>
User-Agent: Wanderlust/2.15.6 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.7 (=?ISO-8859-4?Q?Sanj=F2?=) APEL/10.7 Emacs/22.3
 (i386--netbsdelf) MULE/5.0 (SAKAKI)
X-Face: ;j3Eth2XV8h1Yfu<eXd9JL+"t;iT8?{X]Fjm`Qb]>*uL{<:dQ$#E[DB0gemGZJ"J#4fH*][
 lz;@-iwMv_u\6uIEKR0KY"=MzoQH#CrqBN`nG_5B@rrM8,f~Gr&h5a\=<t0loVf0$}bP=]i3OMh"n_
 _@m4/,~2`V=(-9LyW.)'`@E_fE^<4y7)BIe`A''/j-Y#gDNZERh%CCij'q-NA4F<|yjznEhd7=l^xH
 2.qD3o0IanGHERTW+z$G
Sender: git-owner@vger.kernel.org
Precedence: bulk
List-ID: <git.vger.kernel.org>
X-Mailing-List: git@vger.kernel.org
Archived-At: <http://permalink.gmane.org/gmane.comp.version-control.git/134157>

--pgp-sign-Multipart_Mon_Nov_30_19:24:14_2009-1
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: quoted-printable

At Tue, 1 Dec 2009 00:17:44 +0300, Dmitry Potapov <dpotapov@gmail.com> wrot=
e:
Subject: Re: "git merge" merges too much!
>=20
> It depends on the project and what tools are used, but using ccache and
> proper dependencies help a lot to reduce the cost of switching. In fact,
> it may be faster to switch to another branch and have to recompile a few
> files than to go into another working directory, because when you go to
> another working directory, you hit cold cache and things get very slow.

perhaps, sometimes, but at least with some tools that can more often
than not just end up with a confusing mess if you happen to change
something at exactly the wrong time, and with Git it seems almost too
easy to wildly change many files in the working directory, even if you
can get them back into their previous state relatively quickly

Things get even weirder if you happen to be playing with older branches
too -- most build tools don't have ability to follow files that go back
in time as they assume any product files newer than the sources are
already up-to-date, no matter how much older the sources might become on
a second build.

=46rom a good software hygiene perspective the only safe way I can see to
build a Git working directory after manipulating any branches with Git
is to do a complete "make clean && make" cycle.  That is until Git also
incorporates, or integrates with, really good build tools....  :-)


> And then if a project is huge and takes a lot of time to compile and
> test everything, I do not think, it is a good idea to build that in your
> work tree. Instead, you make a shanshot using git-archive and then run
> full build and test on it. In this way, you know that you test exactly
> what you have committed (you can amend any commit later until you
> publish it).
=20
I think this "git-new-workdir" script is the thing to try.  It probably
means keeping separate "configuration" branches, one for each build
working directory, but I think that's OK.

These source trees are big enough that one doesn't just go throwing
around entire copies of them willy-nilly.  Disk bandwidth is also a
limited resource we are very concerned about, not just disk space.

--=20
						Greg A. Woods
						Planix, Inc.

<woods@planix.com>       +1 416 218 0099        http://www.planix.com/

--pgp-sign-Multipart_Mon_Nov_30_19:24:14_2009-1
Content-Type: application/pgp-signature
Content-Transfer-Encoding: 7bit

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (NetBSD)

iD8DBQBLFGIuZn1xt3i/9H8RAhzrAKDxmaFAnRzpp65SnVHG/Mg5dw2yuwCeOPIL
60frd8JxxukmEA60gAqrRuI=
=nhFW
-----END PGP SIGNATURE-----

--pgp-sign-Multipart_Mon_Nov_30_19:24:14_2009-1--
