Received: from mout.kundenserver.de (mout.kundenserver.de [212.227.17.10])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 0121812B66
	for <git@vger.kernel.org>; Tue, 16 Jan 2024 08:49:16 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; dmarc=none (p=none dis=none) header.from=delpeuch.eu
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=delpeuch.eu
Received: from [192.168.178.189] ([93.206.2.182]) by mrelayeu.kundenserver.de
 (mreue106 [212.227.15.183]) with ESMTPSA (Nemesis) id
 1MV5G4-1rWmaD0Iju-00S91w for <git@vger.kernel.org>; Tue, 16 Jan 2024 09:44:03
 +0100
Message-ID: <8bb5e41e-4db9-4527-8492-3aca6a0f40bf@delpeuch.eu>
Date: Tue, 16 Jan 2024 09:44:02 +0100
Precedence: bulk
X-Mailing-List: git@vger.kernel.org
List-Id: <git.vger.kernel.org>
List-Subscribe: <mailto:git+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:git+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
User-Agent: Mozilla Thunderbird
Content-Language: en-US
From: Antonin Delpeuch <antonin@delpeuch.eu>
Subject: Custom merge drivers: accessing the pathnames and revisions of the
 files being merged
To: git@vger.kernel.org
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 8bit
X-Provags-ID: V03:K1:jkQ7VCN57c0OWfAKWveNOPZBSjn+EBzuUoR48zSdpFMhbbdzsSd
 MSzIclQQrcMZaKy/1zHV8irHlHX1CXnvBdQOH8RnlLqFJkTg5nvG2ujTMxeJKc7fwIeFS2P
 gifcQA/2mKGTRvzP19xdqauvDDLwsfoRd1Aai4NPe/iDAAqwsC6Sxb+rzLbbEDsUImZp2CY
 g7/E3d8TKE+TvfLFRzSEg==
X-Spam-Flag: NO
UI-OutboundReport: notjunk:1;M01:P0:oTDy59UjNhc=;DeHnPzNL4PeHD97OD6A+uek1iZ1
 CA9FJIQFgAOl8gERmbkmrsnIVS+I9kPCpmPc6Fcnyh1syhZSJpJNV1Fz6EvMFpN9nLc4c78gp
 ekY9okNTH9co2gOV7+29KEsnwd75il7ZzWINpqCOTXmBBcrJQk0bDbTAvyQhhJNJ4ebOv0003
 5XkVq7w6yfSKOhTnGkK18lYNlY1EyDwhw+FKMRYGvB4L6xRKS+XMa4RxYiLtiIGBqr0sP2H8Z
 u2R75Nuqtr7am/phhOE13ICgj7bOYZ0po8HE4qA8evR2n/ckMAQsFzCIPSeAMCs590eAFf90G
 Ge6yrau5QAvELj4CVdA8I9oyf++S1Cp/JajrLMN023mC+bufGAuD3iUY4f4vAl+2aGg5switM
 IYkA4yQaaT+AOV5Q71V6jc89a7h3bqtgFmF53c5E9maukd1d8ehkk4DC57SWHpJsyPVD61owh
 6/xb/vpYdHf9sb1GY8OQD1GQJ55i1xCdY4HhdXKcXaiMJeZk8yj9OZYhJq5GGmfiCvbcUDY1I
 HtwYTwgPbhEqhrLUhXol8VhSYJEYDq9szdiEfAMwVj4cRiTLPT6AIR3R9RHy4QnIucYZTRSvM
 RwMFyWghYrHbVfgJpRVe4BTjWyi8ucXa70dQPNp9MEKglRiXc3vb8JvPAkWDJgSlDeBKXaVjZ
 0oRu1qGsydYvCerWMq8AKx6oxQaqzKjnlx5lz4Wr1QZSE549XYKo2PkqAZEv8ioTYwWfrX/fW
 rH6LK9C8qOYLhumBAIsVDkmVDRc5ke5WheXPxJJ3gOD2lu2dvXP7HXnoj3uLdHBaG8HL8Bp4E
 +poX0bSNtbdjbhbIfXY4HwzRajZJuneaUeU3MbgYmZ05h4PzGWfnjyS7OK7B8e/JFugETGLCz
 Q6jz0EsI1o6ifRQ==

Hello,

Custom merge drivers [1] provide a convenient way to extend Git's merge 
algorithms. But as far as I can tell, there is no way to access the 
pathnames and revisions of the files to merge. Those would be very 
useful to generate informative conflict markers, like the built-in merge 
strategies do.

For instance, when merging with the ort strategy and diff3 conflict 
style, I get markers such as:

<<<<<<< HEAD:main/my_file.txt
…
||||||| 194c4190b:main/my_file.txt
…
=======
…
 >>>>>>> origin/branch:main/my_renamed_file.txt

Those strings at the end of conflict markers, with the revision and the 
pathname, are very useful to understand which parts are coming from where.

When implementing a custom merge driver, I don't see how to access this 
information to include it in the conflict markers. Custom merge drivers 
are typically invoked on temporary files generated by Git with 
uninformative paths, such as ".merge_file_NgiKjJ".

Therefore, my merge driver is only able to generate conflicts which look 
like this:

<<<<<<< .merge_file_NgiKjJ
…
||||||| .merge_file_D1XtCW
…
=======
…
 >>>>>>> .merge_file_WbmrBA

Of course, in a given rebase/merge session, the order in which the 
conflicting parts will be presented will remain consistent, so I will 
generally be able to remember which revision each part corresponds to,
but it's still a mental load I would ideally try to avoid. Also, if the 
rename detection heuristics have false positives, then I can get merge 
conflicts which come from unrelated files: in that case it is very 
useful to see the pathnames, to understand this situation better.

So, I wonder: would people be open to exposing additional parameters to 
merge drivers? For instance we could add parameters "%X", "%Y" "%Z" to 
expose those "revision:pathname" strings for each part. (I think colons 
cannot be part of revision names, so this can be parsed unambiguously by 
the custom merge driver to recover the revision and pathname 
independently, if needed.)

I would be happy to submit a patch for this if you think this makes 
sense. If it is already possible to access this information in another 
way, I would like to work on documenting that.

Best wishes,
Antonin

[1]: https://git-scm.com/docs/gitattributes#_defining_a_custom_merge_driver
