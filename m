From: Jeff King <peff@peff.net>
Subject: Re: [PATCH 1/3] refactor dir_add_name
Date: Tue, 12 Jun 2007 08:19:39 -0400
Message-ID: <20070612121939.GB25145@coredump.intra.peff.net>
References: <20070611123045.GA28814@coredump.intra.peff.net> <20070611133944.GA7008@coredump.intra.peff.net> <7vk5uaqx3q.fsf@assigned-by-dhcp.pobox.com> <20070611194651.GA15309@coredump.intra.peff.net> <7v7iq9lk76.fsf@assigned-by-dhcp.pobox.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Cc: Jonas Fonseca <fonseca@diku.dk>, git@vger.kernel.org
To: Junio C Hamano <gitster@pobox.com>
X-From: git-owner@vger.kernel.org Tue Jun 12 14:19:46 2007
Return-path: <git-owner@vger.kernel.org>
Envelope-to: gcvg-git@gmane.org
Received: from vger.kernel.org ([209.132.176.167])
	by lo.gmane.org with esmtp (Exim 4.50)
	id 1Hy5Ld-0002Py-IP
	for gcvg-git@gmane.org; Tue, 12 Jun 2007 14:19:45 +0200
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1755470AbXFLMTn (ORCPT <rfc822;gcvg-git@m.gmane.org>);
	Tue, 12 Jun 2007 08:19:43 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S1755353AbXFLMTm
	(ORCPT <rfc822;git-outgoing>); Tue, 12 Jun 2007 08:19:42 -0400
Received: from 66-23-211-5.clients.speedfactory.net ([66.23.211.5]:4069 "EHLO
	peff.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1755249AbXFLMTl (ORCPT <rfc822;git@vger.kernel.org>);
	Tue, 12 Jun 2007 08:19:41 -0400
Received: (qmail 17458 invoked from network); 12 Jun 2007 12:19:53 -0000
Received: from unknown (HELO coredump.intra.peff.net) (10.0.0.2)
  by peff.net with (DHE-RSA-AES128-SHA encrypted) SMTP; 12 Jun 2007 12:19:53 -0000
Received: by coredump.intra.peff.net (sSMTP sendmail emulation); Tue, 12 Jun 2007 08:19:39 -0400
Content-Disposition: inline
In-Reply-To: <7v7iq9lk76.fsf@assigned-by-dhcp.pobox.com>
Sender: git-owner@vger.kernel.org
Precedence: bulk
X-Mailing-List: git@vger.kernel.org
Archived-At: <http://permalink.gmane.org/gmane.comp.version-control.git/49953>

On Tue, Jun 12, 2007 at 12:13:01AM -0700, Junio C Hamano wrote:

> That looks ugly and also I am curious what the generated
> assembly would look like.  Hopefully the compiler is clever
> enough to generate the same code, but I dunno.

I was curious, too...the assembly generated by gcc -O2 is identical for
both versions.

> Unless somebody else more versed with C preprocessor tricks
> comes along and offers a better advice, I would go with the
> earlier simpler one with a big fat warning.  I however would
> prefer all caps name for a magic macro like this, whose sole
> point is a huge side effect.

Agreed on the all-caps (in either case) because of the side effects.
The more I think about it, I think the inline'd version is better.
Multiple evaluation pre-processor bugs are _nasty_ to find, and while
the implementation is ugly, it's better to contain the ugliness to one
spot than to introduce a dangerous interface that will be used all over.

I'm a bit rusty on my preprocessor tricks, but ISTR that there really
isn't a good way to portably avoid the problems. gcc has typeof, which
we could use to make temporary copies (which gcc would presumably
optimize out), but I imagine we don't want to be gcc-specific. We could
conditionally use that construct, but maybe at that point we're getting
as ugly as the inline).

-Peff
