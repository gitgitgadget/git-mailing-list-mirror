X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on dcvr.yhbt.net
X-Spam-Level: 
X-Spam-ASN: AS31976 209.132.176.0/21
X-Spam-Status: No, score=-3.5 required=3.0 tests=BAYES_00,
	HEADER_FROM_DIFFERENT_DOMAINS,MSGID_FROM_MTA_HEADER,RP_MATCHES_RCVD
	shortcircuit=no autolearn=ham autolearn_force=no version=3.4.0
From: Carl Worth <cworth@cworth.org>
Subject: Hyphens and hiding core commands (was: "init-db" can really be just "init")
Date: Mon, 27 Nov 2006 14:40:45 -0800
Message-ID: <87bqmswm1e.wl%cworth@cworth.org>
References: <Pine.LNX.4.64.0611271622260.9647@xanadu.home>
	<7vmz6cfsuw.fsf@assigned-by-dhcp.cox.net>
Mime-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: multipart/signed;
 boundary="pgp-sign-Multipart_Mon_Nov_27_14:40:37_2006-1"; micalg=pgp-sha1;
 protocol="application/pgp-signature"
Content-Transfer-Encoding: 7bit
NNTP-Posting-Date: Mon, 27 Nov 2006 22:42:03 +0000 (UTC)
Cc: Nicolas Pitre <nico@cam.org>, git@vger.kernel.org
Return-path: <git-owner@vger.kernel.org>
Envelope-to: gcvg-git@gmane.org
In-Reply-To: <7vmz6cfsuw.fsf@assigned-by-dhcp.cox.net>
User-Agent: Wanderlust/2.14.0 (Africa) Emacs/21.4 Mule/5.0 (SAKAKI)
Precedence: bulk
X-Mailing-List: git@vger.kernel.org
Archived-At: <http://permalink.gmane.org/gmane.comp.version-control.git/32457>
Received: from vger.kernel.org ([209.132.176.167]) by ciao.gmane.org with
 esmtp (Exim 4.43) id 1GopAd-0004R7-5M for gcvg-git@gmane.org; Mon, 27 Nov
 2006 23:41:51 +0100
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand id
 S934369AbWK0Wls (ORCPT <rfc822;gcvg-git@m.gmane.org>); Mon, 27 Nov 2006
 17:41:48 -0500
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S934420AbWK0Wls
 (ORCPT <rfc822;git-outgoing>); Mon, 27 Nov 2006 17:41:48 -0500
Received: from mx1.redhat.com ([66.187.233.31]:39594 "EHLO mx1.redhat.com")
 by vger.kernel.org with ESMTP id S934369AbWK0Wlr (ORCPT
 <rfc822;git@vger.kernel.org>); Mon, 27 Nov 2006 17:41:47 -0500
Received: from int-mx1.corp.redhat.com (int-mx1.corp.redhat.com
 [172.16.52.254]) by mx1.redhat.com (8.12.11.20060308/8.12.11) with ESMTP id
 kARMfdLc011076; Mon, 27 Nov 2006 17:41:39 -0500
Received: from mail.boston.redhat.com (mail.boston.redhat.com [172.16.76.12])
 by int-mx1.corp.redhat.com (8.13.1/8.13.1) with ESMTP id kARMfd5V003382; Mon,
 27 Nov 2006 17:41:39 -0500
Received: from raht.cworth.org (sebastian-int.corp.redhat.com
 [172.16.52.221]) by mail.boston.redhat.com (8.12.11.20060308/8.12.11) with
 ESMTP id kARMfZpc002777; Mon, 27 Nov 2006 17:41:36 -0500
To: Junio C Hamano <junkio@cox.net>
Sender: git-owner@vger.kernel.org

--pgp-sign-Multipart_Mon_Nov_27_14:40:37_2006-1
Content-Type: text/plain; charset=US-ASCII

On Mon, 27 Nov 2006 14:05:27 -0800, Junio C Hamano wrote:
> > Maybe that could be a good rule of thumb to have all porcelainish
> > commands not have any hyphen in their name, like "diff", "commit",
> > "add", etc. ?

I like the proposed rule-of-thumb very much. (Particularly if
"update-index" could be included on the list of things to eliminate,
in favor of a new "git resolve" for resolving merges.)

There's another rule-of-thumb I would like to propose that's a bit
harder to state, but I think is just as important (if not more):

	For introductory documentation it should never make sense to
	introduce a command with specific command-line options before
	the same command without options.

As examples, both "commit -a" and "cat-file -p" fail that test and
both appear in the git tutorial here:

	http://www.kernel.org/pub/software/scm/git/docs/tutorial.html

My proposals to fix those two are:

commit -a

   Change "commit" to commit the working tree. The current "commit
   index" option would be made available with a new "-i" or "--index"
   option, which could easily be made the default in a config file for
   any users that always want it. For merging, commit would also use
   the working tree, but would balk at any unmerged paths in the
   index, (which would have to be fixed with "git resolve" first).

cat-file -p

   Add new "cat" command with the functionality of "cat-file -p",
   (also succeeds in removing a hyphenated command from the
   tutorial).

> I was also hoping that would become the case except verify-tag,
> cherry-pick, and format-patch.

Here are some none-too-considered options for even cleaning up those:

verify-tag

   A new "git verify" which would accept any object specifier and do a
   restricted fsck on it, or a tag verification. Of course, the output
   should clearly indicate whether a signed-tag had been verified or
   just a tree object. [Perhaps the semantic mixing of signature
   verification and object integrity verification makes this a bad
   idea. I don't know.]

cherry-pick

   The name "cherry" is promising, but problematic in that it's
   already used for another command, (which is definitely at a
   lower-level in functionality, so would violate the rule-of-thumb
   being considered here).

format-patch

   I mentioned before that I'd like to see "export" and "import" as
   commands to replace the functionality of "format-patch" and
   "am". [These new names suggest something slightly different than
   formatting a patch for mailing and applying an email message, and
   perhaps even that difference should be taken advantage of.]

>                       Also I was wondering if it would
> make sense to give two dashes to the back-end ones that never
> get invoked by the end users directly (e.g. merge--recursive,
> upload--pack) but thought it was too ugly.

If you're willing to consider breaking backwards compatibility for
these, why not hide them even further? An idea I just had that would
hide them quite well would be to tuck them away as sub-commands of a
new "core" command. That is:

	git core merge-recursive
	git core http-fetch
	etc.

That would bury these away from tab-completion of "git-" and even
"git " with the completion scripts. It would still leave them
available with "git core " with the completion scripts of course.

It would also make things much more clear if these commands ever
slipped into an introductory tutorial, etc.

-Carl

--pgp-sign-Multipart_Mon_Nov_27_14:40:37_2006-1
Content-Type: application/pgp-signature
Content-Transfer-Encoding: 7bit

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.5 (GNU/Linux)

iD8DBQBFa2lt6JDdNq8qSWgRAiH5AKCm0TBlN39ovFP2H2ljv15Go3m92QCgotXk
zIM+sdsCnd/36Wx7nUtmSsg=
=Qb1r
-----END PGP SIGNATURE-----

