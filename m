X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on dcvr.yhbt.net
X-Spam-Level: 
X-Spam-ASN: AS31976 209.132.176.0/21
X-Spam-Status: No, score=-3.5 required=3.0 tests=AWL,BAYES_00,
	HEADER_FROM_DIFFERENT_DOMAINS,MSGID_FROM_MTA_HEADER,RP_MATCHES_RCVD
	shortcircuit=no autolearn=ham autolearn_force=no version=3.4.0
From: Carl Worth <cworth@cworth.org>
Subject: Re: [PATCH] make 'git add' a first class user friendly interface to the index
Date: Sat, 02 Dec 2006 08:49:05 -0800
Message-ID: <87psb22qgu.wl%cworth@cworth.org>
References: <Pine.LNX.4.64.0612011444310.9647@xanadu.home>
	<7vpsb36yem.fsf@assigned-by-dhcp.cox.net>
	<87veku3i0j.wl%cworth@cworth.org>
	<200612020828.57989.alan@chandlerfamily.org.uk>
Mime-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: multipart/signed;
 boundary="pgp-sign-Multipart_Sat_Dec__2_08:49:04_2006-1"; micalg=pgp-sha1;
 protocol="application/pgp-signature"
Content-Transfer-Encoding: 7bit
NNTP-Posting-Date: Sat, 2 Dec 2006 16:49:56 +0000 (UTC)
Cc: git@vger.kernel.org, Junio C Hamano <junkio@cox.net>,
	Nicolas Pitre <nico@cam.org>
Return-path: <git-owner@vger.kernel.org>
Envelope-to: gcvg-git@gmane.org
In-Reply-To: <200612020828.57989.alan@chandlerfamily.org.uk>
User-Agent: Wanderlust/2.14.0 (Africa) Emacs/21.4 Mule/5.0 (SAKAKI)
Precedence: bulk
X-Mailing-List: git@vger.kernel.org
Archived-At: <http://permalink.gmane.org/gmane.comp.version-control.git/33027>
Received: from vger.kernel.org ([209.132.176.167]) by ciao.gmane.org with
 esmtp (Exim 4.43) id 1GqY3k-0003D1-Jc for gcvg-git@gmane.org; Sat, 02 Dec
 2006 17:49:52 +0100
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand id
 S1424154AbWLBQtq (ORCPT <rfc822;gcvg-git@m.gmane.org>); Sat, 2 Dec 2006
 11:49:46 -0500
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S1424155AbWLBQtq
 (ORCPT <rfc822;git-outgoing>); Sat, 2 Dec 2006 11:49:46 -0500
Received: from cworth.org ([217.160.249.188]:59792 "EHLO theworths.org") by
 vger.kernel.org with ESMTP id S1424154AbWLBQtq (ORCPT
 <rfc822;git@vger.kernel.org>); Sat, 2 Dec 2006 11:49:46 -0500
Received: (qmail 533 invoked from network); 2 Dec 2006 11:49:43 -0500
Received: from localhost (HELO raht.cworth.org) (127.0.0.1) by localhost with
 SMTP; 2 Dec 2006 11:49:43 -0500
To: Alan Chandler <alan@chandlerfamily.org.uk>
Sender: git-owner@vger.kernel.org

--pgp-sign-Multipart_Sat_Dec__2_08:49:04_2006-1
Content-Type: text/plain; charset=US-ASCII

On Sat, 2 Dec 2006 08:28:57 +0000, Alan Chandler wrote:
> There is a conceptual difference between thinking that git-add is about adding
> a file and git-add adding the current state of a files content.

Yes, there is.

>                                                                 If your
> conceptual model is the first of these - then I can see why you see a problem
> with git-add being used to say a files contents have changed.

Yes. (And of course, I personally understand the second conceptual
model. But there are a lot of "brain-damaged" people out there.)

> However, if you regard the git-add command is "adding the current content of
> the file to a staging area" , and you say this is an SCM which by definition
> keeps the history of things once its been told about them I don't see why
> there is a need for a different name for the operation the first time and for
> the operation later.

Yes, that's also true. Once you know the model then you wouldn't need
two different commands. One can certainly get by with just the
functionality of "update-index" for everything.

> Trying to put myself in the shoes of a newbie - if taught to use add in both
> ways up front - is to ask why git isn't clever enough to notice that I have
> changed the content of something it already knows about rather than having it
> to manually add it again.

Yes, and "put myself in the shoes of a newbie" is what I've been doing
through the whole conversation. That's why I keep coming across as so
stubbornly stupid in these threads, ("why can't Carl just understand
how git works?!").

> So I am with you that we need to effective teach
>
> git add <filename>   #add content of filename to the SCM
> #edit <filename>
> git commit -a		#commit current state of all tracked content
>
> first, and then move on to teach selective commiting

Yes. That's the only way to avoid this confusion.

So all of the conditions above, ("if your conceptual model is", "if
you regard the git-add command", "if taught to use git-add up front",
"if we effectively teach 'commit -a' first"), are barriers to learning
git. We can't guarantee these are all met for new users, and when
they're not, the users can get confused.

If git's model imposes the requirement, "we should first teach one
thing, then move on to teach a subsequent thing", it would be just
that much nicer if the commands themselves could help us do that,
(because the default would do the thing they would need first, and
then the user has to explicitly do _something_ else to get the
subsequent thing).

See? I'm just trying to make the command set more naturally provide
the same flow of learning that we've been proposing for the tutorial.

-Carl

--pgp-sign-Multipart_Sat_Dec__2_08:49:04_2006-1
Content-Type: application/pgp-signature
Content-Transfer-Encoding: 7bit

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.5 (GNU/Linux)

iD8DBQBFca6B6JDdNq8qSWgRAvDqAJ46kzxO8Y50bmRXVjaRvylA3zpEsACeJTiT
Oqz1t23wPO2zEOYiy6K6aQY=
=Epoe
-----END PGP SIGNATURE-----

