From: Carl Worth <cworth@cworth.org>
Subject: Re: Importing from tarballs; add, rm, update-index?
Date: Sat, 13 Jan 2007 08:09:35 -0800
Message-ID: <87y7o6x60w.wl%cworth@cworth.org>
References: <6efbd9b70701120541n5dc4d0e1va50ae96543d8c80@mail.gmail.com>
	<7virfct737.fsf@assigned-by-dhcp.cox.net>
	<slrneqfnb8.a6s.Peter.B.Baumann@xp.machine.xx>
	<7vejq0t4ij.fsf@assigned-by-dhcp.cox.net>
	<20070112210403.GB6262@xp.machine.xx>
	<7v7ivrpx9y.fsf@assigned-by-dhcp.cox.net>
Mime-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: multipart/signed;
 boundary="pgp-sign-Multipart_Sat_Jan_13_08:09:27_2007-1"; micalg=pgp-sha1;
 protocol="application/pgp-signature"
Content-Transfer-Encoding: 7bit
Cc: Peter Baumann <waste.manager@gmx.de>, git@vger.kernel.org
X-From: git-owner@vger.kernel.org Sat Jan 13 17:11:44 2007
Return-path: <git-owner@vger.kernel.org>
Envelope-to: gcvg-git@gmane.org
Received: from vger.kernel.org ([209.132.176.167])
	by lo.gmane.org with esmtp (Exim 4.50)
	id 1H5lTk-0005Td-Ee
	for gcvg-git@gmane.org; Sat, 13 Jan 2007 17:11:36 +0100
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1422706AbXAMQLe (ORCPT <rfc822;gcvg-git@m.gmane.org>);
	Sat, 13 Jan 2007 11:11:34 -0500
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S1422711AbXAMQLe
	(ORCPT <rfc822;git-outgoing>); Sat, 13 Jan 2007 11:11:34 -0500
Received: from mx1.redhat.com ([66.187.233.31]:59641 "EHLO mx1.redhat.com"
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1422706AbXAMQLd (ORCPT <rfc822;git@vger.kernel.org>);
	Sat, 13 Jan 2007 11:11:33 -0500
Received: from int-mx1.corp.redhat.com (int-mx1.corp.redhat.com [172.16.52.254])
	by mx1.redhat.com (8.12.11.20060308/8.12.11) with ESMTP id l0DGBTPE013997;
	Sat, 13 Jan 2007 11:11:29 -0500
Received: from mail.boston.redhat.com (mail.boston.redhat.com [172.16.76.12])
	by int-mx1.corp.redhat.com (8.13.1/8.13.1) with ESMTP id l0DGBSU8021528;
	Sat, 13 Jan 2007 11:11:28 -0500
Received: from raht.cworth.org (sebastian-int.corp.redhat.com [172.16.52.221])
	by mail.boston.redhat.com (8.12.11.20060308/8.12.11) with ESMTP id l0DGBRkb005732;
	Sat, 13 Jan 2007 11:11:27 -0500
To: Junio C Hamano <junkio@cox.net>
In-Reply-To: <7v7ivrpx9y.fsf@assigned-by-dhcp.cox.net>
User-Agent: Wanderlust/2.14.0 (Africa) Emacs/21.4 Mule/5.0 (SAKAKI)
Sender: git-owner@vger.kernel.org
Precedence: bulk
X-Mailing-List: git@vger.kernel.org
Archived-At: <http://permalink.gmane.org/gmane.comp.version-control.git/36754>

--pgp-sign-Multipart_Sat_Jan_13_08:09:27_2007-1
Content-Type: text/plain; charset=US-ASCII

On Fri, 12 Jan 2007 16:48:09 -0800, Junio C Hamano wrote:
> Peter Baumann <waste.manager@gmx.de> writes:
>
> > Yes. I fully second Linus opinion. But I think there should be
> > a difference in adding completly new content to the index
> > (number of entries in the index grows) or replacing content in
> > the index.
>
> Huh?

Here's an easy way to see the difference that Peter is trying to point
out, (and it really has nothing to do with whether "git add" for a new
file should add the content of that file to the index---that's a
totally separate issue that Linus was talking about in that other
message).

Just look at "commit -a" and how its documented right now. Currently
it's documented as doing an automatic "add" to all known files. That
descriptions is unsatisfactory for two reasons:

1. "commit -a" will also commit the removal of files---which requires
   an index modification that "git add" cannot do

2. "add" can cause an entirely new path (with content, Vader!) to be
   added to the index. So the user has to carefully separate out this
   behavior of "add" to properly understand what "commit -a" is
   doing. The documentation tries to help here with "known files", but
   the talk of an "automatic 'add'" that never adds any new paths
   really goes against the primary functionality of "git add".

   I say "primary functionality" because the 'commit -a' workflow,
   (which we've all agreed should be the thing that is taught first),
   requires users to use 'git add' when adding a new path to the
   index, but never requires the user to use the 'update the index'
   sense of 'git add', (instead, the user just needs to _learn_ this
   sense to understand commit -a).

So there's lots of room for potential confusion there, and we've got
evidence of that confusion in the messages that started this an other
recent threads about how to remove files.

I like the idea of adding a porcelain command for update-index, and
it's nice to try to describe "commit -a" in terms of the new porcelain
command. But, to make that really work, I think that porcelain for
update-index should really match the semantics needed by "commit
-a". That is, it should never add new paths to the index, but it
should update content for existing paths, and it should remove paths
from the index when files have been removed from the working tree.

Let's call this new command "refresh", just to experiment with another
name. If it existed, then "commit -a" could be described as simply
doing "refresh" on all files, (with no need to have a notion of
"tracked files", nor any extra language about file removal). That is,
"commit -a" could be understood as something like:

	git refresh -a
	git commit

(or maybe "git refresh .; git commit" if one prefers that, but I think
it'd be nice to carry the -a option over to the new porcelain).

Also, this would even make it possible to provide an accurate
index-based description of "commit paths...". Namely, something like:

	commit paths...

	This command starts with a new index initialized from the
	contents of the current commit (HEAD). It then performs the
	following commands:

		git refresh paths...
		git commit

	[Some extra language needed here about restoring into the
	index other changes that were "skipped over".]

So, someone might like to have that kind of description somewhere in
the technical documentation of git. (I'd still prefer to see "commit
paths..." documented as simply "commits the working-tree content of
all specified paths").

Anyway, did I succeed in pointing out why some of us think that the
"add a new path (with content) to the index" and the "update content
for existing path" really shouldn't be mixed up in the same "add"
command?

-Carl

--pgp-sign-Multipart_Sat_Jan_13_08:09:27_2007-1
Content-Type: application/pgp-signature
Content-Transfer-Encoding: 7bit

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.5 (GNU/Linux)

iD8DBQBFqQQ/6JDdNq8qSWgRAjfaAJwNahtJIjGFZQ5HuOuwszbmGacPGgCdGEUE
rRD0nrZbEje1KiskKTkBTjI=
=MYxc
-----END PGP SIGNATURE-----

--pgp-sign-Multipart_Sat_Jan_13_08:09:27_2007-1--
