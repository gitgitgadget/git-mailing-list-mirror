From: Nicholas Chmielewski <nicholas.chmielewski@ennova.com.au>
Subject: Expected bug with reset --hard
Date: Wed, 15 Oct 2014 14:34:12 +1000
Message-ID: <CAEemfuW5k+2r7TpetUK8dh5vLZBR4-Kc1JgYJhG-RPpoQTRQ3Q@mail.gmail.com>
Mime-Version: 1.0
Content-Type: multipart/mixed; boundary=001a113a619ccef68b05056ea4fa
To: git@vger.kernel.org
X-From: git-owner@vger.kernel.org Wed Oct 15 06:34:24 2014
Return-path: <git-owner@vger.kernel.org>
Envelope-to: gcvg-git-2@plane.gmane.org
Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <git-owner@vger.kernel.org>)
	id 1XeGI1-0005KL-Bb
	for gcvg-git-2@plane.gmane.org; Wed, 15 Oct 2014 06:34:22 +0200
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751923AbaJOEeP (ORCPT <rfc822;gcvg-git-2@m.gmane.org>);
	Wed, 15 Oct 2014 00:34:15 -0400
Received: from mail-qc0-f178.google.com ([209.85.216.178]:52631 "EHLO
	mail-qc0-f178.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1751828AbaJOEeN (ORCPT <rfc822;git@vger.kernel.org>);
	Wed, 15 Oct 2014 00:34:13 -0400
Received: by mail-qc0-f178.google.com with SMTP id c9so388340qcz.9
        for <git@vger.kernel.org>; Tue, 14 Oct 2014 21:34:13 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20130820;
        h=x-gm-message-state:mime-version:date:message-id:subject:from:to
         :content-type;
        bh=nmlAjZM94dHPLNs3xTwLHdtVkT3LU9knNA9CDOWC6M0=;
        b=iuwashYzr3KfNCLHMdnQXEJk10/6biQAqMLLpUtPnF3bHf/dVonfAfMTdU9JlySYa8
         AljqMSp9i2O8AU9iT2VTu3/lfVq+OdvDCWZvvNjeNQeHnoFVdEBAWwHHBtKLJ4/PZbu1
         vuJ9kBCJ1PPct1WkGxBl0RGUSvyDxHNP6pgpAkulIRG+sIqV+NiMXnp+FNzTQjz6VNrb
         e2cEJssup6xYE8ZOFOtIinmCSAoSSR2hNwFymn2D4vYYsQGAZ3GloWvMhc+8eRuZa2nr
         94PG/GUBSP/RvsL3k1W3LAQ2KUhnRzW++DQEEqsQaFm7wuK3VUvBceTC/nkjyu58lYNK
         kBGQ==
X-Gm-Message-State: ALoCoQnZKHPv67lQ7KiJwCuZxURnksCHIGGBX8VPh7uqhKk+CVSaftQMUh1z7ZgHkyyj0wuAzKvW
X-Received: by 10.140.107.11 with SMTP id g11mr4397732qgf.38.1413347653109;
 Tue, 14 Oct 2014 21:34:13 -0700 (PDT)
Received: by 10.140.94.172 with HTTP; Tue, 14 Oct 2014 21:34:12 -0700 (PDT)
X-Originating-IP: [150.101.176.147]
Sender: git-owner@vger.kernel.org
Precedence: bulk
List-ID: <git.vger.kernel.org>
X-Mailing-List: git@vger.kernel.org

--001a113a619ccef68b05056ea4fa
Content-Type: text/plain; charset=UTF-8

git version 1.9.1 & version 2.1.2

I had some changes in a tracked file that I wanted to discard.
Instead of using checkout, I instead used `git reset --hard HEAD` to reset.

Git returned the message `HEAD is now at <sha> <commit-message>`
I then went `git status` and it showed me that I still have changes to commit

I expected there to be no changes in my working directory as a result of
doing a `git reset --hard`

I did a little more fiddling around and still yielded the same results.

- `$ touch file.md`
- `$ git add file.md`
- `$ git commit -m 'empty file'`
- `$ echo 'text' > file.md`

At this point git reported that I had uncommited changes for both file.md and
the troublesome file in question (jquery.datatables.js)

`$ git reset --hard HEAD`

Git now no longer reports and untracked changes for file.md but still
for jquery.datatables.js

`$ git reset --hard HEAD~1`

Git still reports untracked changes for jquery.datatables.js

I have included a copy of the diff of the jquery.datatables.js

--001a113a619ccef68b05056ea4fa
Content-Type: text/plain; charset=UTF-8; name="dataTables.diff"
Content-Disposition: attachment; filename="dataTables.diff"
Content-Transfer-Encoding: base64
X-Attachment-Id: f_i1a6p0w60

ZGlmZiAtLWdpdCBhL3ZlbmRvci9hc3NldHMvamF2YXNjcmlwdHMvanF1ZXJ5LmRhdGF0YWJsZXMu
anMgYi92ZW5kb3IvYXNzZXRzL2phdmFzY3JpcHRzL2pxdWVyeS5kYXRhdGFibGVzLmpzCmluZGV4
IGI5MDQ0ZjEuLjRhYWIwNGIgMTAwNjQ0Ci0tLSBhL3ZlbmRvci9hc3NldHMvamF2YXNjcmlwdHMv
anF1ZXJ5LmRhdGF0YWJsZXMuanMKKysrIGIvdmVuZG9yL2Fzc2V0cy9qYXZhc2NyaXB0cy9qcXVl
cnkuZGF0YXRhYmxlcy5qcwpAQCAtMSwxMSArMSwxMSBAQAotLyohIERhdGFUYWJsZXMgMS4xMC4x
Ci0gKiDDgsKpMjAwOC0yMDE0IFNwcnlNZWRpYSBMdGQgLSBkYXRhdGFibGVzLm5ldC9saWNlbnNl
CisvKiEgRGF0YVRhYmxlcyAxLjEwLjMKKyAqIMKpMjAwOC0yMDE0IFNwcnlNZWRpYSBMdGQgLSBk
YXRhdGFibGVzLm5ldC9saWNlbnNlCiAgKi8KIAogLyoqCiAgKiBAc3VtbWFyeSAgICAgRGF0YVRh
YmxlcwogICogQGRlc2NyaXB0aW9uIFBhZ2luYXRlLCBzZWFyY2ggYW5kIG9yZGVyIEhUTUwgdGFi
bGVzCi0gKiBAdmVyc2lvbiAgICAgMS4xMC4xCisgKiBAdmVyc2lvbiAgICAgMS4xMC4zCiAgKiBA
ZmlsZSAgICAgICAganF1ZXJ5LmRhdGFUYWJsZXMuanMKICAqIEBhdXRob3IgICAgICBTcHJ5TWVk
aWEgTHRkICh3d3cuc3ByeW1lZGlhLmNvLnVrKQogICogQGNvbnRhY3QgICAgIHd3dy5zcHJ5bWVk
aWEuY28udWsvY29udGFjdApAQCAtMTEzLDcgKzExMyw3IEBACiAJCiAJLy8gVSsyMDA5IGlzIHRo
aW4gc3BhY2UgYW5kIFUrMjAyRiBpcyBuYXJyb3cgbm8tYnJlYWsgc3BhY2UsIGJvdGggdXNlZCBp
biBtYW55CiAJLy8gc3RhbmRhcmRzIGFzIHRob3VzYW5kcyBzZXBhcmF0b3JzCi0JdmFyIF9yZV9m
b3JtYXR0ZWRfbnVtZXJpYyA9IC9bJywkw4LCo8Oi4oCawqzDgsKlJVx1MjAwOVx1MjAyRl0vZzsK
Kwl2YXIgX3JlX2Zvcm1hdHRlZF9udW1lcmljID0gL1snLCTCo+KCrMKlJVx1MjAwOVx1MjAyRl0v
ZzsKIAkKIAkKIAl2YXIgX2VtcHR5ID0gZnVuY3Rpb24gKCBkICkgewpAQCAtMTMzLDcgKzEzMyw3
IEBACiAJCWlmICggISBfcmVfZGljWyBkZWNpbWFsUG9pbnQgXSApIHsKIAkJCV9yZV9kaWNbIGRl
Y2ltYWxQb2ludCBdID0gbmV3IFJlZ0V4cCggX2ZuRXNjYXBlUmVnZXgoIGRlY2ltYWxQb2ludCAp
LCAnZycgKTsKIAkJfQotCQlyZXR1cm4gdHlwZW9mIG51bSA9PT0gJ3N0cmluZycgPworCQlyZXR1
cm4gdHlwZW9mIG51bSA9PT0gJ3N0cmluZycgJiYgZGVjaW1hbFBvaW50ICE9PSAnLicgPwogCQkJ
bnVtLnJlcGxhY2UoIC9cLi9nLCAnJyApLnJlcGxhY2UoIF9yZV9kaWNbIGRlY2ltYWxQb2ludCBd
LCAnLicgKSA6CiAJCQludW07CiAJfTsKQEAgLTMxMCw3ICszMTAsNiBAQAogCQkJCW5ld0tleSA9
IGtleS5yZXBsYWNlKCBtYXRjaFswXSwgbWF0Y2hbMl0udG9Mb3dlckNhc2UoKSApOwogCQkJCW1h
cFsgbmV3S2V5IF0gPSBrZXk7CiAJCi0JCQkJLy9jb25zb2xlLmxvZygga2V5LCBtYXRjaCApOwog
CQkJCWlmICggbWF0Y2hbMV0gPT09ICdvJyApCiAJCQkJewogCQkJCQlfZm5IdW5nYXJpYW5NYXAo
IG9ba2V5XSApOwpAQCAtNjczLDYgKzY3MiwxMiBAQAogCQkJcmV0dXJuIF9mblNldE9iamVjdERh
dGFGbiggbURhdGFTcmMgKSggcm93RGF0YSwgdmFsLCBtZXRhICk7CiAJCX07CiAJCisJCS8vIElu
ZGljYXRlIGlmIERhdGFUYWJsZXMgc2hvdWxkIHJlYWQgRE9NIGRhdGEgYXMgYW4gb2JqZWN0IG9y
IGFycmF5CisJCS8vIFVzZWQgaW4gX2ZuR2V0Um93RWxlbWVudHMKKwkJaWYgKCB0eXBlb2YgbURh
dGFTcmMgIT09ICdudW1iZXInICkgeworCQkJb1NldHRpbmdzLl9yb3dSZWFkT2JqZWN0ID0gdHJ1
ZTsKKwkJfQorCQogCQkvKiBGZWF0dXJlIHNvcnRpbmcgb3ZlcnJpZGVzIGNvbHVtbiBzcGVjaWZp
YyB3aGVuIG9mZiAqLwogCQlpZiAoICFvU2V0dGluZ3Mub0ZlYXR1cmVzLmJTb3J0ICkKIAkJewpA
QCAtMTQ5OCwxOSArMTUwMywyMiBAQAogCWZ1bmN0aW9uIF9mbkdldFJvd0VsZW1lbnRzKCBzZXR0
aW5ncywgcm93ICkKIAl7CiAJCXZhcgotCQkJZCA9IFtdLAogCQkJdGRzID0gW10sCiAJCQl0ZCA9
IHJvdy5maXJzdENoaWxkLAogCQkJbmFtZSwgY29sLCBvLCBpPTAsIGNvbnRlbnRzLAotCQkJY29s
dW1ucyA9IHNldHRpbmdzLmFvQ29sdW1uczsKKwkJCWNvbHVtbnMgPSBzZXR0aW5ncy5hb0NvbHVt
bnMsCisJCQlvYmplY3RSZWFkID0gc2V0dGluZ3MuX3Jvd1JlYWRPYmplY3Q7CiAJCi0JCXZhciBh
dHRyID0gZnVuY3Rpb24gKCBzdHIsIGRhdGEsIHRkICApIHsKKwkJdmFyIGQgPSBvYmplY3RSZWFk
ID8ge30gOiBbXTsKKwkKKwkJdmFyIGF0dHIgPSBmdW5jdGlvbiAoIHN0ciwgdGQgICkgewogCQkJ
aWYgKCB0eXBlb2Ygc3RyID09PSAnc3RyaW5nJyApIHsKIAkJCQl2YXIgaWR4ID0gc3RyLmluZGV4
T2YoJ0AnKTsKIAkKIAkJCQlpZiAoIGlkeCAhPT0gLTEgKSB7Ci0JCQkJCXZhciBzcmMgPSBzdHIu
c3Vic3RyaW5nKCBpZHgrMSApOwotCQkJCQlvWyAnQCcrc3JjIF0gPSB0ZC5nZXRBdHRyaWJ1dGUo
IHNyYyApOworCQkJCQl2YXIgYXR0ciA9IHN0ci5zdWJzdHJpbmcoIGlkeCsxICk7CisJCQkJCXZh
ciBzZXR0ZXIgPSBfZm5TZXRPYmplY3REYXRhRm4oIHN0ciApOworCQkJCQlzZXR0ZXIoIGQsIHRk
LmdldEF0dHJpYnV0ZSggYXR0ciApICk7CiAJCQkJfQogCQkJfQogCQl9OwpAQCAtMTUyMCwxOCAr
MTUyOCwyNiBAQAogCQkJY29udGVudHMgPSAkLnRyaW0oY2VsbC5pbm5lckhUTUwpOwogCQogCQkJ
aWYgKCBjb2wgJiYgY29sLl9iQXR0clNyYyApIHsKLQkJCQlvID0gewotCQkJCQlkaXNwbGF5OiBj
b250ZW50cwotCQkJCX07CisJCQkJdmFyIHNldHRlciA9IF9mblNldE9iamVjdERhdGFGbiggY29s
Lm1EYXRhLl8gKTsKKwkJCQlzZXR0ZXIoIGQsIGNvbnRlbnRzICk7CiAJCi0JCQkJYXR0ciggY29s
Lm1EYXRhLnNvcnQsIG8sIGNlbGwgKTsKLQkJCQlhdHRyKCBjb2wubURhdGEudHlwZSwgbywgY2Vs
bCApOwotCQkJCWF0dHIoIGNvbC5tRGF0YS5maWx0ZXIsIG8sIGNlbGwgKTsKLQkKLQkJCQlkLnB1
c2goIG8gKTsKKwkJCQlhdHRyKCBjb2wubURhdGEuc29ydCwgY2VsbCApOworCQkJCWF0dHIoIGNv
bC5tRGF0YS50eXBlLCBjZWxsICk7CisJCQkJYXR0ciggY29sLm1EYXRhLmZpbHRlciwgY2VsbCAp
OwogCQkJfQogCQkJZWxzZSB7Ci0JCQkJZC5wdXNoKCBjb250ZW50cyApOworCQkJCS8vIERlcGVu
ZGluZyBvbiB0aGUgYGRhdGFgIG9wdGlvbiBmb3IgdGhlIGNvbHVtbnMgdGhlIGRhdGEgY2FuIGJl
CisJCQkJLy8gcmVhZCB0byBlaXRoZXIgYW4gb2JqZWN0IG9yIGFuIGFycmF5LgorCQkJCWlmICgg
b2JqZWN0UmVhZCApIHsKKwkJCQkJaWYgKCAhIGNvbC5fc2V0dGVyICkgeworCQkJCQkJLy8gQ2Fj
aGUgdGhlIHNldHRlciBmdW5jdGlvbgorCQkJCQkJY29sLl9zZXR0ZXIgPSBfZm5TZXRPYmplY3RE
YXRhRm4oIGNvbC5tRGF0YSApOworCQkJCQl9CisJCQkJCWNvbC5fc2V0dGVyKCBkLCBjb250ZW50
cyApOworCQkJCX0KKwkJCQllbHNlIHsKKwkJCQkJZC5wdXNoKCBjb250ZW50cyApOworCQkJCX0K
IAkJCX0KIAkKIAkJCWkrKzsKQEAgLTE5NTAsNyArMTk2Niw5IEBACiAJCQkJCX0KIAkJCQl9CiAJ
Ci0JCQkJLyogUm93IGNhbGxiYWNrIGZ1bmN0aW9ucyAtIG1pZ2h0IHdhbnQgdG8gbWFuaXB1bGF0
ZSB0aGUgcm93ICovCisJCQkJLy8gUm93IGNhbGxiYWNrIGZ1bmN0aW9ucyAtIG1pZ2h0IHdhbnQg
dG8gbWFuaXB1bGF0ZSB0aGUgcm93CisJCQkJLy8gaVJvd0NvdW50IGFuZCBqIGFyZSBub3QgY3Vy
cmVudGx5IGRvY3VtZW50ZWQuIEFyZSB0aGV5IGF0IGFsbAorCQkJCS8vIHVzZWZ1bD8KIAkJCQlf
Zm5DYWxsYmFja0ZpcmUoIG9TZXR0aW5ncywgJ2FvUm93Q2FsbGJhY2snLCBudWxsLAogCQkJCQlb
blJvdywgYW9EYXRhLl9hRGF0YSwgaVJvd0NvdW50LCBqXSApOwogCQpAQCAtMjY5NSwxMyArMjcx
MywyMCBAQAogCQkJCV9mbkRyYXcoIHNldHRpbmdzICk7CiAJCQl9CiAJCX07CisJCisJCXZhciBz
ZWFyY2hEZWxheSA9IHNldHRpbmdzLnNlYXJjaERlbGF5ICE9PSBudWxsID8KKwkJCXNldHRpbmdz
LnNlYXJjaERlbGF5IDoKKwkJCV9mbkRhdGFTb3VyY2UoIHNldHRpbmdzICkgPT09ICdzc3AnID8K
KwkJCQk0MDAgOgorCQkJCTA7CisJCiAJCXZhciBqcUZpbHRlciA9ICQoJ2lucHV0JywgZmlsdGVy
KQogCQkJLnZhbCggcHJldmlvdXNTZWFyY2guc1NlYXJjaCApCiAJCQkuYXR0ciggJ3BsYWNlaG9s
ZGVyJywgbGFuZ3VhZ2Uuc1NlYXJjaFBsYWNlaG9sZGVyICkKIAkJCS5iaW5kKAogCQkJCSdrZXl1
cC5EVCBzZWFyY2guRFQgaW5wdXQuRFQgcGFzdGUuRFQgY3V0LkRUJywKLQkJCQlfZm5EYXRhU291
cmNlKCBzZXR0aW5ncyApID09PSAnc3NwJyA/Ci0JCQkJCV9mblRocm90dGxlKCBzZWFyY2hGbiwg
NDAwICk6CisJCQkJc2VhcmNoRGVsYXkgPworCQkJCQlfZm5UaHJvdHRsZSggc2VhcmNoRm4sIHNl
YXJjaERlbGF5ICkgOgogCQkJCQlzZWFyY2hGbgogCQkJKQogCQkJLmJpbmQoICdrZXlwcmVzcy5E
VCcsIGZ1bmN0aW9uKGUpIHsKQEAgLTI5MjQsOSArMjk0OSwxMiBAQAogCQkJICogXig/PS4qP1xi
b25lXGIpKD89Lio/XGJ0d28gdGhyZWVcYikoPz0uKj9cYmZvdXJcYikuKiQKIAkJCSAqLwogCQkJ
dmFyIGEgPSAkLm1hcCggc2VhcmNoLm1hdGNoKCAvIlteIl0rInxbXiBdKy9nICkgfHwgJycsIGZ1
bmN0aW9uICggd29yZCApIHsKLQkJCQlyZXR1cm4gd29yZC5jaGFyQXQoMCkgPT09ICciJyA/Ci0J
CQkJCXdvcmQubWF0Y2goIC9eIiguKikiJC8gKVsxXSA6Ci0JCQkJCXdvcmQ7CisJCQkJaWYgKCB3
b3JkLmNoYXJBdCgwKSA9PT0gJyInICkgeworCQkJCQl2YXIgbSA9IHdvcmQubWF0Y2goIC9eIigu
KikiJC8gKTsKKwkJCQkJd29yZCA9IG0gPyBtWzFdIDogd29yZDsKKwkJCQl9CisJCisJCQkJcmV0
dXJuIHdvcmQucmVwbGFjZSgnIicsICcnKTsKIAkJCX0gKTsKIAkKIAkJCXNlYXJjaCA9ICdeKD89
Lio/JythLmpvaW4oICcpKD89Lio/JyApKycpLiokJzsKQEAgLTI5NzMsMzQgKzMwMDEsNDAgQEAK
IAkJCQkJaWYgKCBjb2x1bW4uYlNlYXJjaGFibGUgKSB7CiAJCQkJCQljZWxsRGF0YSA9IF9mbkdl
dENlbGxEYXRhKCBzZXR0aW5ncywgaSwgaiwgJ2ZpbHRlcicgKTsKIAkKLQkJCQkJCWNlbGxEYXRh
ID0gZm9tYXR0ZXJzWyBjb2x1bW4uc1R5cGUgXSA/Ci0JCQkJCQkJZm9tYXR0ZXJzWyBjb2x1bW4u
c1R5cGUgXSggY2VsbERhdGEgKSA6Ci0JCQkJCQkJY2VsbERhdGEgIT09IG51bGwgPwotCQkJCQkJ
CQljZWxsRGF0YSA6Ci0JCQkJCQkJCScnOworCQkJCQkJaWYgKCBmb21hdHRlcnNbIGNvbHVtbi5z
VHlwZSBdICkgeworCQkJCQkJCWNlbGxEYXRhID0gZm9tYXR0ZXJzWyBjb2x1bW4uc1R5cGUgXSgg
Y2VsbERhdGEgKTsKKwkJCQkJCX0KKwkKKwkJCQkJCS8vIFNlYXJjaCBpbiBEYXRhVGFibGVzIDEu
MTAgaXMgc3RyaW5nIGJhc2VkLiBJbiAxLjExIHRoaXMKKwkJCQkJCS8vIHNob3VsZCBiZSBhbHRl
cmVkIHRvIGFsc28gYWxsb3cgc3RyaWN0IHR5cGUgY2hlY2tpbmcuCisJCQkJCQlpZiAoIGNlbGxE
YXRhID09PSBudWxsICkgeworCQkJCQkJCWNlbGxEYXRhID0gJyc7CisJCQkJCQl9CisJCisJCQkJ
CQlpZiAoIHR5cGVvZiBjZWxsRGF0YSAhPT0gJ3N0cmluZycgJiYgY2VsbERhdGEudG9TdHJpbmcg
KSB7CisJCQkJCQkJY2VsbERhdGEgPSBjZWxsRGF0YS50b1N0cmluZygpOworCQkJCQkJfQogCQkJ
CQl9CiAJCQkJCWVsc2UgewogCQkJCQkJY2VsbERhdGEgPSAnJzsKIAkJCQkJfQogCQotCQkJCQlp
ZiAoIGNlbGxEYXRhICkgewotCQkJCQkJLy8gSWYgaXQgbG9va3MgbGlrZSB0aGVyZSBpcyBhbiBI
VE1MIGVudGl0eSBpbiB0aGUgc3RyaW5nLAotCQkJCQkJLy8gYXR0ZW1wdCB0byBkZWNvZGUgaXQg
c28gc29ydGluZyB3b3JrcyBhcyBleHBlY3RlZC4gTm90ZSB0aGF0Ci0JCQkJCQkvLyB3ZSBjb3Vs
ZCB1c2UgYSBzaW5nbGUgbGluZSBvZiBqUXVlcnkgdG8gZG8gdGhpcywgYnV0IHRoZSBET00KLQkJ
CQkJCS8vIG1ldGhvZCB1c2VkIGhlcmUgaXMgbXVjaCBmYXN0ZXIgaHR0cDovL2pzcGVyZi5jb20v
aHRtbC1kZWNvZGUKLQkJCQkJCWlmICggY2VsbERhdGEuaW5kZXhPZiAmJiBjZWxsRGF0YS5pbmRl
eE9mKCcmJykgIT09IC0xICkgewotCQkJCQkJCV9fZmlsdGVyX2Rpdi5pbm5lckhUTUwgPSBjZWxs
RGF0YTsKLQkJCQkJCQljZWxsRGF0YSA9IF9fZmlsdGVyX2Rpdl90ZXh0Q29udGVudCA/Ci0JCQkJ
CQkJCV9fZmlsdGVyX2Rpdi50ZXh0Q29udGVudCA6Ci0JCQkJCQkJCV9fZmlsdGVyX2Rpdi5pbm5l
clRleHQ7Ci0JCQkJCQl9Ci0JCi0JCQkJCQlpZiAoIGNlbGxEYXRhLnJlcGxhY2UgKSB7Ci0JCQkJ
CQkJY2VsbERhdGEgPSBjZWxsRGF0YS5yZXBsYWNlKC9bXHJcbl0vZywgJycpOwotCQkJCQkJfQor
CQkJCQkvLyBJZiBpdCBsb29rcyBsaWtlIHRoZXJlIGlzIGFuIEhUTUwgZW50aXR5IGluIHRoZSBz
dHJpbmcsCisJCQkJCS8vIGF0dGVtcHQgdG8gZGVjb2RlIGl0IHNvIHNvcnRpbmcgd29ya3MgYXMg
ZXhwZWN0ZWQuIE5vdGUgdGhhdAorCQkJCQkvLyB3ZSBjb3VsZCB1c2UgYSBzaW5nbGUgbGluZSBv
ZiBqUXVlcnkgdG8gZG8gdGhpcywgYnV0IHRoZSBET00KKwkJCQkJLy8gbWV0aG9kIHVzZWQgaGVy
ZSBpcyBtdWNoIGZhc3RlciBodHRwOi8vanNwZXJmLmNvbS9odG1sLWRlY29kZQorCQkJCQlpZiAo
IGNlbGxEYXRhLmluZGV4T2YgJiYgY2VsbERhdGEuaW5kZXhPZignJicpICE9PSAtMSApIHsKKwkJ
CQkJCV9fZmlsdGVyX2Rpdi5pbm5lckhUTUwgPSBjZWxsRGF0YTsKKwkJCQkJCWNlbGxEYXRhID0g
X19maWx0ZXJfZGl2X3RleHRDb250ZW50ID8KKwkJCQkJCQlfX2ZpbHRlcl9kaXYudGV4dENvbnRl
bnQgOgorCQkJCQkJCV9fZmlsdGVyX2Rpdi5pbm5lclRleHQ7CisJCQkJCX0KIAkKLQkJCQkJCWZp
bHRlckRhdGEucHVzaCggY2VsbERhdGEgKTsKKwkJCQkJaWYgKCBjZWxsRGF0YS5yZXBsYWNlICkg
eworCQkJCQkJY2VsbERhdGEgPSBjZWxsRGF0YS5yZXBsYWNlKC9bXHJcbl0vZywgJycpOwogCQkJ
CQl9CisJCisJCQkJCWZpbHRlckRhdGEucHVzaCggY2VsbERhdGEgKTsKIAkJCQl9CiAJCiAJCQkJ
cm93Ll9hRmlsdGVyRGF0YSA9IGZpbHRlckRhdGE7CkBAIC00MTYyLDcgKzQxOTYsNyBAQAogCSAq
LwogCWZ1bmN0aW9uIF9mblRocm90dGxlKCBmbiwgZnJlcSApIHsKIAkJdmFyCi0JCQlmcmVxdWVu
Y3kgPSBmcmVxIHx8IDIwMCwKKwkJCWZyZXF1ZW5jeSA9IGZyZXEgIT09IHVuZGVmaW5lZCA/IGZy
ZXEgOiAyMDAsCiAJCQlsYXN0LAogCQkJdGltZXI7CiAJCkBAIC00NDAzLDExICs0NDM3LDE1IEBA
CiAJCQkJaUNvbCA9IGFEYXRhU29ydFtrXTsKIAkJCQlzVHlwZSA9IGFvQ29sdW1uc1sgaUNvbCBd
LnNUeXBlIHx8ICdzdHJpbmcnOwogCQorCQkJCWlmICggbmVzdGVkU29ydFtpXS5faWR4ID09PSB1
bmRlZmluZWQgKSB7CisJCQkJCW5lc3RlZFNvcnRbaV0uX2lkeCA9ICQuaW5BcnJheSggbmVzdGVk
U29ydFtpXVsxXSwgYW9Db2x1bW5zW2lDb2xdLmFzU29ydGluZyApOworCQkJCX0KKwkKIAkJCQlh
U29ydC5wdXNoKCB7CiAJCQkJCXNyYzogICAgICAgc3JjQ29sLAogCQkJCQljb2w6ICAgICAgIGlD
b2wsCiAJCQkJCWRpcjogICAgICAgbmVzdGVkU29ydFtpXVsxXSwKLQkJCQkJaW5kZXg6ICAgICBu
ZXN0ZWRTb3J0W2ldWzJdLAorCQkJCQlpbmRleDogICAgIG5lc3RlZFNvcnRbaV0uX2lkeCwKIAkJ
CQkJdHlwZTogICAgICBzVHlwZSwKIAkJCQkJZm9ybWF0dGVyOiBEYXRhVGFibGUuZXh0LnR5cGUu
b3JkZXJbIHNUeXBlKyItcHJlIiBdCiAJCQkJfSApOwpAQCAtNDYxMCwxMyArNDY0OCwxNyBAQAog
CQl2YXIgc29ydGluZyA9IHNldHRpbmdzLmFhU29ydGluZzsKIAkJdmFyIGFzU29ydGluZyA9IGNv
bC5hc1NvcnRpbmc7CiAJCXZhciBuZXh0U29ydElkeDsKLQkJdmFyIG5leHQgPSBmdW5jdGlvbiAo
IGEgKSB7CisJCXZhciBuZXh0ID0gZnVuY3Rpb24gKCBhLCBvdmVyZmxvdyApIHsKIAkJCXZhciBp
ZHggPSBhLl9pZHg7CiAJCQlpZiAoIGlkeCA9PT0gdW5kZWZpbmVkICkgewogCQkJCWlkeCA9ICQu
aW5BcnJheSggYVsxXSwgYXNTb3J0aW5nICk7CiAJCQl9CiAJCi0JCQlyZXR1cm4gaWR4KzEgPj0g
YXNTb3J0aW5nLmxlbmd0aCA/IDAgOiBpZHgrMTsKKwkJCXJldHVybiBpZHgrMSA8IGFzU29ydGlu
Zy5sZW5ndGggPworCQkJCWlkeCsxIDoKKwkJCQlvdmVyZmxvdyA/CisJCQkJCW51bGwgOgorCQkJ
CQkwOwogCQl9OwogCQogCQkvLyBDb252ZXJ0IHRvIDJEIGFycmF5IGlmIG5lZWRlZApAQCAtNDYz
MSwxMCArNDY3MywxNSBAQAogCQogCQkJaWYgKCBzb3J0SWR4ICE9PSAtMSApIHsKIAkJCQkvLyBZ
ZXMsIG1vZGlmeSB0aGUgc29ydAotCQkJCW5leHRTb3J0SWR4ID0gbmV4dCggc29ydGluZ1tzb3J0
SWR4XSApOworCQkJCW5leHRTb3J0SWR4ID0gbmV4dCggc29ydGluZ1tzb3J0SWR4XSwgdHJ1ZSAp
OwogCQotCQkJCXNvcnRpbmdbc29ydElkeF1bMV0gPSBhc1NvcnRpbmdbIG5leHRTb3J0SWR4IF07
Ci0JCQkJc29ydGluZ1tzb3J0SWR4XS5faWR4ID0gbmV4dFNvcnRJZHg7CisJCQkJaWYgKCBuZXh0
U29ydElkeCA9PT0gbnVsbCApIHsKKwkJCQkJc29ydGluZy5zcGxpY2UoIHNvcnRJZHgsIDEgKTsK
KwkJCQl9CisJCQkJZWxzZSB7CisJCQkJCXNvcnRpbmdbc29ydElkeF1bMV0gPSBhc1NvcnRpbmdb
IG5leHRTb3J0SWR4IF07CisJCQkJCXNvcnRpbmdbc29ydElkeF0uX2lkeCA9IG5leHRTb3J0SWR4
OworCQkJCX0KIAkJCX0KIAkJCWVsc2UgewogCQkJCS8vIE5vIHNvcnQgb24gdGhpcyBjb2x1bW4g
eWV0CkBAIC01MTEzLDcgKzUxNjAsNyBAQAogCQkJbGVuID0gc2V0dGluZ3MuX2lEaXNwbGF5TGVu
Z3RoOwogCQogCQkvKiBJZiB3ZSBoYXZlIHNwYWNlIHRvIHNob3cgZXh0cmEgcm93cyAoYmFja2lu
ZyB1cCBmcm9tIHRoZSBlbmQgcG9pbnQgLSB0aGVuIGRvIHNvICovCi0JCWlmICggZW5kID09PSBz
ZXR0aW5ncy5mblJlY29yZHNEaXNwbGF5KCkgKQorCQlpZiAoc3RhcnQgPj0gZW5kKSAKIAkJewog
CQkJc3RhcnQgPSBlbmQgLSBsZW47CiAJCX0KQEAgLTYwODksNiArNjEzNiw3IEBACiAJCQkJImZu
U3RhdGVMb2FkQ2FsbGJhY2siLAogCQkJCSJmblN0YXRlU2F2ZUNhbGxiYWNrIiwKIAkJCQkicmVu
ZGVyZXIiLAorCQkJCSJzZWFyY2hEZWxheSIsCiAJCQkJWyAiaUNvb2tpZUR1cmF0aW9uIiwgImlT
dGF0ZUR1cmF0aW9uIiBdLCAvLyBiYWNrd2FyZHMgY29tcGF0CiAJCQkJWyAib1NlYXJjaCIsICJv
UHJldmlvdXNTZWFyY2giIF0sCiAJCQkJWyAiYW9TZWFyY2hDb2xzIiwgImFvUHJlU2VhcmNoQ29s
cyIgXSwKQEAgLTY3MTksOCArNjc2NywxMCBAQAogCQkJfQogCQogCQkJZm9yICggaT0wLCBpZW49
Y29udGV4dC5sZW5ndGggOyBpPGllbiA7IGkrKyApIHsKKwkJCQl2YXIgYXBpSW5zdCA9IG5ldyBf
QXBpKCBjb250ZXh0W2ldICk7CisJCiAJCQkJaWYgKCB0eXBlID09PSAndGFibGUnICkgewotCQkJ
CQlyZXQgPSBmbiggY29udGV4dFtpXSwgaSApOworCQkJCQlyZXQgPSBmbi5jYWxsKCBhcGlJbnN0
LCBjb250ZXh0W2ldLCBpICk7CiAJCiAJCQkJCWlmICggcmV0ICE9PSB1bmRlZmluZWQgKSB7CiAJ
CQkJCQlhLnB1c2goIHJldCApOwpAQCAtNjcyOCw3ICs2Nzc4LDcgQEAKIAkJCQl9CiAJCQkJZWxz
ZSBpZiAoIHR5cGUgPT09ICdjb2x1bW5zJyB8fCB0eXBlID09PSAncm93cycgKSB7CiAJCQkJCS8v
IHRoaXMgaGFzIHNhbWUgbGVuZ3RoIGFzIGNvbnRleHQgLSBvbmUgZW50cnkgZm9yIGVhY2ggdGFi
bGUKLQkJCQkJcmV0ID0gZm4oIGNvbnRleHRbaV0sIHRoaXNbaV0sIGkgKTsKKwkJCQkJcmV0ID0g
Zm4uY2FsbCggYXBpSW5zdCwgY29udGV4dFtpXSwgdGhpc1tpXSwgaSApOwogCQogCQkJCQlpZiAo
IHJldCAhPT0gdW5kZWZpbmVkICkgewogCQkJCQkJYS5wdXNoKCByZXQgKTsKQEAgLTY3NDcsMTAg
KzY3OTcsMTAgQEAKIAkJCQkJCWl0ZW0gPSBpdGVtc1tqXTsKIAkKIAkJCQkJCWlmICggdHlwZSA9
PT0gJ2NlbGwnICkgewotCQkJCQkJCXJldCA9IGZuKCBjb250ZXh0W2ldLCBpdGVtLnJvdywgaXRl
bS5jb2x1bW4sIGksIGogKTsKKwkJCQkJCQlyZXQgPSBmbi5jYWxsKCBhcGlJbnN0LCBjb250ZXh0
W2ldLCBpdGVtLnJvdywgaXRlbS5jb2x1bW4sIGksIGogKTsKIAkJCQkJCX0KIAkJCQkJCWVsc2Ug
ewotCQkJCQkJCXJldCA9IGZuKCBjb250ZXh0W2ldLCBpdGVtLCBpLCBqLCByb3dzICk7CisJCQkJ
CQkJcmV0ID0gZm4uY2FsbCggYXBpSW5zdCwgY29udGV4dFtpXSwgaXRlbSwgaSwgaiwgcm93cyAp
OwogCQkJCQkJfQogCQogCQkJCQkJaWYgKCByZXQgIT09IHVuZGVmaW5lZCApIHsKQEAgLTczODcs
MTEgKzc0MzcsMTIgQEAKIAl7CiAJCXZhcgogCQkJb3V0ID0gW10sIHJlcywKLQkJCWEsIGksIGll
biwgaiwgamVuOworCQkJYSwgaSwgaWVuLCBqLCBqZW4sCisJCQlzZWxlY3RvclR5cGUgPSB0eXBl
b2Ygc2VsZWN0b3I7CiAJCiAJCS8vIENhbid0IGp1c3QgY2hlY2sgZm9yIGlzQXJyYXkgaGVyZSwg
YXMgYW4gQVBJIG9yIGpRdWVyeSBpbnN0YW5jZSBtaWdodCBiZQogCQkvLyBnaXZlbiB3aXRoIHRo
ZWlyIGFycmF5IGxpa2UgbG9vawotCQlpZiAoICEgc2VsZWN0b3IgfHwgdHlwZW9mIHNlbGVjdG9y
ID09PSAnc3RyaW5nJyB8fCBzZWxlY3Rvci5sZW5ndGggPT09IHVuZGVmaW5lZCApIHsKKwkJaWYg
KCAhIHNlbGVjdG9yIHx8IHNlbGVjdG9yVHlwZSA9PT0gJ3N0cmluZycgfHwgc2VsZWN0b3JUeXBl
ID09PSAnZnVuY3Rpb24nIHx8IHNlbGVjdG9yLmxlbmd0aCA9PT0gdW5kZWZpbmVkICkgewogCQkJ
c2VsZWN0b3IgPSBbIHNlbGVjdG9yIF07CiAJCX0KIAkKQEAgLTc1MjksNiArNzU4MCw3IEBACiAJ
ewogCQlyZXR1cm4gX3NlbGVjdG9yX3J1biggc2VsZWN0b3IsIGZ1bmN0aW9uICggc2VsICkgewog
CQkJdmFyIHNlbEludCA9IF9pbnRWYWwoIHNlbCApOworCQkJdmFyIGksIGllbjsKIAkKIAkJCS8v
IFNob3J0IGN1dCAtIHNlbGVjdG9yIGlzIGEgbnVtYmVyIGFuZCBubyBvcHRpb25zIHByb3ZpZGVk
IChkZWZhdWx0IGlzCiAJCQkvLyBhbGwgcmVjb3Jkcywgc28gbm8gbmVlZCB0byBjaGVjayBpZiB0
aGUgaW5kZXggaXMgaW4gdGhlcmUsIHNpbmNlIGl0CkBAIC03NTQ4LDE0ICs3NjAwLDE5IEBACiAJ
CQkJcmV0dXJuIHJvd3M7CiAJCQl9CiAJCi0JCQkvLyBHZXQgbm9kZXMgaW4gdGhlIG9yZGVyIGZy
b20gdGhlIGByb3dzYCBhcnJheSAoY2FuJ3QgdXNlIGBwbHVja2ApIEB0b2RvIC0gdXNlIHBsdWNr
X29yZGVyCi0JCQl2YXIgbm9kZXMgPSBbXTsKLQkJCWZvciAoIHZhciBpPTAsIGllbj1yb3dzLmxl
bmd0aCA7IGk8aWVuIDsgaSsrICkgewotCQkJCW5vZGVzLnB1c2goIHNldHRpbmdzLmFvRGF0YVsg
cm93c1tpXSBdLm5UciApOworCQkJLy8gR2V0IG5vZGVzIGluIHRoZSBvcmRlciBmcm9tIHRoZSBg
cm93c2AgYXJyYXkKKwkJCXZhciBub2RlcyA9IF9wbHVja19vcmRlciggc2V0dGluZ3MuYW9EYXRh
LCByb3dzLCAnblRyJyApOworCQorCQkJLy8gU2VsZWN0b3IgLSBmdW5jdGlvbgorCQkJaWYgKCB0
eXBlb2Ygc2VsID09PSAnZnVuY3Rpb24nICkgeworCQkJCXJldHVybiAkLm1hcCggcm93cywgZnVu
Y3Rpb24gKGlkeCkgeworCQkJCQl2YXIgcm93ID0gc2V0dGluZ3MuYW9EYXRhWyBpZHggXTsKKwkJ
CQkJcmV0dXJuIHNlbCggaWR4LCByb3cuX2FEYXRhLCByb3cublRyICkgPyBpZHggOiBudWxsOwor
CQkJCX0gKTsKIAkJCX0KIAkKKwkJCS8vIFNlbGVjdG9yIC0gbm9kZQogCQkJaWYgKCBzZWwubm9k
ZU5hbWUgKSB7Ci0JCQkJLy8gU2VsZWN0b3IgLSBub2RlCiAJCQkJaWYgKCAkLmluQXJyYXkoIHNl
bCwgbm9kZXMgKSAhPT0gLTEgKSB7CiAJCQkJCXJldHVybiBbIHNlbC5fRFRfUm93SW5kZXggXTsv
LyBzZWwgaXMgYSBUUiBub2RlIHRoYXQgaXMgaW4gdGhlIHRhYmxlCiAJCQkJCQkJCQkJCS8vIGFu
ZCBEYXRhVGFibGVzIGFkZHMgYSBwcm9wIGZvciBmYXN0IGxvb2t1cApAQCAtNzc5NCwxMiArNzg1
MSwxMiBAQAogCX07CiAJCiAJCi0JdmFyIF9fZGV0YWlsc19yZW1vdmUgPSBmdW5jdGlvbiAoIGFw
aSApCisJdmFyIF9fZGV0YWlsc19yZW1vdmUgPSBmdW5jdGlvbiAoIGFwaSwgaWR4ICkKIAl7CiAJ
CXZhciBjdHggPSBhcGkuY29udGV4dDsKIAkKLQkJaWYgKCBjdHgubGVuZ3RoICYmIGFwaS5sZW5n
dGggKSB7Ci0JCQl2YXIgcm93ID0gY3R4WzBdLmFvRGF0YVsgYXBpWzBdIF07CisJCWlmICggY3R4
Lmxlbmd0aCApIHsKKwkJCXZhciByb3cgPSBjdHhbMF0uYW9EYXRhWyBpZHggIT09IHVuZGVmaW5l
ZCA/IGlkeCA6IGFwaVswXSBdOwogCQogCQkJaWYgKCByb3cuX2RldGFpbHMgKSB7CiAJCQkJcm93
Ll9kZXRhaWxzLnJlbW92ZSgpOwpAQCAtNzg4OCw3ICs3OTQ1LDcgQEAKIAkKIAkJCQlmb3IgKCB2
YXIgaT0wLCBpZW49ZGF0YS5sZW5ndGggOyBpPGllbiA7IGkrKyApIHsKIAkJCQkJaWYgKCBkYXRh
W2ldLl9kZXRhaWxzICkgewotCQkJCQkJX19kZXRhaWxzX3JlbW92ZSggZGF0YVtpXSApOworCQkJ
CQkJX19kZXRhaWxzX3JlbW92ZSggYXBpLCBpICk7CiAJCQkJCX0KIAkJCQl9CiAJCQl9ICk7CkBA
IC03OTgzLDcgKzgwNDAsMTkgQEAKIAkvLyBjYW4gYmUgYW4gYXJyYXkgb2YgdGhlc2UgaXRlbXMs
IGNvbW1hIHNlcGFyYXRlZCBsaXN0LCBvciBhbiBhcnJheSBvZiBjb21tYQogCS8vIHNlcGFyYXRl
ZCBsaXN0cwogCQotCXZhciBfX3JlX2NvbHVtbl9zZWxlY3RvciA9IC9eKC4qKToobmFtZXx2aXNJ
ZHh8dmlzaWJsZSkkLzsKKwl2YXIgX19yZV9jb2x1bW5fc2VsZWN0b3IgPSAvXiguKyk6KG5hbWV8
dmlzSWR4fHZpc2libGUpJC87CisJCisJCisJLy8gcjEgYW5kIHIyIGFyZSByZWR1bmRhbnQgLSBi
dXQgaXQgbWVhbnMgdGhhdCB0aGUgcGFyYW1ldGVycyBtYXRjaCBmb3IgdGhlCisJLy8gaXRlcmF0
b3IgY2FsbGJhY2sgaW4gY29sdW1ucygpLmRhdGEoKQorCXZhciBfX2NvbHVtbkRhdGEgPSBmdW5j
dGlvbiAoIHNldHRpbmdzLCBjb2x1bW4sIHIxLCByMiwgcm93cyApIHsKKwkJdmFyIGEgPSBbXTsK
KwkJZm9yICggdmFyIHJvdz0wLCBpZW49cm93cy5sZW5ndGggOyByb3c8aWVuIDsgcm93KysgKSB7
CisJCQlhLnB1c2goIF9mbkdldENlbGxEYXRhKCBzZXR0aW5ncywgcm93c1tyb3ddLCBjb2x1bW4g
KSApOworCQl9CisJCXJldHVybiBhOworCX07CisJCiAJCiAJdmFyIF9fY29sdW1uX3NlbGVjdG9y
ID0gZnVuY3Rpb24gKCBzZXR0aW5ncywgc2VsZWN0b3IsIG9wdHMgKQogCXsKQEAgLTc5OTUsNjMg
KzgwNjQsNzQgQEAKIAkJcmV0dXJuIF9zZWxlY3Rvcl9ydW4oIHNlbGVjdG9yLCBmdW5jdGlvbiAo
IHMgKSB7CiAJCQl2YXIgc2VsSW50ID0gX2ludFZhbCggcyApOwogCQorCQkJLy8gU2VsZWN0b3Ig
LSBhbGwKIAkJCWlmICggcyA9PT0gJycgKSB7Ci0JCQkJLy8gQWxsIGNvbHVtbnMKIAkJCQlyZXR1
cm4gX3JhbmdlKCBjb2x1bW5zLmxlbmd0aCApOwogCQkJfQotCQkJZWxzZSBpZiAoIHNlbEludCAh
PT0gbnVsbCApIHsKLQkJCQkvLyBJbnRlZ2VyIHNlbGVjdG9yCisJCQkKKwkJCS8vIFNlbGVjdG9y
IC0gaW5kZXgKKwkJCWlmICggc2VsSW50ICE9PSBudWxsICkgewogCQkJCXJldHVybiBbIHNlbElu
dCA+PSAwID8KIAkJCQkJc2VsSW50IDogLy8gQ291bnQgZnJvbSBsZWZ0CiAJCQkJCWNvbHVtbnMu
bGVuZ3RoICsgc2VsSW50IC8vIENvdW50IGZyb20gcmlnaHQgKCsgYmVjYXVzZSBpdHMgYSBuZWdh
dGl2ZSB2YWx1ZSkKIAkJCQldOwogCQkJfQotCQkJZWxzZSB7Ci0JCQkJdmFyIG1hdGNoID0gdHlw
ZW9mIHMgPT09ICdzdHJpbmcnID8KLQkJCQkJcy5tYXRjaCggX19yZV9jb2x1bW5fc2VsZWN0b3Ig
KSA6Ci0JCQkJCScnOwotCQotCQkJCWlmICggbWF0Y2ggKSB7Ci0JCQkJCXN3aXRjaCggbWF0Y2hb
Ml0gKSB7Ci0JCQkJCQljYXNlICd2aXNJZHgnOgotCQkJCQkJY2FzZSAndmlzaWJsZSc6Ci0JCQkJ
CQkJdmFyIGlkeCA9IHBhcnNlSW50KCBtYXRjaFsxXSwgMTAgKTsKLQkJCQkJCQkvLyBWaXNpYmxl
IGluZGV4IGdpdmVuLCBjb252ZXJ0IHRvIGNvbHVtbiBpbmRleAotCQkJCQkJCWlmICggaWR4IDwg
MCApIHsKLQkJCQkJCQkJLy8gQ291bnRpbmcgZnJvbSB0aGUgcmlnaHQKLQkJCQkJCQkJdmFyIHZp
c0NvbHVtbnMgPSAkLm1hcCggY29sdW1ucywgZnVuY3Rpb24gKGNvbCxpKSB7Ci0JCQkJCQkJCQly
ZXR1cm4gY29sLmJWaXNpYmxlID8gaSA6IG51bGw7Ci0JCQkJCQkJCX0gKTsKLQkJCQkJCQkJcmV0
dXJuIFsgdmlzQ29sdW1uc1sgdmlzQ29sdW1ucy5sZW5ndGggKyBpZHggXSBdOwotCQkJCQkJCX0K
LQkJCQkJCQkvLyBDb3VudGluZyBmcm9tIHRoZSBsZWZ0Ci0JCQkJCQkJcmV0dXJuIFsgX2ZuVmlz
aWJsZVRvQ29sdW1uSW5kZXgoIHNldHRpbmdzLCBpZHggKSBdOworCQkJCisJCQkvLyBTZWxlY3Rv
ciA9IGZ1bmN0aW9uCisJCQlpZiAoIHR5cGVvZiBzID09PSAnZnVuY3Rpb24nICkgeworCQkJCXZh
ciByb3dzID0gX3NlbGVjdG9yX3Jvd19pbmRleGVzKCBzZXR0aW5ncywgb3B0cyApOworCQorCQkJ
CXJldHVybiAkLm1hcCggY29sdW1ucywgZnVuY3Rpb24gKGNvbCwgaWR4KSB7CisJCQkJCXJldHVy
biBzKAorCQkJCQkJCWlkeCwKKwkJCQkJCQlfX2NvbHVtbkRhdGEoIHNldHRpbmdzLCBpZHgsIDAs
IDAsIHJvd3MgKSwKKwkJCQkJCQlub2Rlc1sgaWR4IF0KKwkJCQkJCSkgPyBpZHggOiBudWxsOwor
CQkJCX0gKTsKKwkJCX0KIAkKLQkJCQkJCWNhc2UgJ25hbWUnOgotCQkJCQkJCS8vIG1hdGNoIGJ5
IG5hbWUuIGBuYW1lc2AgaXMgY29sdW1uIGluZGV4IGNvbXBsZXRlIGFuZCBpbiBvcmRlcgotCQkJ
CQkJCXJldHVybiAkLm1hcCggbmFtZXMsIGZ1bmN0aW9uIChuYW1lLCBpKSB7Ci0JCQkJCQkJCXJl
dHVybiBuYW1lID09PSBtYXRjaFsxXSA/IGkgOiBudWxsOworCQkJLy8galF1ZXJ5IG9yIHN0cmlu
ZyBzZWxlY3RvcgorCQkJdmFyIG1hdGNoID0gdHlwZW9mIHMgPT09ICdzdHJpbmcnID8KKwkJCQlz
Lm1hdGNoKCBfX3JlX2NvbHVtbl9zZWxlY3RvciApIDoKKwkJCQknJzsKKwkKKwkJCWlmICggbWF0
Y2ggKSB7CisJCQkJc3dpdGNoKCBtYXRjaFsyXSApIHsKKwkJCQkJY2FzZSAndmlzSWR4JzoKKwkJ
CQkJY2FzZSAndmlzaWJsZSc6CisJCQkJCQl2YXIgaWR4ID0gcGFyc2VJbnQoIG1hdGNoWzFdLCAx
MCApOworCQkJCQkJLy8gVmlzaWJsZSBpbmRleCBnaXZlbiwgY29udmVydCB0byBjb2x1bW4gaW5k
ZXgKKwkJCQkJCWlmICggaWR4IDwgMCApIHsKKwkJCQkJCQkvLyBDb3VudGluZyBmcm9tIHRoZSBy
aWdodAorCQkJCQkJCXZhciB2aXNDb2x1bW5zID0gJC5tYXAoIGNvbHVtbnMsIGZ1bmN0aW9uIChj
b2wsaSkgeworCQkJCQkJCQlyZXR1cm4gY29sLmJWaXNpYmxlID8gaSA6IG51bGw7CiAJCQkJCQkJ
fSApOwotCQkJCQl9Ci0JCQkJfQotCQkJCWVsc2UgewotCQkJCQkvLyBqUXVlcnkgc2VsZWN0b3Ig
b24gdGhlIFRIIGVsZW1lbnRzIGZvciB0aGUgY29sdW1ucwotCQkJCQlyZXR1cm4gJCggbm9kZXMg
KQotCQkJCQkJLmZpbHRlciggcyApCi0JCQkJCQkubWFwKCBmdW5jdGlvbiAoKSB7Ci0JCQkJCQkJ
cmV0dXJuICQuaW5BcnJheSggdGhpcywgbm9kZXMgKTsgLy8gYG5vZGVzYCBpcyBjb2x1bW4gaW5k
ZXggY29tcGxldGUgYW5kIGluIG9yZGVyCi0JCQkJCQl9ICkKLQkJCQkJCS50b0FycmF5KCk7CisJ
CQkJCQkJcmV0dXJuIFsgdmlzQ29sdW1uc1sgdmlzQ29sdW1ucy5sZW5ndGggKyBpZHggXSBdOwor
CQkJCQkJfQorCQkJCQkJLy8gQ291bnRpbmcgZnJvbSB0aGUgbGVmdAorCQkJCQkJcmV0dXJuIFsg
X2ZuVmlzaWJsZVRvQ29sdW1uSW5kZXgoIHNldHRpbmdzLCBpZHggKSBdOworCQorCQkJCQljYXNl
ICduYW1lJzoKKwkJCQkJCS8vIG1hdGNoIGJ5IG5hbWUuIGBuYW1lc2AgaXMgY29sdW1uIGluZGV4
IGNvbXBsZXRlIGFuZCBpbiBvcmRlcgorCQkJCQkJcmV0dXJuICQubWFwKCBuYW1lcywgZnVuY3Rp
b24gKG5hbWUsIGkpIHsKKwkJCQkJCQlyZXR1cm4gbmFtZSA9PT0gbWF0Y2hbMV0gPyBpIDogbnVs
bDsKKwkJCQkJCX0gKTsKIAkJCQl9CiAJCQl9CisJCQllbHNlIHsKKwkJCQkvLyBqUXVlcnkgc2Vs
ZWN0b3Igb24gdGhlIFRIIGVsZW1lbnRzIGZvciB0aGUgY29sdW1ucworCQkJCXJldHVybiAkKCBu
b2RlcyApCisJCQkJCS5maWx0ZXIoIHMgKQorCQkJCQkubWFwKCBmdW5jdGlvbiAoKSB7CisJCQkJ
CQlyZXR1cm4gJC5pbkFycmF5KCB0aGlzLCBub2RlcyApOyAvLyBgbm9kZXNgIGlzIGNvbHVtbiBp
bmRleCBjb21wbGV0ZSBhbmQgaW4gb3JkZXIKKwkJCQkJfSApCisJCQkJCS50b0FycmF5KCk7CisJ
CQl9CiAJCX0gKTsKIAl9OwogCQogCQotCQotCQotCQotCXZhciBfX3NldENvbHVtblZpcyA9IGZ1
bmN0aW9uICggc2V0dGluZ3MsIGNvbHVtbiwgdmlzICkgeworCXZhciBfX3NldENvbHVtblZpcyA9
IGZ1bmN0aW9uICggc2V0dGluZ3MsIGNvbHVtbiwgdmlzLCByZWNhbGMgKSB7CiAJCXZhcgogCQkJ
Y29scyA9IHNldHRpbmdzLmFvQ29sdW1ucywKIAkJCWNvbCAgPSBjb2xzWyBjb2x1bW4gXSwKQEAg
LTgwOTQsMTIgKzgxNzQsMTQgQEAKIAkJX2ZuRHJhd0hlYWQoIHNldHRpbmdzLCBzZXR0aW5ncy5h
b0hlYWRlciApOwogCQlfZm5EcmF3SGVhZCggc2V0dGluZ3MsIHNldHRpbmdzLmFvRm9vdGVyICk7
CiAJCi0JCS8vIEF1dG9tYXRpY2FsbHkgYWRqdXN0IGNvbHVtbiBzaXppbmcKLQkJX2ZuQWRqdXN0
Q29sdW1uU2l6aW5nKCBzZXR0aW5ncyApOworCQlpZiAoIHJlY2FsYyA9PT0gdW5kZWZpbmVkIHx8
IHJlY2FsYyApIHsKKwkJCS8vIEF1dG9tYXRpY2FsbHkgYWRqdXN0IGNvbHVtbiBzaXppbmcKKwkJ
CV9mbkFkanVzdENvbHVtblNpemluZyggc2V0dGluZ3MgKTsKIAkKLQkJLy8gUmVhbGlnbiBjb2x1
bW5zIGZvciBzY3JvbGxpbmcKLQkJaWYgKCBzZXR0aW5ncy5vU2Nyb2xsLnNYIHx8IHNldHRpbmdz
Lm9TY3JvbGwuc1kgKSB7Ci0JCQlfZm5TY3JvbGxEcmF3KCBzZXR0aW5ncyApOworCQkJLy8gUmVh
bGlnbiBjb2x1bW5zIGZvciBzY3JvbGxpbmcKKwkJCWlmICggc2V0dGluZ3Mub1Njcm9sbC5zWCB8
fCBzZXR0aW5ncy5vU2Nyb2xsLnNZICkgeworCQkJCV9mblNjcm9sbERyYXcoIHNldHRpbmdzICk7
CisJCQl9CiAJCX0KIAkKIAkJX2ZuQ2FsbGJhY2tGaXJlKCBzZXR0aW5ncywgbnVsbCwgJ2NvbHVt
bi12aXNpYmlsaXR5JywgW3NldHRpbmdzLCBjb2x1bW4sIHZpc10gKTsKQEAgLTgxNTksMTIgKzgy
NDEsMTMgQEAKIAkgKgogCSAqLwogCV9hcGlfcmVnaXN0ZXJQbHVyYWwoICdjb2x1bW5zKCkuZGF0
YSgpJywgJ2NvbHVtbigpLmRhdGEoKScsIGZ1bmN0aW9uICgpIHsKLQkJcmV0dXJuIHRoaXMuaXRl
cmF0b3IoICdjb2x1bW4tcm93cycsIGZ1bmN0aW9uICggc2V0dGluZ3MsIGNvbHVtbiwgaSwgaiwg
cm93cyApIHsKLQkJCXZhciBhID0gW107Ci0JCQlmb3IgKCB2YXIgcm93PTAsIGllbj1yb3dzLmxl
bmd0aCA7IHJvdzxpZW4gOyByb3crKyApIHsKLQkJCQlhLnB1c2goIF9mbkdldENlbGxEYXRhKCBz
ZXR0aW5ncywgcm93c1tyb3ddLCBjb2x1bW4sICcnICkgKTsKLQkJCX0KLQkJCXJldHVybiBhOwor
CQlyZXR1cm4gdGhpcy5pdGVyYXRvciggJ2NvbHVtbi1yb3dzJywgX19jb2x1bW5EYXRhICk7CisJ
fSApOworCQorCQorCV9hcGlfcmVnaXN0ZXJQbHVyYWwoICdjb2x1bW5zKCkuZGF0YVNyYygpJywg
J2NvbHVtbigpLmRhdGFTcmMoKScsIGZ1bmN0aW9uICgpIHsKKwkJcmV0dXJuIHRoaXMuaXRlcmF0
b3IoICdjb2x1bW4nLCBmdW5jdGlvbiAoIHNldHRpbmdzLCBjb2x1bW4gKSB7CisJCQlyZXR1cm4g
c2V0dGluZ3MuYW9Db2x1bW5zW2NvbHVtbl0ubURhdGE7CiAJCX0gKTsKIAl9ICk7CiAJCkBAIC04
MTg2LDExICs4MjY5LDExIEBACiAJCiAJCiAJCi0JX2FwaV9yZWdpc3RlclBsdXJhbCggJ2NvbHVt
bnMoKS52aXNpYmxlKCknLCAnY29sdW1uKCkudmlzaWJsZSgpJywgZnVuY3Rpb24gKCB2aXMgKSB7
CisJX2FwaV9yZWdpc3RlclBsdXJhbCggJ2NvbHVtbnMoKS52aXNpYmxlKCknLCAnY29sdW1uKCku
dmlzaWJsZSgpJywgZnVuY3Rpb24gKCB2aXMsIGNhbGMgKSB7CiAJCXJldHVybiB0aGlzLml0ZXJh
dG9yKCAnY29sdW1uJywgZnVuY3Rpb24gKCBzZXR0aW5ncywgY29sdW1uICkgewogCQkJcmV0dXJu
IHZpcyA9PT0gdW5kZWZpbmVkID8KIAkJCQlzZXR0aW5ncy5hb0NvbHVtbnNbIGNvbHVtbiBdLmJW
aXNpYmxlIDoKLQkJCQlfX3NldENvbHVtblZpcyggc2V0dGluZ3MsIGNvbHVtbiwgdmlzICk7CisJ
CQkJX19zZXRDb2x1bW5WaXMoIHNldHRpbmdzLCBjb2x1bW4sIHZpcywgY2FsYyApOwogCQl9ICk7
CiAJfSApOwogCQpAQCAtODI1NSwzMSArODMzOCw0OCBAQAogCQl2YXIgYWxsQ2VsbHMgPSAkKCBb
XS5jb25jYXQuYXBwbHkoW10sIGNlbGxzKSApOwogCQl2YXIgcm93OwogCQl2YXIgY29sdW1ucyA9
IHNldHRpbmdzLmFvQ29sdW1ucy5sZW5ndGg7Ci0JCXZhciBhLCBpLCBpZW4sIGo7CisJCXZhciBh
LCBpLCBpZW4sIGosIG8sIGhvc3Q7CiAJCiAJCXJldHVybiBfc2VsZWN0b3JfcnVuKCBzZWxlY3Rv
ciwgZnVuY3Rpb24gKCBzICkgewotCQkJaWYgKCBzID09PSBudWxsIHx8IHMgPT09IHVuZGVmaW5l
ZCApIHsKLQkJCQkvLyBBbGwgY2VsbHMKKwkJCXZhciBmblNlbGVjdG9yID0gdHlwZW9mIHMgPT09
ICdmdW5jdGlvbic7CisJCisJCQlpZiAoIHMgPT09IG51bGwgfHwgcyA9PT0gdW5kZWZpbmVkIHx8
IGZuU2VsZWN0b3IgKSB7CisJCQkJLy8gQWxsIGNlbGxzIGFuZCBmdW5jdGlvbiBzZWxlY3RvcnMK
IAkJCQlhID0gW107CiAJCiAJCQkJZm9yICggaT0wLCBpZW49cm93cy5sZW5ndGggOyBpPGllbiA7
IGkrKyApIHsKIAkJCQkJcm93ID0gcm93c1tpXTsKIAkKIAkJCQkJZm9yICggaj0wIDsgajxjb2x1
bW5zIDsgaisrICkgewotCQkJCQkJYS5wdXNoKCB7CisJCQkJCQlvID0gewogCQkJCQkJCXJvdzog
cm93LAogCQkJCQkJCWNvbHVtbjogagotCQkJCQkJfSApOworCQkJCQkJfTsKKwkKKwkJCQkJCWlm
ICggZm5TZWxlY3RvciApIHsKKwkJCQkJCQkvLyBTZWxlY3RvciAtIGZ1bmN0aW9uCisJCQkJCQkJ
aG9zdCA9IHNldHRpbmdzLmFvRGF0YVsgcm93IF07CisJCisJCQkJCQkJaWYgKCBzKCBvLCBfZm5H
ZXRDZWxsRGF0YShzZXR0aW5ncywgcm93LCBqKSwgaG9zdC5hbkNlbGxzW2pdICkgKSB7CisJCQkJ
CQkJCWEucHVzaCggbyApOworCQkJCQkJCX0KKwkJCQkJCX0KKwkJCQkJCWVsc2UgeworCQkJCQkJ
CS8vIFNlbGVjdG9yIC0gYWxsCisJCQkJCQkJYS5wdXNoKCBvICk7CisJCQkJCQl9CiAJCQkJCX0K
IAkJCQl9CiAJCiAJCQkJcmV0dXJuIGE7CiAJCQl9Ci0JCQllbHNlIGlmICggJC5pc1BsYWluT2Jq
ZWN0KCBzICkgKSB7CisJCQkKKwkJCS8vIFNlbGVjdG9yIC0gaW5kZXgKKwkJCWlmICggJC5pc1Bs
YWluT2JqZWN0KCBzICkgKSB7CiAJCQkJcmV0dXJuIFtzXTsKIAkJCX0KIAkKLQkJCS8vIGpRdWVy
eSBmaWx0ZXJlZCBjZWxscworCQkJLy8gU2VsZWN0b3IgLSBqUXVlcnkgZmlsdGVyZWQgY2VsbHMK
IAkJCXJldHVybiBhbGxDZWxscwogCQkJCS5maWx0ZXIoIHMgKQogCQkJCS5tYXAoIGZ1bmN0aW9u
IChpLCBlbCkgewpAQCAtODM3NSw2ICs4NDc1LDEzIEBACiAJfSApOwogCQogCQorCV9hcGlfcmVn
aXN0ZXJQbHVyYWwoICdjZWxscygpLnJlbmRlcigpJywgJ2NlbGwoKS5yZW5kZXIoKScsIGZ1bmN0
aW9uICggdHlwZSApIHsKKwkJcmV0dXJuIHRoaXMuaXRlcmF0b3IoICdjZWxsJywgZnVuY3Rpb24g
KCBzZXR0aW5ncywgcm93LCBjb2x1bW4gKSB7CisJCQlyZXR1cm4gX2ZuR2V0Q2VsbERhdGEoIHNl
dHRpbmdzLCByb3csIGNvbHVtbiwgdHlwZSApOworCQl9ICk7CisJfSApOworCQorCQogCV9hcGlf
cmVnaXN0ZXJQbHVyYWwoICdjZWxscygpLmluZGV4ZXMoKScsICdjZWxsKCkuaW5kZXgoKScsIGZ1
bmN0aW9uICgpIHsKIAkJcmV0dXJuIHRoaXMuaXRlcmF0b3IoICdjZWxsJywgZnVuY3Rpb24gKCBz
ZXR0aW5ncywgcm93LCBjb2x1bW4gKSB7CiAJCQlyZXR1cm4gewpAQCAtODU0NywzMyArODY1NCwz
NCBAQAogCX0gKTsKIAkKIAkKLQlfYXBpX3JlZ2lzdGVyKCBbCisJX2FwaV9yZWdpc3RlclBsdXJh
bCgKIAkJJ2NvbHVtbnMoKS5zZWFyY2goKScsCi0JCSdjb2x1bW4oKS5zZWFyY2goKScKLQldLCBm
dW5jdGlvbiAoIGlucHV0LCByZWdleCwgc21hcnQsIGNhc2VJbnNlbiApIHsKLQkJcmV0dXJuIHRo
aXMuaXRlcmF0b3IoICdjb2x1bW4nLCBmdW5jdGlvbiAoIHNldHRpbmdzLCBjb2x1bW4gKSB7Ci0J
CQl2YXIgcHJlU2VhcmNoID0gc2V0dGluZ3MuYW9QcmVTZWFyY2hDb2xzOworCQknY29sdW1uKCku
c2VhcmNoKCknLAorCQlmdW5jdGlvbiAoIGlucHV0LCByZWdleCwgc21hcnQsIGNhc2VJbnNlbiAp
IHsKKwkJCXJldHVybiB0aGlzLml0ZXJhdG9yKCAnY29sdW1uJywgZnVuY3Rpb24gKCBzZXR0aW5n
cywgY29sdW1uICkgeworCQkJCXZhciBwcmVTZWFyY2ggPSBzZXR0aW5ncy5hb1ByZVNlYXJjaENv
bHM7CisJCisJCQkJaWYgKCBpbnB1dCA9PT0gdW5kZWZpbmVkICkgeworCQkJCQkvLyBnZXQKKwkJ
CQkJcmV0dXJuIHByZVNlYXJjaFsgY29sdW1uIF0uc1NlYXJjaDsKKwkJCQl9CiAJCi0JCQlpZiAo
IGlucHV0ID09PSB1bmRlZmluZWQgKSB7Ci0JCQkJLy8gZ2V0Ci0JCQkJcmV0dXJuIHByZVNlYXJj
aFsgY29sdW1uIF0uc1NlYXJjaDsKLQkJCX0KKwkJCQkvLyBzZXQKKwkJCQlpZiAoICEgc2V0dGlu
Z3Mub0ZlYXR1cmVzLmJGaWx0ZXIgKSB7CisJCQkJCXJldHVybjsKKwkJCQl9CiAJCi0JCQkvLyBz
ZXQKLQkJCWlmICggISBzZXR0aW5ncy5vRmVhdHVyZXMuYkZpbHRlciApIHsKLQkJCQlyZXR1cm47
Ci0JCQl9CisJCQkJJC5leHRlbmQoIHByZVNlYXJjaFsgY29sdW1uIF0sIHsKKwkJCQkJInNTZWFy
Y2giOiBpbnB1dCsiIiwKKwkJCQkJImJSZWdleCI6ICByZWdleCA9PT0gbnVsbCA/IGZhbHNlIDog
cmVnZXgsCisJCQkJCSJiU21hcnQiOiAgc21hcnQgPT09IG51bGwgPyB0cnVlICA6IHNtYXJ0LAor
CQkJCQkiYkNhc2VJbnNlbnNpdGl2ZSI6IGNhc2VJbnNlbiA9PT0gbnVsbCA/IHRydWUgOiBjYXNl
SW5zZW4KKwkJCQl9ICk7CiAJCi0JCQkkLmV4dGVuZCggcHJlU2VhcmNoWyBjb2x1bW4gXSwgewot
CQkJCSJzU2VhcmNoIjogaW5wdXQrIiIsCi0JCQkJImJSZWdleCI6ICByZWdleCA9PT0gbnVsbCA/
IGZhbHNlIDogcmVnZXgsCi0JCQkJImJTbWFydCI6ICBzbWFydCA9PT0gbnVsbCA/IHRydWUgIDog
c21hcnQsCi0JCQkJImJDYXNlSW5zZW5zaXRpdmUiOiBjYXNlSW5zZW4gPT09IG51bGwgPyB0cnVl
IDogY2FzZUluc2VuCisJCQkJX2ZuRmlsdGVyQ29tcGxldGUoIHNldHRpbmdzLCBzZXR0aW5ncy5v
UHJldmlvdXNTZWFyY2gsIDEgKTsKIAkJCX0gKTsKLQkKLQkJCV9mbkZpbHRlckNvbXBsZXRlKCBz
ZXR0aW5ncywgc2V0dGluZ3Mub1ByZXZpb3VzU2VhcmNoLCAxICk7Ci0JCX0gKTsKLQl9ICk7CisJ
CX0KKwkpOwogCQogCS8qCiAJICogU3RhdGUgQVBJIG1ldGhvZHMKQEAgLTg3MDQsNiArODgxMiwy
OSBAQAogCQogCQogCS8qKgorCSAqIERhdGFUYWJsZXMgdXRpbGl0eSBtZXRob2RzCisJICogCisJ
ICogVGhpcyBuYW1lc3BhY2UgcHJvdmlkZXMgaGVscGVyIG1ldGhvZHMgdGhhdCBEYXRhVGFibGVz
IHVzZXMgaW50ZXJuYWxseSB0bworCSAqIGNyZWF0ZSBhIERhdGFUYWJsZSwgYnV0IHdoaWNoIGFy
ZSBub3QgZXhjbHVzaXZlbHkgdXNlZCBvbmx5IGZvciBEYXRhVGFibGVzLgorCSAqIFRoZXNlIG1l
dGhvZHMgY2FuIGJlIHVzZWQgYnkgZXh0ZW5zaW9uIGF1dGhvcnMgdG8gc2F2ZSB0aGUgZHVwbGlj
YXRpb24gb2YKKwkgKiBjb2RlLgorCSAqCisJICogIEBuYW1lc3BhY2UKKwkgKi8KKwlEYXRhVGFi
bGUudXRpbCA9IHsKKwkJLyoqCisJCSAqIFRocm90dGxlIHRoZSBjYWxscyB0byBhIGZ1bmN0aW9u
LiBBcmd1bWVudHMgYW5kIGNvbnRleHQgYXJlIG1haW50YWluZWQKKwkJICogZm9yIHRoZSB0aHJv
dHRsZWQgZnVuY3Rpb24uCisJCSAqCisJCSAqIEBwYXJhbSB7ZnVuY3Rpb259IGZuIEZ1bmN0aW9u
IHRvIGJlIGNhbGxlZAorCQkgKiBAcGFyYW0ge2ludGVnZXJ9IGZyZXEgQ2FsbCBmcmVxdWVuY3kg
aW4gbVMKKwkJICogQHJldHVybiB7ZnVuY3Rpb259IFdyYXBwZWQgZnVuY3Rpb24KKwkJICovCisJ
CXRocm90dGxlOiBfZm5UaHJvdHRsZQorCX07CisJCisJCisJLyoqCiAJICogQ29udmVydCBmcm9t
IGNhbWVsIGNhc2UgcGFyYW1ldGVycyB0byBIdW5nYXJpYW4gbm90YXRpb24uIFRoaXMgaXMgbWFk
ZSBwdWJsaWMKIAkgKiBmb3IgdGhlIGV4dGVuc2lvbnMgdG8gcHJvdmlkZSB0aGUgc2FtZSBhYmls
aXR5IGFzIERhdGFUYWJsZXMgY29yZSB0byBhY2NlcHQKIAkgKiBlaXRoZXIgdGhlIDEuOSBzdHls
ZSBIdW5nYXJpYW4gbm90YXRpb24sIG9yIHRoZSAxLjEwKyBzdHlsZSBjYW1lbENhc2UKQEAgLTg4
ODIsNyArOTAxMyw3IEBACiAJICogIEB0eXBlIHN0cmluZwogCSAqICBAZGVmYXVsdCBWZXJzaW9u
IG51bWJlcgogCSAqLwotCURhdGFUYWJsZS52ZXJzaW9uID0gIjEuMTAuMSI7CisJRGF0YVRhYmxl
LnZlcnNpb24gPSAiMS4xMC4zIjsKIAogCS8qKgogCSAqIFByaXZhdGUgZGF0YSBzdG9yZSwgY29u
dGFpbmluZyBhbGwgb2YgdGhlIHNldHRpbmdzIG9iamVjdHMgdGhhdCBhcmUKQEAgLTExMzIzLDYg
KzExNDU0LDI2IEBACiAJCiAJCiAJCS8qKgorCQkgKiBTZWFyY2ggZGVsYXkgb3B0aW9uLiBUaGlz
IHdpbGwgdGhyb3R0bGUgZnVsbCB0YWJsZSBzZWFyY2hlcyB0aGF0IHVzZSB0aGUKKwkJICogRGF0
YVRhYmxlcyBwcm92aWRlZCBzZWFyY2ggaW5wdXQgZWxlbWVudCAoaXQgZG9lcyBub3QgZWZmZWN0
IGNhbGxzIHRvCisJCSAqIGBkdC1hcGkgc2VhcmNoKClgLCBwcm92aWRpbmcgYSBkZWxheSBiZWZv
cmUgdGhlIHNlYXJjaCBpcyBtYWRlLgorCQkgKiAgQHR5cGUgaW50ZWdlcgorCQkgKiAgQGRlZmF1
bHQgMAorCQkgKgorCQkgKiAgQGR0b3B0IE9wdGlvbnMKKwkJICogIEBuYW1lIERhdGFUYWJsZS5k
ZWZhdWx0cy5zZWFyY2hEZWxheQorCQkgKgorCQkgKiAgQGV4YW1wbGUKKwkJICogICAgJChkb2N1
bWVudCkucmVhZHkoIGZ1bmN0aW9uKCkgeworCQkgKiAgICAgICQoJyNleGFtcGxlJykuZGF0YVRh
YmxlKCB7CisJCSAqICAgICAgICAic2VhcmNoRGVsYXkiOiAyMDAKKwkJICogICAgICB9ICk7CisJ
CSAqICAgIH0gKQorCQkgKi8KKwkJInNlYXJjaERlbGF5IjogbnVsbCwKKwkKKwkKKwkJLyoqCiAJ
CSAqIERhdGFUYWJsZXMgZmVhdHVyZXMgZm91ciBkaWZmZXJlbnQgYnVpbHQtaW4gb3B0aW9ucyBm
b3IgdGhlIGJ1dHRvbnMgdG8KIAkJICogZGlzcGxheSBmb3IgcGFnaW5hdGlvbiBjb250cm9sOgog
CQkgKgpAQCAtMTI4MzksNiArMTI5OTAsMTMgQEAKIAkJInNEb20iOiBudWxsLAogCQogCQkvKioK
KwkJICogU2VhcmNoIGRlbGF5IChpbiBtUykKKwkJICogIEB0eXBlIGludGVnZXIKKwkJICogIEBk
ZWZhdWx0IG51bGwKKwkJICovCisJCSJzZWFyY2hEZWxheSI6IG51bGwsCisJCisJCS8qKgogCQkg
KiBXaGljaCB0eXBlIG9mIHBhZ2luYXRpb24gc2hvdWxkIGJlIHVzZWQuCiAJCSAqIE5vdGUgdGhh
dCB0aGlzIHBhcmFtZXRlciB3aWxsIGJlIHNldCBieSB0aGUgaW5pdGlhbGlzYXRpb24gcm91dGlu
ZS4gVG8KIAkJICogc2V0IGEgZGVmYXVsdCB1c2Uge0BsaW5rIERhdGFUYWJsZS5kZWZhdWx0c30u
CkBAIC0xMzk4Nyw3ICsxNDE0NSw3IEBACiAJCiAJCiAJdmFyIF9fbnVtZXJpY1JlcGxhY2UgPSBm
dW5jdGlvbiAoIGQsIGRlY2ltYWxQbGFjZSwgcmUxLCByZTIgKSB7Ci0JCWlmICggIWQgfHwgZCA9
PT0gJy0nICkgeworCQlpZiAoIGQgIT09IDAgJiYgKCFkIHx8IGQgPT09ICctJykgKSB7CiAJCQly
ZXR1cm4gLUluZmluaXR5OwogCQl9CiAJCkBAIC0xNDEwNyw3ICsxNDI2NSw3IEBACiAJCQkvLyBW
OCB3aWxsIHJlbW92ZSBhbnkgdW5rbm93biBjaGFyYWN0ZXJzIGF0IHRoZSBzdGFydCBhbmQgZW5k
IG9mIHRoZQogCQkJLy8gZXhwcmVzc2lvbiwgbGVhZGluZyB0byBmYWxzZSBtYXRjaGVzIHN1Y2gg
YXMgYCQyNDUuMTJgIG9yIGAxMCVgIGJlaW5nCiAJCQkvLyBhIHZhbGlkIGRhdGUuIFNlZSBmb3J1
bSB0aHJlYWQgMTg5NDEgZm9yIGRldGFpbC4KLQkJCWlmICggZCAmJiAoICEgX3JlX2RhdGVfc3Rh
cnQudGVzdChkKSB8fCAhIF9yZV9kYXRlX2VuZC50ZXN0KGQpICkgKSB7CisJCQlpZiAoIGQgJiYg
IShkIGluc3RhbmNlb2YgRGF0ZSkgJiYgKCAhIF9yZV9kYXRlX3N0YXJ0LnRlc3QoZCkgfHwgISBf
cmVfZGF0ZV9lbmQudGVzdChkKSApICkgewogCQkJCXJldHVybiBudWxsOwogCQkJfQogCQkJdmFy
IHBhcnNlZCA9IERhdGUucGFyc2UoZCk7CkBAIC0xNDIwMSw4ICsxNDM1OSw2IEBACiAJCQl9LAog
CQogCQkJanF1ZXJ5dWk6IGZ1bmN0aW9uICggc2V0dGluZ3MsIGNlbGwsIGNvbHVtbiwgY2xhc3Nl
cyApIHsKLQkJCQl2YXIgY29sSWR4ID0gY29sdW1uLmlkeDsKLQkKIAkJCQkkKCc8ZGl2Lz4nKQog
CQkJCQkuYWRkQ2xhc3MoIGNsYXNzZXMuc1NvcnRKVUlXcmFwcGVyICkKIAkJCQkJLmFwcGVuZCgg
Y2VsbC5jb250ZW50cygpICkKQEAgLTE0MjE3LDYgKzE0MzczLDggQEAKIAkJCQkJCXJldHVybjsK
IAkJCQkJfQogCQorCQkJCQl2YXIgY29sSWR4ID0gY29sdW1uLmlkeDsKKwkKIAkJCQkJY2VsbAog
CQkJCQkJLnJlbW92ZUNsYXNzKCBjbGFzc2VzLnNTb3J0QXNjICsiICIrY2xhc3Nlcy5zU29ydERl
c2MgKQogCQkJCQkJLmFkZENsYXNzKCBjb2x1bW5zWyBjb2xJZHggXSA9PSAnYXNjJyA/CkBAIC0x
NDYxMCwzICsxNDc2OCw0IEBACiB9KSk7CiAKIH0od2luZG93LCBkb2N1bWVudCkpOworCg==
--001a113a619ccef68b05056ea4fa--
