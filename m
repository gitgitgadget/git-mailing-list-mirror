X-Spam-Checker-Version: SpamAssassin 3.4.0 (2014-02-07) on dcvr.yhbt.net
X-Spam-Level: 
X-Spam-ASN: AS31976 209.132.176.0/21
X-Spam-Status: No, score=-3.5 required=3.0 tests=AWL,BAYES_00,
	HEADER_FROM_DIFFERENT_DOMAINS,MSGID_FROM_MTA_HEADER,RP_MATCHES_RCVD
	shortcircuit=no autolearn=ham autolearn_force=no version=3.4.0
From: Carl Worth <cworth@cworth.org>
Subject: Re: Cleaning up git user-interface warts
Date: Tue, 14 Nov 2006 12:56:45 -0800
Message-ID: <87d57pu4qa.wl%cworth@cworth.org>
References: <87k61yt1x2.wl%cworth@cworth.org>
	<455A1137.8030301@shadowen.org>
	<87hcx1u934.wl%cworth@cworth.org>
	<20061114194707.GH7201@pasky.or.cz>
Mime-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: multipart/signed;
 boundary="pgp-sign-Multipart_Tue_Nov_14_12:56:38_2006-1"; micalg=pgp-sha1;
 protocol="application/pgp-signature"
Content-Transfer-Encoding: 7bit
NNTP-Posting-Date: Tue, 14 Nov 2006 20:57:18 +0000 (UTC)
Cc: Andy Whitcroft <apw@shadowen.org>, Junio C Hamano <junkio@cox.net>,
	git@vger.kernel.org
Return-path: <git-owner@vger.kernel.org>
Envelope-to: gcvg-git@gmane.org
In-Reply-To: <20061114194707.GH7201@pasky.or.cz>
User-Agent: Wanderlust/2.14.0 (Africa) Emacs/21.4 Mule/5.0 (SAKAKI)
Precedence: bulk
X-Mailing-List: git@vger.kernel.org
Archived-At: <http://permalink.gmane.org/gmane.comp.version-control.git/31375>
Received: from vger.kernel.org ([209.132.176.167]) by ciao.gmane.org with
 esmtp (Exim 4.43) id 1Gk5LF-0004j0-1W for gcvg-git@gmane.org; Tue, 14 Nov
 2006 21:57:13 +0100
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand id
 S965652AbWKNU5J (ORCPT <rfc822;gcvg-git@m.gmane.org>); Tue, 14 Nov 2006
 15:57:09 -0500
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S965737AbWKNU5J
 (ORCPT <rfc822;git-outgoing>); Tue, 14 Nov 2006 15:57:09 -0500
Received: from theworths.org ([217.160.253.102]:49638 "EHLO theworths.org")
 by vger.kernel.org with ESMTP id S965652AbWKNU5H (ORCPT
 <rfc822;git@vger.kernel.org>); Tue, 14 Nov 2006 15:57:07 -0500
Received: (qmail 6196 invoked from network); 14 Nov 2006 15:57:02 -0500
Received: from localhost (HELO raht.cworth.org) (127.0.0.1) by localhost with
 SMTP; 14 Nov 2006 15:57:02 -0500
To: Petr Baudis <pasky@suse.cz>
Sender: git-owner@vger.kernel.org

--pgp-sign-Multipart_Tue_Nov_14_12:56:38_2006-1
Content-Type: text/plain; charset=US-ASCII

On Tue, 14 Nov 2006 20:47:07 +0100, Petr Baudis wrote:
> Hmm, did they (not) consider Cogito? They wouldn't have those issues.

I didn't ask.

Frankly, I don't see a lot of value in the git/cogito split right now.

When I first learned git and cogito (January 2006) and switched cairo
from cvs to git (the repository storage), I recommended cogito to
cairo programmers as a "more cvs-like" way to work with the new
repository.

Since then, having worked with git (the command-line program)
exclusively for my own work, and having introduced it to dozens of new
users, I don't bother recommending cogito anymore. It's just not that
hard to learn git itself, so there's not that much value in learning
cogito instead.

And this is particularly true since there's quite a large cost to
having to learn cogito _in addition to_ git. And I think that's what
most people would have to do anyway. For example, cogito doesn't wrap
all git commands. So users have to dip down into git for things like
git-bisect or else miss out an important functionality.

And for something like the Fedora transition, where I'm working with
the people who will be training the community in the new tools, the
trainers would have to learn both if they want to support a community
using both git and cogito. These trainers are already complaining
about the ~140 git commands, so adding 40 more cogito commands as well
doesn't make the story better.

It's great that git is written in a script-friendly way so that new
interfaces can be built on top of it. And I think the benefits of new
user interfaces are clear when they work in fundamentally different
ways, (say, being operated through a GUI). But where git and cogito
are both command-line utilities and have the same basic functionality,
I don't see how its helpful to maintain both tools. (Certainly some of
my attitude here is due to the timing of my introduction to git
contrasted with the timing of the inception of cogito. I'm sure git
improved a lot between those two events.)

There are some things that cogito does that git does not that I would
like to have in git. One is having a "commit" command that commits
everything by default without an extra command-line option. Another
(that I _think_ cogito has) is a way to switch away from a branch with
dirty changes to a clean branch, do work there, and come back to the
original branch with the dirty stuff still there.

I don't see any defining difference that justifies cogito's
existence ("hide the index" maybe? let's just hide it a tiny bit more
in git). And I would like to help work to get the remaining good
stuff that has been proven in cogito---to get it pushed down into git
itself.

-Carl

--pgp-sign-Multipart_Tue_Nov_14_12:56:38_2006-1
Content-Type: application/pgp-signature
Content-Transfer-Encoding: 7bit

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.5 (GNU/Linux)

iD8DBQBFWi2N6JDdNq8qSWgRAia8AJ9b7rLA6wOfat7/OCguOyNRhpi+nACeIE3j
jYXp17k0tw5LnV6eFRJeocY=
=mRNe
-----END PGP SIGNATURE-----

