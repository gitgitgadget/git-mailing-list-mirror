From: Carl Worth <cworth@cworth.org>
Subject: Re: [PATCH] New git-seek command with documentation and test.
Date: Fri, 24 Feb 2006 06:23:42 -0800
Message-ID: <87oe0wrg29.wl%cworth@cworth.org>
References: <43F20532.5000609@iaglans.de>
	<Pine.LNX.4.64.0602140845080.3691@g5.osdl.org>
	<87k6bxvmj6.wl%cworth@cworth.org>
	<Pine.LNX.4.64.0602141026570.3691@g5.osdl.org>
	<87fymlvgzv.wl%cworth@cworth.org>
	<Pine.LNX.4.64.0602141224110.3691@g5.osdl.org>
	<87d5hpvc8p.wl%cworth@cworth.org>
	<7vu0b1pntl.fsf@assigned-by-dhcp.cox.net>
	<87zmkhrf4y.wl%cworth@cworth.org>
	<43FED93D.1000601@op5.se>
Mime-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: multipart/signed;
 boundary="pgp-sign-Multipart_Fri_Feb_24_06:23:35_2006-1"; micalg=pgp-sha1;
 protocol="application/pgp-signature"
Content-Transfer-Encoding: 7bit
Cc: Junio C Hamano <junkio@cox.net>, git@vger.kernel.org,
	Linus Torvalds <torvalds@osdl.org>
X-From: git-owner@vger.kernel.org Fri Feb 24 15:25:39 2006
Return-path: <git-owner@vger.kernel.org>
Envelope-to: gcvg-git@gmane.org
Received: from vger.kernel.org ([209.132.176.167])
	by ciao.gmane.org with esmtp (Exim 4.43)
	id 1FCdst-0000fr-SB
	for gcvg-git@gmane.org; Fri, 24 Feb 2006 15:25:28 +0100
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S932151AbWBXOZG (ORCPT <rfc822;gcvg-git@m.gmane.org>);
	Fri, 24 Feb 2006 09:25:06 -0500
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S932168AbWBXOZG
	(ORCPT <rfc822;git-outgoing>); Fri, 24 Feb 2006 09:25:06 -0500
Received: from theworths.org ([217.160.253.102]:30868 "EHLO theworths.org")
	by vger.kernel.org with ESMTP id S932151AbWBXOZE (ORCPT
	<rfc822;git@vger.kernel.org>); Fri, 24 Feb 2006 09:25:04 -0500
Received: (qmail 2290 invoked from network); 24 Feb 2006 09:25:03 -0500
Received: from localhost (HELO raht.cworth.org) (127.0.0.1)
  by localhost with SMTP; 24 Feb 2006 09:25:03 -0500
To: Andreas Ericsson <ae@op5.se>
In-Reply-To: <43FED93D.1000601@op5.se>
User-Agent: Wanderlust/2.14.0 (Africa) Emacs/21.4 Mule/5.0 (SAKAKI)
Sender: git-owner@vger.kernel.org
Precedence: bulk
X-Mailing-List: git@vger.kernel.org
Archived-At: <http://permalink.gmane.org/gmane.comp.version-control.git/16704>

--pgp-sign-Multipart_Fri_Feb_24_06:23:35_2006-1
Content-Type: text/plain; charset=US-ASCII

On Fri, 24 Feb 2006 11:00:29 +0100, Andreas Ericsson wrote:
> 
> I've said it before, and I'll say it again. This tool provides less 
> flexibility and much less power than "git checkout -b branch 
> <commit-ish>"

Yes, that's by design. It's not intended to be a replacement for git
checkout -b. It's intended to be easier to use than that when its
purpose fits what you want to to.

> > 1) invent a throwaway name,
> 
> All programmers have at least five throwaway names that are only ever 
> used as such (mine are, in order of precedence, foo, bar, tmp, fnurg, 
> sdf and asd).

Sure, and when I use "git checkout -b" I have to keep trying these
linearly until I found one that is available. That's what I've been
doing, and it's painful enough that I wrote this. (Though yes,
something like checkout -o would help here).

> > 2) remember the branch I started on,
> 
> With topic branches, you need to pick more careful topic names. Without 
> topic branches you're always on "master". Surely you know what the 
> patches touch, so you know what branch they should be in.

I almost put "remember" in quotation marks. Obviously I know what I'm
working on. It's more a matter of just having to type the name, (I do
use very careful topic names so they tend to be longish). Having
tab-completion for git-checkout would help here.

So (1) and (2) have potential workarounds, but neither exists, and
even then they would still be harder to use than git-seek.

> > 3) remember to actually throwaway the temporary branch.
> 
> This isn't always a bad thing, since you after applying some patch or 
> other decide you want to go back to this point in history,

That assumes that I've made any change though. If you're going back in
the past to make changes, then "git checkout -b" is the right thing to
use. It's when you're not planning to make changes, but just exploring
the past that "git seek" is helpful.

So (3) is just extra pain when using git-seek for what its designed to
be good for, (exploring history when not planning on writing to it).

But note that the git-seek I've implemented *does* provide a writable
branch, so if you discover that you do want to commit something, then
that's always available. Linus gave compelling arguments for this.

>                In that case, you need to remember to add the 
> branch/tag/whatever to where you seeked rather than just go on with the 
> work. Removing a branch later is simple. Finding the right spot to 
> create it later can be trouble-some.

Yes. And that's why git-seek stops and warns you before it leaves
dangling commits by moving the branch. (Though it might make sense to
add a -f option to force it to seek regardless of the things it
currently balks at.)

> If I had a vote, I'd say no to this patch, and to this tool entirely.

One argument in favor is that seeking already exists in git privately
within git-bisect. Exposing git-seek makes it easier to code new
operations along the lines of git-bisect. It's certainly consistent
with git's current implementation strategy to have the more primitive
pieces of complex operations exported and available.

-Carl

--pgp-sign-Multipart_Fri_Feb_24_06:23:35_2006-1
Content-Type: application/pgp-signature
Content-Transfer-Encoding: 7bit

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.2 (GNU/Linux)

iD4DBQBD/xbu6JDdNq8qSWgRAq35AJ4hdkXJ1Q3KflKLCxr5jbgP/jEZ5wCYw4Ro
fE//UBHaHu0Onp/4jEKvrw==
=1z+j
-----END PGP SIGNATURE-----

--pgp-sign-Multipart_Fri_Feb_24_06:23:35_2006-1--
