From: "Greg A. Woods" <woods@planix.com>
Subject: Re: multiple working directories for long-running builds (was:	"git merge" merges too much!)
Date: Tue, 01 Dec 2009 17:44:15 -0500
Message-ID: <m1NFbSE-000kn2C@most.weird.com>
References: <m1NEaLp-000kn1C@most.weird.com>
	<7vskbxewti.fsf@alter.siamese.dyndns.org>
	<m1NFBAx-000kmgC@most.weird.com>
	<20091130211744.GA27278@dpotapov.dyndns.org>
	<m1NFGXS-000kn2C@most.weird.com>
	<20091201054734.GB11235@dpotapov.dyndns.org>
	<m1NFX19-000kn4C@most.weird.com>
	<20091201185114.GC11235@dpotapov.dyndns.org>
	<m1NFXvL-000kn2C@most.weird.com>
	<20091201211830.GE11235@dpotapov.dyndns.org>
Reply-To: The Git Mailing List <git@vger.kernel.org>
Mime-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: multipart/signed;
 boundary="pgp-sign-Multipart_Tue_Dec__1_17:44:15_2009-1"; micalg=pgp-sha1;
 protocol="application/pgp-signature"
Content-Transfer-Encoding: 7bit
To: The Git Mailing List <git@vger.kernel.org>
X-From: git-owner@vger.kernel.org Tue Dec 01 23:44:30 2009
Return-path: <git-owner@vger.kernel.org>
Envelope-to: gcvg-git-2@lo.gmane.org
Received: from vger.kernel.org ([209.132.176.167])
	by lo.gmane.org with esmtp (Exim 4.50)
	id 1NFbSL-0002u5-I8
	for gcvg-git-2@lo.gmane.org; Tue, 01 Dec 2009 23:44:25 +0100
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1754220AbZLAWoO (ORCPT <rfc822;gcvg-git-2@m.gmane.org>);
	Tue, 1 Dec 2009 17:44:14 -0500
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S1754170AbZLAWoN
	(ORCPT <rfc822;git-outgoing>); Tue, 1 Dec 2009 17:44:13 -0500
Received: from most.robohack.planix.com ([204.92.254.2]:60165 "EHLO
	most.weird.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1754046AbZLAWoN (ORCPT <rfc822;git@vger.kernel.org>);
	Tue, 1 Dec 2009 17:44:13 -0500
Received: from once.weird.com
	([204.92.254.13] port=49264)
	by most.weird.com([204.92.254.2] port=25)
	via TCP with esmtp (6117 bytes)
	(sender: <woods@once.weird.com>)
	(ident <woods> using rfc1413)
	id <m1NFbSE-000kn2C@most.weird.com>
	for <git@vger.kernel.org>;
	Tue, 1 Dec 2009 17:44:18 -0500 (EST)
	(Smail-3.2.0.122-Pre 2005-Nov-17 #1 built 2009-Feb-3)
In-Reply-To: <20091201211830.GE11235@dpotapov.dyndns.org>
User-Agent: Wanderlust/2.15.6 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.7 (=?ISO-8859-4?Q?Sanj=F2?=) APEL/10.7 Emacs/22.3
 (i386--netbsdelf) MULE/5.0 (SAKAKI)
X-Face: ;j3Eth2XV8h1Yfu<eXd9JL+"t;iT8?{X]Fjm`Qb]>*uL{<:dQ$#E[DB0gemGZJ"J#4fH*][
 lz;@-iwMv_u\6uIEKR0KY"=MzoQH#CrqBN`nG_5B@rrM8,f~Gr&h5a\=<t0loVf0$}bP=]i3OMh"n_
 _@m4/,~2`V=(-9LyW.)'`@E_fE^<4y7)BIe`A''/j-Y#gDNZERh%CCij'q-NA4F<|yjznEhd7=l^xH
 2.qD3o0IanGHERTW+z$G
Sender: git-owner@vger.kernel.org
Precedence: bulk
List-ID: <git.vger.kernel.org>
X-Mailing-List: git@vger.kernel.org
Archived-At: <http://permalink.gmane.org/gmane.comp.version-control.git/134263>

--pgp-sign-Multipart_Tue_Dec__1_17:44:15_2009-1
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: quoted-printable

At Wed, 2 Dec 2009 00:18:30 +0300, Dmitry Potapov <dpotapov@gmail.com> wrot=
e:
Subject: Re: multiple working directories for long-running builds (was:	"gi=
t merge" merges too much!)
>=20
> AFAIK, "git archive" is cheaper than git clone.

It depends on what you mean by "cheaper"  It's clearly going to require
less disk space.  However it's also clearly going to require more disk
bandwidth, potentially a _LOT_ more disk bandwidth.

> I do not say it is fast
> for huge project, but if you want to run a process such as clean build
> and test that takes a long time anyway, it does not add much to the
> total time.

I think you need to try throwing around an archive of, say, 50,000 small
files a few times simultaneously on your system to appreciate the issue.

(i.e. consider the load on a storage subsystem, say a SAN or NAS, where
with your suggestion there might be a dozen or more developers running
"git archive" frequently enough that even three or four might be doing
it at the same time, and this on top of all the i/o bandwidth required
for the builds all of the other developers are also running at the same
time.)


> > Disk bandwidth is almost always more expensive than disk space.
>=20
> Disk bandwidth is certainly more expensive than disk space, and the
> whole point was to avoid a lot of disk bandwidth by using hot cache.

Huh?  Throwing around the archive has nothing to do with the build
system in this case.

Please let me worry about optimizing the builds -- that's well under
control already and is not really yet an issue for the VCS, at least
not yet, and maybe never in many cases.

I'm just not willing to even consider using what would really be the
most simplistic and most expensive form of updating a working directory
as could ever be imagined.  "Git archive" is truly unintelligent, as-is.

Perhaps if "git archive" could talk intelligently to an rsync process
and be smart about updating an existing working directory it would be
the ideal answer, but _NEVER_ with the current method of just unpacking
an archive over an existing directory!  (Now there's a good Google SoC,
or masters, project for someone eager to learn about rsync & git
internals!)

Local filesystem "git clone" is usable in many scenarios, but it just
won't work nearly so efficiently in a scenario where users have local
repos on their workstations and use an NFS NAS to feed the build
servers.  As I understand it this 'git-new-workdir' script will work
though since it uses symlinks that can be pointed across the mount back
to the local disk on the user's workstation.  They can just mount the
build directory and go into it and run a "git checkout" and start
another build on the build server(s).

A major further advantage of multiple working directories is that this
eliminates one more point of failure -- i.e. you don't end up with
multiple copies of the repo that _should_ be effectively read-only for
everything but "push", and perhaps then only to one branch.  I don't
like giving developers too much rope, especially in all the wrong
places.  "git archive" does achieve the same even better I suppose, but
without something like a "--format=3Drsync" option it's completely out of
the question.


> Another thing to consider is that if you put a really huge project in one
> Git repo than Git may not be as fast as you may want, because Git tracks
> the whole project as the whole. So, you may want to split your project in
> a few relatively independent modules (See git submodule).

Indeed -- but sometimes I think this is not feasible either.

I know of at least three very real-world projects where there are tens
of thousands of small files that really must be managed as one unit, and
where running a build in that tree could take a whole day or two on even
the fastest currently available dedicated build server.  Eg. pkgsrc.

--=20
						Greg A. Woods
						Planix, Inc.

<woods@planix.com>       +1 416 218 0099        http://www.planix.com/

--pgp-sign-Multipart_Tue_Dec__1_17:44:15_2009-1
Content-Type: application/pgp-signature
Content-Transfer-Encoding: 7bit

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (NetBSD)

iD8DBQBLFZw/Zn1xt3i/9H8RAvJBAJ0c+J11Kq2ypRrs1k/b5zGNbsjHpACgtTpv
4DQdbzOyQfcnPGtRsvuVbMk=
=8/b3
-----END PGP SIGNATURE-----

--pgp-sign-Multipart_Tue_Dec__1_17:44:15_2009-1--
