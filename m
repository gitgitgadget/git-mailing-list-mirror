From: Carl Worth <cworth@cworth.org>
Subject: [PATCH] Improve documentation of git-filter-branch rev-list specification.
Date: Tue, 20 Nov 2007 10:32:39 -0800
Message-ID: <877ikc3gzc.wl%cworth@cworth.org>
Mime-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=US-ASCII
Cc: git@vger.kernel.org
To: Junio C Hamano <gitster@pobox.com>
X-From: git-owner@vger.kernel.org Tue Nov 20 19:34:52 2007
Return-path: <git-owner@vger.kernel.org>
Envelope-to: gcvg-git-2@gmane.org
Received: from vger.kernel.org ([209.132.176.167])
	by lo.gmane.org with esmtp (Exim 4.50)
	id 1IuXve-0004WG-46
	for gcvg-git-2@gmane.org; Tue, 20 Nov 2007 19:34:34 +0100
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1763551AbXKTSd2 (ORCPT <rfc822;gcvg-git-2@m.gmane.org>);
	Tue, 20 Nov 2007 13:33:28 -0500
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S1763487AbXKTSd2
	(ORCPT <rfc822;git-outgoing>); Tue, 20 Nov 2007 13:33:28 -0500
Received: from olra.theworths.org ([82.165.184.25]:64165 "EHLO
	olra.theworths.org" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1763545AbXKTSd0 (ORCPT <rfc822;git@vger.kernel.org>);
	Tue, 20 Nov 2007 13:33:26 -0500
Received: from localhost (localhost [127.0.0.1])
	by olra.theworths.org (Postfix) with ESMTP id 9E0A9431FB1;
	Tue, 20 Nov 2007 10:33:25 -0800 (PST)
X-Virus-Scanned: Debian amavisd-new at olra.theworths.org
Received: from olra.theworths.org ([127.0.0.1])
	by localhost (olra.theworths.org [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id vvpQuPvmT1pf; Tue, 20 Nov 2007 10:33:25 -0800 (PST)
Received: from raht.cworth.org (localhost [127.0.0.1])
	by olra.theworths.org (Postfix) with ESMTP id 7C886431FB0;
	Tue, 20 Nov 2007 10:33:24 -0800 (PST)
User-Agent: Wanderlust/2.14.0 (Africa) Emacs/21.4 Mule/5.0 (SAKAKI)
Sender: git-owner@vger.kernel.org
Precedence: bulk
X-Mailing-List: git@vger.kernel.org
Archived-At: <http://permalink.gmane.org/gmane.comp.version-control.git/65562>

The rev-list is not optional, and a range of a..b will not rewrite
only b. Fix these errors and improve the wording of surrounding text.

Also eliminate the discussion of using no filters to compensate for
hypothetical future bugs. It's not helpful.
---
 Documentation/git-filter-branch.txt |   34 ++++++++++++++++++++--------------
 1 files changed, 20 insertions(+), 14 deletions(-)

diff --git a/Documentation/git-filter-branch.txt b/Documentation/git-filter-branch.txt
index ba9b4fb..985d7d5 100644
--- a/Documentation/git-filter-branch.txt
+++ b/Documentation/git-filter-branch.txt
@@ -13,23 +13,29 @@ SYNOPSIS
 	[--msg-filter <command>] [--commit-filter <command>]
 	[--tag-name-filter <command>] [--subdirectory-filter <directory>]
 	[--original <namespace>] [-d <directory>] [-f | --force]
-	[<rev-list options>...]
+	<rev-list options>...
 
 DESCRIPTION
 -----------
-Lets you rewrite git revision history by rewriting the branches mentioned
-in the <rev-list options>, applying custom filters on each revision.
-Those filters can modify each tree (e.g. removing a file or running
-a perl rewrite on all files) or information about each commit.
-Otherwise, all information (including original commit times or merge
-information) will be preserved.
-
-The command will only rewrite the _positive_ refs mentioned in the
-command line (i.e. if you pass 'a..b', only 'b' will be rewritten).
-If you specify no filters, the commits will be recommitted without any
-changes, which would normally have no effect.  Nevertheless, this may be
-useful in the future for compensating for some git bugs or such,
-therefore such a usage is permitted.
+Rewrites git revision history by applying one or more filters to a set
+of commits. The set of commits to be rewritten is supplied in
+<rev-list options> and can be as simple as one or more branch names,
+(in which case all commits reachable from those branch names will be
+rewritten).
+
+The filters can modify the tree content stored in each commit,
+(e.g. removing a file or running a perl rewrite on all files), or the
+associated information about each commit, (commit message, author,
+parent, etc.). Any information not affected by a filter (including
+original commit times or merge information) will be preserved. If you
+specify no filters, the commits will be recommitted without any
+changes.
+
+Note that passing a range of commits specified with the a..b notation
+will rewrite 'b' and all commits reachable from 'b' but not reachable
+from 'a', but will not rewrite the commit 'a' itself. This is
+consistent with the handling of a range by git-log and other git
+commands.
 
 *WARNING*! The rewritten history will have different object names for all
 the objects and will not converge with the original branch.  You will not
-- 
1.5.3.4
