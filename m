From: Elia Pinto <gitter.spiros@gmail.com>
Subject: [PATCH v2 014/142] t0030-stripspace.sh: use the $( ... ) construct for command substitution
Date: Tue, 25 Mar 2014 10:22:35 -0700
Message-ID: <1395768283-31135-15-git-send-email-gitter.spiros@gmail.com>
References: <1395768283-31135-1-git-send-email-gitter.spiros@gmail.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: QUOTED-PRINTABLE
Cc: Elia Pinto <gitter.spiros@gmail.com>
To: git@vger.kernel.org
X-From: git-owner@vger.kernel.org Tue Mar 25 18:37:23 2014
Return-path: <git-owner@vger.kernel.org>
Envelope-to: gcvg-git-2@plane.gmane.org
Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <git-owner@vger.kernel.org>)
	id 1WSVHt-0001NU-T7
	for gcvg-git-2@plane.gmane.org; Tue, 25 Mar 2014 18:37:22 +0100
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1755630AbaCYRdg convert rfc822-to-quoted-printable (ORCPT
	<rfc822;gcvg-git-2@m.gmane.org>); Tue, 25 Mar 2014 13:33:36 -0400
Received: from mail-pa0-f45.google.com ([209.85.220.45]:40455 "EHLO
	mail-pa0-f45.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1755296AbaCYRZG (ORCPT <rfc822;git@vger.kernel.org>);
	Tue, 25 Mar 2014 13:25:06 -0400
Received: by mail-pa0-f45.google.com with SMTP id kl14so735051pab.32
        for <git@vger.kernel.org>; Tue, 25 Mar 2014 10:25:06 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=from:to:cc:subject:date:message-id:in-reply-to:references
         :mime-version:content-type:content-transfer-encoding;
        bh=9Y49X6atFU6ZVN3BecUNTl2Cd4OQnu/eTu6I+Dk3QB0=;
        b=uv7rJaFgP8HaDMPS9SvYGIUQRUdY9ItkvvmcE9rJiUAt1GxRkfzAP8hx/6dPC0VOiC
         T0BZCjJCfhHFx6YswhCgDlFBZkGyZLjb/fdeKFo+5wCYJP3N8Dtg0pkEa97krs7SNf0H
         EzYiCDMhj6WsCz5n5RjkeZo5zdsVyjwuB7d54jsQjoY2QbQtE1odiVm/iw5c3XvCMm0f
         SqO3NT1u8l7VyUMDFgkeiuFD4uZgqZCwT5WF9yMDyxCkk/4LeGvAPYOnkRyv6ltdhE5C
         Xw6D5V4wbeAvw/LpVhSMu6uw7C87FJ2M7V5sAlUIFSgw152VJgjlyYzLyjFudyBYWXEU
         Yklw==
X-Received: by 10.66.217.133 with SMTP id oy5mr81440684pac.46.1395768306433;
        Tue, 25 Mar 2014 10:25:06 -0700 (PDT)
Received: from devzero2000ubu.nephoscale.com (140.195.207.67.nephoscale.net. [67.207.195.140])
        by mx.google.com with ESMTPSA id x5sm47105136pbw.26.2014.03.25.10.25.04
        for <multiple recipients>
        (version=TLSv1.1 cipher=ECDHE-RSA-RC4-SHA bits=128/128);
        Tue, 25 Mar 2014 10:25:05 -0700 (PDT)
X-Mailer: git-send-email 1.7.10.4
In-Reply-To: <1395768283-31135-1-git-send-email-gitter.spiros@gmail.com>
Sender: git-owner@vger.kernel.org
Precedence: bulk
List-ID: <git.vger.kernel.org>
X-Mailing-List: git@vger.kernel.org
Archived-At: <http://permalink.gmane.org/gmane.comp.version-control.git/245135>

The Git CodingGuidelines prefer the $( ... ) construct for command
substitution instead of using the back-quotes, or grave accents (`..`).

The backquoted form is the historical method for command substitution,
and is supported by POSIX. However, all but the simplest uses become
complicated quickly. In particular, embedded command substitutions
and/or the use of double quotes require careful escaping with the backs=
lash
character. Because of this the POSIX shell adopted the $(=E2=80=A6) fea=
ture from
the Korn shell.

The patch was generated by the simple script

for _f in $(find . -name "*.sh")
do
=C2=A0 sed -i 's@`\(.*\)`@$(\1)@g' ${_f}
done

Signed-off-by: Elia Pinto <gitter.spiros@gmail.com>
---
 t/t0030-stripspace.sh |   20 ++++++++++----------
 1 file changed, 10 insertions(+), 10 deletions(-)

diff --git a/t/t0030-stripspace.sh b/t/t0030-stripspace.sh
index a8e84d8..0333dd9 100755
--- a/t/t0030-stripspace.sh
+++ b/t/t0030-stripspace.sh
@@ -225,22 +225,22 @@ test_expect_success \
=20
 test_expect_success \
     'text without newline at end should end with newline' '
-    test `printf "$ttt" | git stripspace | wc -l` -gt 0 &&
-    test `printf "$ttt$ttt" | git stripspace | wc -l` -gt 0 &&
-    test `printf "$ttt$ttt$ttt" | git stripspace | wc -l` -gt 0 &&
-    test `printf "$ttt$ttt$ttt$ttt" | git stripspace | wc -l` -gt 0
+    test $(printf "$ttt" | git stripspace | wc -l) -gt 0 &&
+    test $(printf "$ttt$ttt" | git stripspace | wc -l) -gt 0 &&
+    test $(printf "$ttt$ttt$ttt" | git stripspace | wc -l) -gt 0 &&
+    test $(printf "$ttt$ttt$ttt$ttt" | git stripspace | wc -l) -gt 0
 '
=20
 # text plus spaces at the end:
=20
 test_expect_success \
     'text plus spaces without newline at end should end with newline' =
'
-    test `printf "$ttt$sss" | git stripspace | wc -l` -gt 0 &&
-    test `printf "$ttt$ttt$sss" | git stripspace | wc -l` -gt 0 &&
-    test `printf "$ttt$ttt$ttt$sss" | git stripspace | wc -l` -gt 0 &&
-    test `printf "$ttt$sss$sss" | git stripspace | wc -l` -gt 0 &&
-    test `printf "$ttt$ttt$sss$sss" | git stripspace | wc -l` -gt 0 &&
-    test `printf "$ttt$sss$sss$sss" | git stripspace | wc -l` -gt 0
+    test $(printf "$ttt$sss" | git stripspace | wc -l) -gt 0 &&
+    test $(printf "$ttt$ttt$sss" | git stripspace | wc -l) -gt 0 &&
+    test $(printf "$ttt$ttt$ttt$sss" | git stripspace | wc -l) -gt 0 &=
&
+    test $(printf "$ttt$sss$sss" | git stripspace | wc -l) -gt 0 &&
+    test $(printf "$ttt$ttt$sss$sss" | git stripspace | wc -l) -gt 0 &=
&
+    test $(printf "$ttt$sss$sss$sss" | git stripspace | wc -l) -gt 0
 '
=20
 test_expect_success \
--=20
1.7.10.4
