From: Eric Sunshine <sunshine@sunshineco.com>
Subject: Re: [PATCH v5 2/2] t7102: add 'reset -' tests
Date: Fri, 13 Mar 2015 17:10:43 -0400
Message-ID: <CAPig+cRQ9ZZ9573SvA9HPNLtE6s0U6TGnDfgpRD-osReAQgJJA@mail.gmail.com>
References: <1426270716-22405-1-git-send-email-sudshekhar02@gmail.com>
	<1426270716-22405-2-git-send-email-sudshekhar02@gmail.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Cc: Git List <git@vger.kernel.org>,
	Matthieu Moy <Matthieu.Moy@grenoble-inp.fr>,
	Junio C Hamano <gitster@pobox.com>,
	David Aguilar <davvid@gmail.com>
To: Sudhanshu Shekhar <sudshekhar02@gmail.com>
X-From: git-owner@vger.kernel.org Fri Mar 13 22:10:51 2015
Return-path: <git-owner@vger.kernel.org>
Envelope-to: gcvg-git-2@plane.gmane.org
Received: from vger.kernel.org ([209.132.180.67])
	by plane.gmane.org with esmtp (Exim 4.69)
	(envelope-from <git-owner@vger.kernel.org>)
	id 1YWWr3-0005f6-Mk
	for gcvg-git-2@plane.gmane.org; Fri, 13 Mar 2015 22:10:50 +0100
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1752552AbbCMVKp (ORCPT <rfc822;gcvg-git-2@m.gmane.org>);
	Fri, 13 Mar 2015 17:10:45 -0400
Received: from mail-yk0-f171.google.com ([209.85.160.171]:39416 "EHLO
	mail-yk0-f171.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
	with ESMTP id S1752543AbbCMVKo (ORCPT <rfc822;git@vger.kernel.org>);
	Fri, 13 Mar 2015 17:10:44 -0400
Received: by ykp131 with SMTP id 131so11659015ykp.6
        for <git@vger.kernel.org>; Fri, 13 Mar 2015 14:10:43 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:sender:in-reply-to:references:date:message-id:subject
         :from:to:cc:content-type;
        bh=gD8mfgMZE6HoGPIsz5/kJ7Nh4BOQOn4eptm425Q+MOc=;
        b=C5rZ03Xu927o5uZyCAdGIKAw8u2J8Q2tdnWtL0092ebeV3+PXcHbn1pduuFwqii01Y
         Fp/+NSaZJRlX5LH+tAPAavEJ+uyxUwi/pNxgOLl1OgXTZvkRA4xhUBJdQ6txUzdlK9A+
         Jj5l/UQbsDLprAeHkatnDhRnj+EY5RLOTrCbY9YZpHcjfVKbXuEuk+ke56oloyQ53Akg
         aM+ln6Un/2t7CL/lixxMulnOvZSu9nca3uSYyHCFnRo6fV0xCeTJYbD7JrUp5oeDyS+Z
         aygEPgSbzVyUDlB27v8obsm6S6+p7fHMr5TCqrKRnvmESxSorYIfv4D+dv2NHgCiK5D7
         ZTrg==
X-Received: by 10.236.202.238 with SMTP id d74mr49033664yho.166.1426281043360;
 Fri, 13 Mar 2015 14:10:43 -0700 (PDT)
Received: by 10.170.73.7 with HTTP; Fri, 13 Mar 2015 14:10:43 -0700 (PDT)
In-Reply-To: <1426270716-22405-2-git-send-email-sudshekhar02@gmail.com>
X-Google-Sender-Auth: zA3mMzcBuncK7ju4MwHUWr0qTkY
Sender: git-owner@vger.kernel.org
Precedence: bulk
List-ID: <git.vger.kernel.org>
X-Mailing-List: git@vger.kernel.org
Archived-At: <http://permalink.gmane.org/gmane.comp.version-control.git/265421>

On Fri, Mar 13, 2015 at 2:18 PM, Sudhanshu Shekhar
<sudshekhar02@gmail.com> wrote:
> Add following test cases:
> 1) Confirm error message when git reset is used with no previous branch
> 2) Confirm git reset - works like git reset @{-1}
> 3) Confirm "-" is always treated as a commit unless the -- file option
> is specified
> 4) Confirm "git reset -" works normally even when a file named @{-1} is
> present
>
> Helped-by: Eric Sunshine <sunshine@sunshineco.com>
> Helped-by: Matthieu Moy <Matthieu.Moy@grenoble-inp.fr>
> Helped-by: David Aguilar <davvid@gmail.com>
> Signed-off-by: Sudhanshu Shekhar <sudshekhar02@gmail.com>
> ---
> Eric: Thank you for pointing out the mistake. The '&&' after the Here
> Docs was causing the issue. I have removed the concatenation from
> there, hope that's okay.

The && needs to go on the first line, not the last line of the here-doc.

However, that was not my main concern in the previous review. What
disturbed me was that the new tests, which were supposed to be
checking if "-" behaved as @{-1}, were succeeding even without patch
1/2 applied which implemented the "-" alias for @{-1}. That seems
wrong. I don't think you particularly addressed that issue in this
version (even though the first couple tests will now fail without 1/2
due to the changed error message).

> Regarding the @{-1} test case, I created it as a check for Junio's
> comment on the error message generated by "git reset -" when a file
> named @{-1} is there.  Since, in this situation "git reset @{-1}" will
> return an error (but "reset -" shouldn't).

Reminder: Wrap commentary to about column 72, as you would the commit
message. (I re-wrapped it manually to reply to it.)

> I have renamed the folder to 'dash' as suggested by you, keeping the
> old name only where it made sense.

Considering that the test titles already tell us the intent of the
tests, I don't find that the directory name "no_previous" adds much
value to tests checking the behavior of "-" with no previous branch. A
single, consistent name used throughout all these tests would be less
surprising and place smaller cognitive load on the reader.

More below.

> diff --git a/t/t7102-reset.sh b/t/t7102-reset.sh
> index 98bcfe2..18523c1 100755
> --- a/t/t7102-reset.sh
> +++ b/t/t7102-reset.sh
> @@ -568,4 +568,162 @@ test_expect_success 'reset --mixed sets up work tree' '
>         test_cmp expect actual
>  '
>
> +test_expect_success 'reset - with no previous branch fails' '
> +       git init no_previous &&
> +       test_when_finished rm -rf no_previous &&
> +       (
> +               cd no_previous &&
> +               test_must_fail git reset - 2>actual
> +       ) &&
> +       test_i18ngrep "ambiguous argument" no_previous/actual
> +'
> +
> +test_expect_success 'reset - while having file named - and no previous branch fails' '
> +       git init no_previous &&
> +       test_when_finished rm -rf no_previous &&
> +       (
> +               cd no_previous &&
> +               >- &&
> +               test_must_fail git reset - 2>actual
> +       ) &&
> +       test_i18ngrep "ambiguous argument" no_previous/actual
> +'
> +
> +

Style: Unnecessary extra blank line.

> +test_expect_success \
> +       'reset - in the presence of file named - with previous branch resets commit' '
> +       cat >expect <<-EOF

Place the && at the end of this line. Also, prefix EOF with a
backslash to indicate that you don't intend any interpolation to occur
within the here-doc. So:

    cat >expect <<-\EOF &&

Ditto for the remaining tests.

> +       Unstaged changes after reset:
> +       M       -
> +       M       file
> +       EOF
> +       git init dash &&
> +       test_when_finished rm -rf dash &&
> +       (
> +               cd dash &&
> +               >- &&
> +               >file &&
> +               git add file - &&
> +               git commit -m "add base files" &&
> +               git checkout -b new_branch &&
> +               echo "random" >- &&
> +               echo "wow" >file &&
> +               git add file - &&
> +               git reset - >../actual
> +       ) &&
> +       test_cmp expect actual
> +'
> +test_expect_success \
> +       'reset - in the presence of file named - with -- option resets commit' '
> +       cat >expect <<-EOF
> +       Unstaged changes after reset:
> +       M       -
> +       M       file
> +       EOF
> +       git init dash &&
> +       test_when_finished rm -rf dash &&
> +       (
> +               cd dash &&
> +               >- &&
> +               >file &&
> +               git add file - &&
> +               git commit -m "add base files" &&
> +               git checkout -b new_branch &&
> +               echo "random" >- &&
> +               echo "wow" >file &&
> +               git add file - &&
> +               git reset - -- >../actual
> +       ) &&
> +       test_cmp expect actual
> +'
> +
> +test_expect_success 'reset - in the presence of file named - with -- file option resets file' '
> +       cat >expect <<-EOF
> +       Unstaged changes after reset:
> +       M       -
> +       EOF
> +       git init dash &&
> +       test_when_finished rm -rf dash &&
> +       (
> +               cd dash &&
> +               >- &&
> +               >file &&
> +               git add file - &&
> +               git commit -m "add base files" &&
> +               git checkout -b new_branch &&
> +               echo "random" >- &&
> +               echo "wow" >file &&
> +               git add file - &&
> +               git reset -- - >../actual
> +       ) &&
> +       test_cmp expect actual
> +'
> +test_expect_success \
> +       'reset - in the presence of file named - with both pre and post -- option resets file' '
> +       cat >expect <<-EOF
> +       Unstaged changes after reset:
> +       M       -
> +       EOF
> +       git init dash &&
> +       test_when_finished rm -rf dash &&
> +       (
> +               cd dash &&
> +               >- &&
> +               >file &&
> +               git add file - &&
> +               git commit -m "add base files" &&
> +               git checkout -b new_branch &&
> +               echo "random" >- &&
> +               echo "wow" >file &&
> +               git add file - &&
> +               git reset - -- - >../actual
> +       ) &&
> +       test_cmp expect actual
> +'
> +
> +test_expect_success 'reset - works same as reset @{-1}' '
> +       git init dash &&
> +       test_when_finished rm -rf dash &&
> +       (
> +               cd dash &&
> +               echo "file1" >file1 &&
> +               git add file1 &&
> +               git commit -m "base commit" &&
> +               git checkout -b temp &&
> +               echo "new file" >file &&
> +               git add file &&
> +               git commit -m "added file" &&
> +               git reset - &&
> +               git status --porcelain >../actual &&
> +               git add file &&
> +               git commit -m "added file" &&
> +               git reset @{-1} &&
> +               git status --porcelain >../expect
> +       ) &&
> +       test_cmp expect actual
> +'
> +
> +test_expect_success 'reset - with file named @{-1} succeeds' '
> +       cat >expect <<-EOF
> +       Unstaged changes after reset:
> +       M       @{-1}
> +       M       file
> +       EOF
> +       git init dash &&
> +       test_when_finished rm -rf dash &&
> +       (
> +               cd dash &&
> +               echo "random" >@{-1} &&
> +               echo "random" >file &&
> +               git add @{-1} file &&
> +               git commit -m "base commit" &&
> +               git checkout -b new_branch &&
> +               echo "additional stuff" >>file &&
> +               echo "additional stuff" >>@{-1} &&
> +               git add file @{-1} &&
> +               git reset - >../actual
> +       ) &&
> +       test_cmp expect actual
> +'
> +
>  test_done
> --
> 2.3.1.277.gd67f9d5.dirty
