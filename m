From: Carl Worth <cworth@cworth.org>
Subject: Re: FEATURE REQUEST: git-format-path: Add option to encode patch content
Date: Fri, 27 Apr 2007 14:20:04 -0700
Message-ID: <87y7kdo6pn.wl%cworth@cworth.org>
References: <ps5qyry4.fsf@cante.net>
	<7vslalmwcx.fsf@assigned-by-dhcp.cox.net>
Mime-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: multipart/signed;
 boundary="pgp-sign-Multipart_Fri_Apr_27_14:20:04_2007-1"; micalg=pgp-sha1;
 protocol="application/pgp-signature"
Content-Transfer-Encoding: 7bit
Cc: Jari Aalto <jari.aalto@cante.net>, git@vger.kernel.org
To: Junio C Hamano <junkio@cox.net>
X-From: git-owner@vger.kernel.org Fri Apr 27 23:20:45 2007
Return-path: <git-owner@vger.kernel.org>
Envelope-to: gcvg-git@gmane.org
Received: from vger.kernel.org ([209.132.176.167])
	by lo.gmane.org with esmtp (Exim 4.50)
	id 1HhXrv-0001O7-Aj
	for gcvg-git@gmane.org; Fri, 27 Apr 2007 23:20:43 +0200
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1757318AbXD0VUd (ORCPT <rfc822;gcvg-git@m.gmane.org>);
	Fri, 27 Apr 2007 17:20:33 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S1757322AbXD0VUd
	(ORCPT <rfc822;git-outgoing>); Fri, 27 Apr 2007 17:20:33 -0400
Received: from theworths.org ([217.160.253.102]:45797 "EHLO theworths.org"
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1757005AbXD0VUa (ORCPT <rfc822;git@vger.kernel.org>);
	Fri, 27 Apr 2007 17:20:30 -0400
Received: (qmail 22015 invoked from network); 27 Apr 2007 17:20:04 -0400
Received: from localhost (HELO raht.cworth.org) (127.0.0.1)
  by localhost with SMTP; 27 Apr 2007 17:20:04 -0400
In-Reply-To: <7vslalmwcx.fsf@assigned-by-dhcp.cox.net>
User-Agent: Wanderlust/2.14.0 (Africa) Emacs/21.4 Mule/5.0 (SAKAKI)
Sender: git-owner@vger.kernel.org
Precedence: bulk
X-Mailing-List: git@vger.kernel.org
Archived-At: <http://permalink.gmane.org/gmane.comp.version-control.git/45755>

--pgp-sign-Multipart_Fri_Apr_27_14:20:04_2007-1
Content-Type: text/plain; charset=US-ASCII

On Fri, 27 Apr 2007 12:49:02 -0700, Junio C Hamano wrote:
> Keeping patches reviewable in recipient's MUA is important.

Absolutely.

> In the community git originates from, even --inline attachments
> are frowned upon, let alone --attach multiparts (yes, I am
> talking about the kernel list and this list).  Nobody who sends
> patches over e-mail in communities that have a tradition against
> unreadable patches would be using --inline nor --attach anyway,
> so making --attach to do base64 would not hurt there.

I know I'm not within the kernel or git party line by saying this, but
I don't have a problem with (non base64) mime-attached patches. My MUA
displays them fine and quotes them when I reply so I can easily review
them.

I have even wished that git-am would accept a message with multiple
attachments and apply each in series. But, no, I'm not about to write
that myself either.

Instead we've gotten by with using the output of "git format-patch
--stdout from..to > feature.patchset" and attaching that. But even
then, I'd like something like git-am that knew how to process an email
message like that, (that is, not trying to use the subject and from
lines for commit information). As is, I just have to arrange for the
attachment to get piped to git-am instead of the entire message.

If nothing else, there's a datapoint from a separate community that
also has a tradition against unreadable patches.

My MUA doesn't have support (that I know of) for piping a sequence of
messages to a command. Do your MUAs? If not, how do people generally
handle long sequences of [n/N] patch emails?

-Carl

--pgp-sign-Multipart_Fri_Apr_27_14:20:04_2007-1
Content-Type: application/pgp-signature
Content-Transfer-Encoding: 7bit

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.6 (GNU/Linux)

iD8DBQBGMmkE6JDdNq8qSWgRAqWmAJwM4tGZqPS/D8l0n9y6aorU+78t+QCcCDMk
ttpntGbsUZnuiVgrN2vl2IQ=
=ikOq
-----END PGP SIGNATURE-----

--pgp-sign-Multipart_Fri_Apr_27_14:20:04_2007-1--
