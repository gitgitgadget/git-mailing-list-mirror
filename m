From: Daniel Barkalow <barkalow@iabervon.org>
Subject: Re: /etc in git?
Date: Thu, 19 Jan 2006 17:22:57 -0500 (EST)
Message-ID: <Pine.LNX.4.64.0601191700120.25300@iabervon.org>
References: <b476569a0601181943y6a14e703k1b521a7edb9e2e2@mail.gmail.com>
 <7vlkxckf7o.fsf@assigned-by-dhcp.cox.net> <b476569a0601182040w581b72b7xbb99845da4085646@mail.gmail.com>
 <7v64ogkdtu.fsf@assigned-by-dhcp.cox.net>
Mime-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Cc: Junio C Hamano <junkio@cox.net>, git@vger.kernel.org
X-From: git-owner@vger.kernel.org Thu Jan 19 23:21:33 2006
Return-path: <git-owner@vger.kernel.org>
Envelope-to: gcvg-git@gmane.org
Received: from vger.kernel.org ([209.132.176.167])
	by ciao.gmane.org with esmtp (Exim 4.43)
	id 1Ezi9b-0003yQ-25
	for gcvg-git@gmane.org; Thu, 19 Jan 2006 23:21:15 +0100
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1422670AbWASWVL (ORCPT <rfc822;gcvg-git@m.gmane.org>);
	Thu, 19 Jan 2006 17:21:11 -0500
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S1422675AbWASWVL
	(ORCPT <rfc822;git-outgoing>); Thu, 19 Jan 2006 17:21:11 -0500
Received: from iabervon.org ([66.92.72.58]:34316 "EHLO iabervon.org")
	by vger.kernel.org with ESMTP id S1422670AbWASWVJ (ORCPT
	<rfc822;git@vger.kernel.org>); Thu, 19 Jan 2006 17:21:09 -0500
Received: (qmail 4037 invoked by uid 1000); 19 Jan 2006 17:22:57 -0500
Received: from localhost (sendmail-bs@127.0.0.1)
  by localhost with SMTP; 19 Jan 2006 17:22:57 -0500
To: Adam Hunt <kinema@gmail.com>
In-Reply-To: <7v64ogkdtu.fsf@assigned-by-dhcp.cox.net>
Sender: git-owner@vger.kernel.org
Precedence: bulk
X-Mailing-List: git@vger.kernel.org
Archived-At: <http://permalink.gmane.org/gmane.comp.version-control.git/14941>

On Wed, 18 Jan 2006, Junio C Hamano wrote:

> Adam Hunt <kinema@gmail.com> writes:
> 
> > Do you have any more details by chance?  Does it work?  Does it work
> > well?  How does one do it?
> 
> I personally feel it is a horrible and stupid thing to do, if by
> "version control /etc" you mean to have /.git which controls
> /etc/hosts and stuff in place.  It would work (git does not
> refuse to run as root).  But being a *source* control system, we
> deliberately refuse to store the full permission bits, so if
> your /etc/shadow is mode 0600 while /etc/hosts is mode 0644, you
> have to make sure they stay that way after checking things out.

At some point, people considered setting up an object type that would have 
all of the bits. That is, if you want a directory to come out literally 
the same as it went in, uid/gid/sticky-bit and all, you'd do something 
special to make this happen.

I think you could do some nifty stuff where you have git take care of 
/etc, and make all your changes to clones of the repository, push them, 
and check them out. I bet you could even have three-way merge on package 
installs this way; install the package into a fake root that has the /etc 
generated by the install of the previous version of the package (i.e., 
without your changes), commit that head, then merge that head into your 
master branch etc (in a non-real working tree, of course), check over the 
result, commit, push to the real repository, and check out. For that 
matter, you could probably generate the "package added replacing previous 
package" commit without using a working tree, directly from the package.

(Sure, it's currently set up for source control only, but the original 
theory was general content, and it should be good at producing exactly the 
right directory structure if it had a type to represent exact stuff like 
that)

	-Daniel
*This .sig left intentionally blank*
