From: Carl Worth <cworth@cworth.org>
Subject: Re: Merging commits together into a super-commit
Date: Thu, 10 May 2007 12:48:05 -0700
Message-ID: <87tzuk31fu.wl%cworth@cworth.org>
References: <1178794261.5806.98.camel@murta.transitives.com>
	<4643049C.3D5F30D8@eudaptics.com>
	<alpine.LFD.0.98.0705100857450.3986@woody.linux-foundation.org>
	<87wszg39cp.wl%cworth@cworth.org>
	<20070510171457.GK13719@fieldses.org>
	<87vef0350y.wl%cworth@cworth.org>
	<20070510192106.GB4489@pasky.or.cz>
Mime-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: multipart/signed;
 boundary="pgp-sign-Multipart_Thu_May_10_12:48:00_2007-1"; micalg=pgp-sha1;
 protocol="application/pgp-signature"
Content-Transfer-Encoding: 7bit
Cc: "J. Bruce Fields" <bfields@fieldses.org>,
	Linus Torvalds <torvalds@linux-foundation.org>,
	Johannes Sixt <J.Sixt@eudaptics.com>, git@vger.kernel.org
To: Petr Baudis <pasky@suse.cz>
X-From: git-owner@vger.kernel.org Thu May 10 21:48:35 2007
Return-path: <git-owner@vger.kernel.org>
Envelope-to: gcvg-git@gmane.org
Received: from vger.kernel.org ([209.132.176.167])
	by lo.gmane.org with esmtp (Exim 4.50)
	id 1HmEct-0000PH-Bw
	for gcvg-git@gmane.org; Thu, 10 May 2007 21:48:35 +0200
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1753925AbXEJTsS (ORCPT <rfc822;gcvg-git@m.gmane.org>);
	Thu, 10 May 2007 15:48:18 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S1755031AbXEJTsS
	(ORCPT <rfc822;git-outgoing>); Thu, 10 May 2007 15:48:18 -0400
Received: from theworths.org ([217.160.253.102]:42333 "EHLO theworths.org"
	rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
	id S1750893AbXEJTsR (ORCPT <rfc822;git@vger.kernel.org>);
	Thu, 10 May 2007 15:48:17 -0400
Received: (qmail 20594 invoked from network); 10 May 2007 15:48:05 -0400
Received: from localhost (HELO raht.cworth.org) (127.0.0.1)
  by localhost with SMTP; 10 May 2007 15:48:05 -0400
In-Reply-To: <20070510192106.GB4489@pasky.or.cz>
User-Agent: Wanderlust/2.14.0 (Africa) Emacs/21.4 Mule/5.0 (SAKAKI)
Sender: git-owner@vger.kernel.org
Precedence: bulk
X-Mailing-List: git@vger.kernel.org
Archived-At: <http://permalink.gmane.org/gmane.comp.version-control.git/46891>

--pgp-sign-Multipart_Thu_May_10_12:48:00_2007-1
Content-Type: text/plain; charset=US-ASCII

On Thu, 10 May 2007 21:21:06 +0200, Petr Baudis wrote:
> I think you are underestimating stg here.

Yes, maybe I didn't learn to use it well enough.

> You can stg init just once per branch (ever), I think.

I don't have details now, but I know I ran into some difficulty when
leaving the extra stg state around. It seems that it added stuff that
resulted in some reference of mine becoming ambiguous, ("refspec <foo>
matches more than one" perhaps?). What I do remember is that I couldn't
get one of my standard git push commands to work until I deleted all
of .git/refs/bases and .git/refs/patches and then things started to
work again.

> 	stg uncommit -n N
> 	stg pop -n N-1
> 	..hack..
> 	stg refresh
> 	stg push -a
>
> It seems to be a bit shorter than the sequence you've presented above,
> and overally working with volatile commits using StGIT feels much more
> natural to me - and I haven't even ever used quilt seriously! (I have
> special antipathy to the git reset UI, too.)

The -n option is something I hadn't noticed, and that helps, (except
that what I've got to start with is a git revision name, not a
number).

But there are still some places where an experienced git user runs
into some awkward situations trying to use stg. For example, "stg
refresh" is basically always doing the equivalent of "commit -a" so
there's annoyingly no way to refresh only some of the modified state
into the commit.

Also, if I want to edit a commit message while under the influence of
stg, how do I do that? If I do "git commit --amend" will I seriously
confuse stg, (I'm guessing I would, but I don't know).

It's that kind of uncertainty that makes me uncomfortable to mix git
and stg. And personally, I couldn't get excited about using it alone,
(for example, in addition to the commit message with headline, stg
makes me invent yet _another_ name for every commit---yuck). Not to
mention I'm already quite comfortable with git alone, and all the
flexibility it provides.

Plus, all the stuff that stg provides to allow it to be used
standalone ends up just being noise to the git user that just wants to
do some stack-based manipulation of an unpublished branch, for
example.

So, I'd really like to see something more integrated into git itself
that provides some of the missing functionality.

-Carl

--pgp-sign-Multipart_Thu_May_10_12:48:00_2007-1
Content-Type: application/pgp-signature
Content-Transfer-Encoding: 7bit

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.6 (GNU/Linux)

iD8DBQBGQ3b16JDdNq8qSWgRAo0HAKCH//vTlcSpUXCxX+wT6jbkTNm2QwCfXSi9
PjDhQQG6K4h4TJ2yWWUsSoc=
=5q01
-----END PGP SIGNATURE-----

--pgp-sign-Multipart_Thu_May_10_12:48:00_2007-1--
