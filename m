From: Junio C Hamano <junkio@cox.net>
Subject: Re: Add a "git-describe" command
Date: Sat, 24 Dec 2005 17:42:09 -0800
Message-ID: <7v4q4yq7f2.fsf@assigned-by-dhcp.cox.net>
References: <Pine.LNX.4.64.0512241339120.14098@g5.osdl.org>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Cc: git@vger.kernel.org
X-From: git-owner@vger.kernel.org Sun Dec 25 02:42:31 2005
Return-path: <git-owner@vger.kernel.org>
Envelope-to: gcvg-git@gmane.org
Received: from vger.kernel.org ([209.132.176.167])
	by ciao.gmane.org with esmtp (Exim 4.43)
	id 1EqKu4-0005VH-To
	for gcvg-git@gmane.org; Sun, 25 Dec 2005 02:42:29 +0100
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1750781AbVLYBmO (ORCPT <rfc822;gcvg-git@m.gmane.org>);
	Sat, 24 Dec 2005 20:42:14 -0500
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S1750782AbVLYBmO
	(ORCPT <rfc822;git-outgoing>); Sat, 24 Dec 2005 20:42:14 -0500
Received: from fed1rmmtao09.cox.net ([68.230.241.30]:40148 "EHLO
	fed1rmmtao09.cox.net") by vger.kernel.org with ESMTP
	id S1750781AbVLYBmN (ORCPT <rfc822;git@vger.kernel.org>);
	Sat, 24 Dec 2005 20:42:13 -0500
Received: from assigned-by-dhcp.cox.net ([68.4.9.127])
          by fed1rmmtao09.cox.net
          (InterMail vM.6.01.05.02 201-2131-123-102-20050715) with ESMTP
          id <20051225014213.GLHS25099.fed1rmmtao09.cox.net@assigned-by-dhcp.cox.net>;
          Sat, 24 Dec 2005 20:42:13 -0500
To: Linus Torvalds <torvalds@osdl.org>
In-Reply-To: <Pine.LNX.4.64.0512241339120.14098@g5.osdl.org> (Linus Torvalds's
	message of "Sat, 24 Dec 2005 13:50:45 -0800 (PST)")
User-Agent: Gnus/5.110004 (No Gnus v0.4) Emacs/21.4 (gnu/linux)
Sender: git-owner@vger.kernel.org
Precedence: bulk
X-Mailing-List: git@vger.kernel.org
Archived-At: <http://permalink.gmane.org/gmane.comp.version-control.git/14041>

Linus Torvalds <torvalds@osdl.org> writes:

> What it does is to take any random commit, and "name" it by looking up the 
> most recent commit that is tagged and reachable from that commit.

Sounds useful.

> Comments?

> +static struct commit_name {
> +	const struct commit *commit;
> +	char path[];
> +} **name_array = NULL;

I wonder if some tags are more important than others (we may
want to pick a signed tag that is a bit further down than an
autogenerated snapshot -git47 tag), but that depends on the
usage.  For bug hunting -git47 is more useful than sparsely done
signed tags e.g. -rc4.

> +static void describe(struct commit *cmit)
> +...
> +	list = NULL;
> +	commit_list_insert(cmit, &list);
> +	while (list) {
> +		struct commit *c = pop_most_recent_commit(&list, SEEN);
> +		n = match(c);
> +		if (n) {
> +			printf("%s-g%.8s\n", n->path, sha1_to_hex(cmit->object.sha1));
> +			return;
> +		}
> +	}
> +}

I think this leaks list elements but until/unless this is
libified we would not care too much about it.  We could use
find_unique_abbrev(cmit->object.sha1, 8) but probably it is an
overkill.
